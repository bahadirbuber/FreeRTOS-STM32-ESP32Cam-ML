
RTOS_ML_SPI_CM4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08100000  08100000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000b730  081002a0  081002a0  000102a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0006e198  0810b9e0  0810b9e0  0001b9e0  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  08179b78  08179b78  00089b78  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08179b7c  08179b7c  00089b7c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         000073d0  10000000  08179b80  00090000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00038b24  100073d0  08180f50  000973d0  2**2
                  ALLOC
  7 ._user_heap_stack 00001004  1003fef4  08180f50  0009fef4  2**0
                  ALLOC
  8 .ARM.attributes 00000030  00000000  00000000  000973d0  2**0
                  CONTENTS, READONLY
  9 .comment      00000043  00000000  00000000  00097400  2**0
                  CONTENTS, READONLY
 10 .debug_info   0000eef8  00000000  00000000  00097443  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 00001ece  00000000  00000000  000a633b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges 00000898  00000000  00000000  000a8210  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_rnglists 0000064a  00000000  00000000  000a8aa8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_macro  0003a279  00000000  00000000  000a90f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_line   0000d33c  00000000  00000000  000e336b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_str    00184055  00000000  00000000  000f06a7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_frame  00002570  00000000  00000000  002746fc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str 0000007c  00000000  00000000  00276c6c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

081002a0 <__do_global_dtors_aux>:
 81002a0:	b510      	push	{r4, lr}
 81002a2:	4c05      	ldr	r4, [pc, #20]	; (81002b8 <__do_global_dtors_aux+0x18>)
 81002a4:	7823      	ldrb	r3, [r4, #0]
 81002a6:	b933      	cbnz	r3, 81002b6 <__do_global_dtors_aux+0x16>
 81002a8:	4b04      	ldr	r3, [pc, #16]	; (81002bc <__do_global_dtors_aux+0x1c>)
 81002aa:	b113      	cbz	r3, 81002b2 <__do_global_dtors_aux+0x12>
 81002ac:	4804      	ldr	r0, [pc, #16]	; (81002c0 <__do_global_dtors_aux+0x20>)
 81002ae:	f3af 8000 	nop.w
 81002b2:	2301      	movs	r3, #1
 81002b4:	7023      	strb	r3, [r4, #0]
 81002b6:	bd10      	pop	{r4, pc}
 81002b8:	100073d0 	.word	0x100073d0
 81002bc:	00000000 	.word	0x00000000
 81002c0:	0810b9b8 	.word	0x0810b9b8

081002c4 <frame_dummy>:
 81002c4:	b508      	push	{r3, lr}
 81002c6:	4b03      	ldr	r3, [pc, #12]	; (81002d4 <frame_dummy+0x10>)
 81002c8:	b11b      	cbz	r3, 81002d2 <frame_dummy+0xe>
 81002ca:	4903      	ldr	r1, [pc, #12]	; (81002d8 <frame_dummy+0x14>)
 81002cc:	4803      	ldr	r0, [pc, #12]	; (81002dc <frame_dummy+0x18>)
 81002ce:	f3af 8000 	nop.w
 81002d2:	bd08      	pop	{r3, pc}
 81002d4:	00000000 	.word	0x00000000
 81002d8:	100073d4 	.word	0x100073d4
 81002dc:	0810b9b8 	.word	0x0810b9b8

081002e0 <__aeabi_drsub>:
 81002e0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 81002e4:	e002      	b.n	81002ec <__adddf3>
 81002e6:	bf00      	nop

081002e8 <__aeabi_dsub>:
 81002e8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

081002ec <__adddf3>:
 81002ec:	b530      	push	{r4, r5, lr}
 81002ee:	ea4f 0441 	mov.w	r4, r1, lsl #1
 81002f2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 81002f6:	ea94 0f05 	teq	r4, r5
 81002fa:	bf08      	it	eq
 81002fc:	ea90 0f02 	teqeq	r0, r2
 8100300:	bf1f      	itttt	ne
 8100302:	ea54 0c00 	orrsne.w	ip, r4, r0
 8100306:	ea55 0c02 	orrsne.w	ip, r5, r2
 810030a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 810030e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8100312:	f000 80e2 	beq.w	81004da <__adddf3+0x1ee>
 8100316:	ea4f 5454 	mov.w	r4, r4, lsr #21
 810031a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 810031e:	bfb8      	it	lt
 8100320:	426d      	neglt	r5, r5
 8100322:	dd0c      	ble.n	810033e <__adddf3+0x52>
 8100324:	442c      	add	r4, r5
 8100326:	ea80 0202 	eor.w	r2, r0, r2
 810032a:	ea81 0303 	eor.w	r3, r1, r3
 810032e:	ea82 0000 	eor.w	r0, r2, r0
 8100332:	ea83 0101 	eor.w	r1, r3, r1
 8100336:	ea80 0202 	eor.w	r2, r0, r2
 810033a:	ea81 0303 	eor.w	r3, r1, r3
 810033e:	2d36      	cmp	r5, #54	; 0x36
 8100340:	bf88      	it	hi
 8100342:	bd30      	pophi	{r4, r5, pc}
 8100344:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8100348:	ea4f 3101 	mov.w	r1, r1, lsl #12
 810034c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8100350:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8100354:	d002      	beq.n	810035c <__adddf3+0x70>
 8100356:	4240      	negs	r0, r0
 8100358:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 810035c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8100360:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8100364:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8100368:	d002      	beq.n	8100370 <__adddf3+0x84>
 810036a:	4252      	negs	r2, r2
 810036c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8100370:	ea94 0f05 	teq	r4, r5
 8100374:	f000 80a7 	beq.w	81004c6 <__adddf3+0x1da>
 8100378:	f1a4 0401 	sub.w	r4, r4, #1
 810037c:	f1d5 0e20 	rsbs	lr, r5, #32
 8100380:	db0d      	blt.n	810039e <__adddf3+0xb2>
 8100382:	fa02 fc0e 	lsl.w	ip, r2, lr
 8100386:	fa22 f205 	lsr.w	r2, r2, r5
 810038a:	1880      	adds	r0, r0, r2
 810038c:	f141 0100 	adc.w	r1, r1, #0
 8100390:	fa03 f20e 	lsl.w	r2, r3, lr
 8100394:	1880      	adds	r0, r0, r2
 8100396:	fa43 f305 	asr.w	r3, r3, r5
 810039a:	4159      	adcs	r1, r3
 810039c:	e00e      	b.n	81003bc <__adddf3+0xd0>
 810039e:	f1a5 0520 	sub.w	r5, r5, #32
 81003a2:	f10e 0e20 	add.w	lr, lr, #32
 81003a6:	2a01      	cmp	r2, #1
 81003a8:	fa03 fc0e 	lsl.w	ip, r3, lr
 81003ac:	bf28      	it	cs
 81003ae:	f04c 0c02 	orrcs.w	ip, ip, #2
 81003b2:	fa43 f305 	asr.w	r3, r3, r5
 81003b6:	18c0      	adds	r0, r0, r3
 81003b8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 81003bc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 81003c0:	d507      	bpl.n	81003d2 <__adddf3+0xe6>
 81003c2:	f04f 0e00 	mov.w	lr, #0
 81003c6:	f1dc 0c00 	rsbs	ip, ip, #0
 81003ca:	eb7e 0000 	sbcs.w	r0, lr, r0
 81003ce:	eb6e 0101 	sbc.w	r1, lr, r1
 81003d2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 81003d6:	d31b      	bcc.n	8100410 <__adddf3+0x124>
 81003d8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 81003dc:	d30c      	bcc.n	81003f8 <__adddf3+0x10c>
 81003de:	0849      	lsrs	r1, r1, #1
 81003e0:	ea5f 0030 	movs.w	r0, r0, rrx
 81003e4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 81003e8:	f104 0401 	add.w	r4, r4, #1
 81003ec:	ea4f 5244 	mov.w	r2, r4, lsl #21
 81003f0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 81003f4:	f080 809a 	bcs.w	810052c <__adddf3+0x240>
 81003f8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 81003fc:	bf08      	it	eq
 81003fe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8100402:	f150 0000 	adcs.w	r0, r0, #0
 8100406:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 810040a:	ea41 0105 	orr.w	r1, r1, r5
 810040e:	bd30      	pop	{r4, r5, pc}
 8100410:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8100414:	4140      	adcs	r0, r0
 8100416:	eb41 0101 	adc.w	r1, r1, r1
 810041a:	3c01      	subs	r4, #1
 810041c:	bf28      	it	cs
 810041e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8100422:	d2e9      	bcs.n	81003f8 <__adddf3+0x10c>
 8100424:	f091 0f00 	teq	r1, #0
 8100428:	bf04      	itt	eq
 810042a:	4601      	moveq	r1, r0
 810042c:	2000      	moveq	r0, #0
 810042e:	fab1 f381 	clz	r3, r1
 8100432:	bf08      	it	eq
 8100434:	3320      	addeq	r3, #32
 8100436:	f1a3 030b 	sub.w	r3, r3, #11
 810043a:	f1b3 0220 	subs.w	r2, r3, #32
 810043e:	da0c      	bge.n	810045a <__adddf3+0x16e>
 8100440:	320c      	adds	r2, #12
 8100442:	dd08      	ble.n	8100456 <__adddf3+0x16a>
 8100444:	f102 0c14 	add.w	ip, r2, #20
 8100448:	f1c2 020c 	rsb	r2, r2, #12
 810044c:	fa01 f00c 	lsl.w	r0, r1, ip
 8100450:	fa21 f102 	lsr.w	r1, r1, r2
 8100454:	e00c      	b.n	8100470 <__adddf3+0x184>
 8100456:	f102 0214 	add.w	r2, r2, #20
 810045a:	bfd8      	it	le
 810045c:	f1c2 0c20 	rsble	ip, r2, #32
 8100460:	fa01 f102 	lsl.w	r1, r1, r2
 8100464:	fa20 fc0c 	lsr.w	ip, r0, ip
 8100468:	bfdc      	itt	le
 810046a:	ea41 010c 	orrle.w	r1, r1, ip
 810046e:	4090      	lslle	r0, r2
 8100470:	1ae4      	subs	r4, r4, r3
 8100472:	bfa2      	ittt	ge
 8100474:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8100478:	4329      	orrge	r1, r5
 810047a:	bd30      	popge	{r4, r5, pc}
 810047c:	ea6f 0404 	mvn.w	r4, r4
 8100480:	3c1f      	subs	r4, #31
 8100482:	da1c      	bge.n	81004be <__adddf3+0x1d2>
 8100484:	340c      	adds	r4, #12
 8100486:	dc0e      	bgt.n	81004a6 <__adddf3+0x1ba>
 8100488:	f104 0414 	add.w	r4, r4, #20
 810048c:	f1c4 0220 	rsb	r2, r4, #32
 8100490:	fa20 f004 	lsr.w	r0, r0, r4
 8100494:	fa01 f302 	lsl.w	r3, r1, r2
 8100498:	ea40 0003 	orr.w	r0, r0, r3
 810049c:	fa21 f304 	lsr.w	r3, r1, r4
 81004a0:	ea45 0103 	orr.w	r1, r5, r3
 81004a4:	bd30      	pop	{r4, r5, pc}
 81004a6:	f1c4 040c 	rsb	r4, r4, #12
 81004aa:	f1c4 0220 	rsb	r2, r4, #32
 81004ae:	fa20 f002 	lsr.w	r0, r0, r2
 81004b2:	fa01 f304 	lsl.w	r3, r1, r4
 81004b6:	ea40 0003 	orr.w	r0, r0, r3
 81004ba:	4629      	mov	r1, r5
 81004bc:	bd30      	pop	{r4, r5, pc}
 81004be:	fa21 f004 	lsr.w	r0, r1, r4
 81004c2:	4629      	mov	r1, r5
 81004c4:	bd30      	pop	{r4, r5, pc}
 81004c6:	f094 0f00 	teq	r4, #0
 81004ca:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 81004ce:	bf06      	itte	eq
 81004d0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 81004d4:	3401      	addeq	r4, #1
 81004d6:	3d01      	subne	r5, #1
 81004d8:	e74e      	b.n	8100378 <__adddf3+0x8c>
 81004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 81004de:	bf18      	it	ne
 81004e0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 81004e4:	d029      	beq.n	810053a <__adddf3+0x24e>
 81004e6:	ea94 0f05 	teq	r4, r5
 81004ea:	bf08      	it	eq
 81004ec:	ea90 0f02 	teqeq	r0, r2
 81004f0:	d005      	beq.n	81004fe <__adddf3+0x212>
 81004f2:	ea54 0c00 	orrs.w	ip, r4, r0
 81004f6:	bf04      	itt	eq
 81004f8:	4619      	moveq	r1, r3
 81004fa:	4610      	moveq	r0, r2
 81004fc:	bd30      	pop	{r4, r5, pc}
 81004fe:	ea91 0f03 	teq	r1, r3
 8100502:	bf1e      	ittt	ne
 8100504:	2100      	movne	r1, #0
 8100506:	2000      	movne	r0, #0
 8100508:	bd30      	popne	{r4, r5, pc}
 810050a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 810050e:	d105      	bne.n	810051c <__adddf3+0x230>
 8100510:	0040      	lsls	r0, r0, #1
 8100512:	4149      	adcs	r1, r1
 8100514:	bf28      	it	cs
 8100516:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 810051a:	bd30      	pop	{r4, r5, pc}
 810051c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8100520:	bf3c      	itt	cc
 8100522:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8100526:	bd30      	popcc	{r4, r5, pc}
 8100528:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 810052c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8100530:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8100534:	f04f 0000 	mov.w	r0, #0
 8100538:	bd30      	pop	{r4, r5, pc}
 810053a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 810053e:	bf1a      	itte	ne
 8100540:	4619      	movne	r1, r3
 8100542:	4610      	movne	r0, r2
 8100544:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8100548:	bf1c      	itt	ne
 810054a:	460b      	movne	r3, r1
 810054c:	4602      	movne	r2, r0
 810054e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8100552:	bf06      	itte	eq
 8100554:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8100558:	ea91 0f03 	teqeq	r1, r3
 810055c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8100560:	bd30      	pop	{r4, r5, pc}
 8100562:	bf00      	nop

08100564 <__aeabi_ui2d>:
 8100564:	f090 0f00 	teq	r0, #0
 8100568:	bf04      	itt	eq
 810056a:	2100      	moveq	r1, #0
 810056c:	4770      	bxeq	lr
 810056e:	b530      	push	{r4, r5, lr}
 8100570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8100574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8100578:	f04f 0500 	mov.w	r5, #0
 810057c:	f04f 0100 	mov.w	r1, #0
 8100580:	e750      	b.n	8100424 <__adddf3+0x138>
 8100582:	bf00      	nop

08100584 <__aeabi_i2d>:
 8100584:	f090 0f00 	teq	r0, #0
 8100588:	bf04      	itt	eq
 810058a:	2100      	moveq	r1, #0
 810058c:	4770      	bxeq	lr
 810058e:	b530      	push	{r4, r5, lr}
 8100590:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8100594:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8100598:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 810059c:	bf48      	it	mi
 810059e:	4240      	negmi	r0, r0
 81005a0:	f04f 0100 	mov.w	r1, #0
 81005a4:	e73e      	b.n	8100424 <__adddf3+0x138>
 81005a6:	bf00      	nop

081005a8 <__aeabi_f2d>:
 81005a8:	0042      	lsls	r2, r0, #1
 81005aa:	ea4f 01e2 	mov.w	r1, r2, asr #3
 81005ae:	ea4f 0131 	mov.w	r1, r1, rrx
 81005b2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 81005b6:	bf1f      	itttt	ne
 81005b8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 81005bc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 81005c0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 81005c4:	4770      	bxne	lr
 81005c6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 81005ca:	bf08      	it	eq
 81005cc:	4770      	bxeq	lr
 81005ce:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 81005d2:	bf04      	itt	eq
 81005d4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 81005d8:	4770      	bxeq	lr
 81005da:	b530      	push	{r4, r5, lr}
 81005dc:	f44f 7460 	mov.w	r4, #896	; 0x380
 81005e0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 81005e4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 81005e8:	e71c      	b.n	8100424 <__adddf3+0x138>
 81005ea:	bf00      	nop

081005ec <__aeabi_ul2d>:
 81005ec:	ea50 0201 	orrs.w	r2, r0, r1
 81005f0:	bf08      	it	eq
 81005f2:	4770      	bxeq	lr
 81005f4:	b530      	push	{r4, r5, lr}
 81005f6:	f04f 0500 	mov.w	r5, #0
 81005fa:	e00a      	b.n	8100612 <__aeabi_l2d+0x16>

081005fc <__aeabi_l2d>:
 81005fc:	ea50 0201 	orrs.w	r2, r0, r1
 8100600:	bf08      	it	eq
 8100602:	4770      	bxeq	lr
 8100604:	b530      	push	{r4, r5, lr}
 8100606:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 810060a:	d502      	bpl.n	8100612 <__aeabi_l2d+0x16>
 810060c:	4240      	negs	r0, r0
 810060e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8100612:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8100616:	f104 0432 	add.w	r4, r4, #50	; 0x32
 810061a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 810061e:	f43f aed8 	beq.w	81003d2 <__adddf3+0xe6>
 8100622:	f04f 0203 	mov.w	r2, #3
 8100626:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 810062a:	bf18      	it	ne
 810062c:	3203      	addne	r2, #3
 810062e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8100632:	bf18      	it	ne
 8100634:	3203      	addne	r2, #3
 8100636:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 810063a:	f1c2 0320 	rsb	r3, r2, #32
 810063e:	fa00 fc03 	lsl.w	ip, r0, r3
 8100642:	fa20 f002 	lsr.w	r0, r0, r2
 8100646:	fa01 fe03 	lsl.w	lr, r1, r3
 810064a:	ea40 000e 	orr.w	r0, r0, lr
 810064e:	fa21 f102 	lsr.w	r1, r1, r2
 8100652:	4414      	add	r4, r2
 8100654:	e6bd      	b.n	81003d2 <__adddf3+0xe6>
 8100656:	bf00      	nop

08100658 <__aeabi_dmul>:
 8100658:	b570      	push	{r4, r5, r6, lr}
 810065a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 810065e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8100662:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8100666:	bf1d      	ittte	ne
 8100668:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 810066c:	ea94 0f0c 	teqne	r4, ip
 8100670:	ea95 0f0c 	teqne	r5, ip
 8100674:	f000 f8de 	bleq	8100834 <__aeabi_dmul+0x1dc>
 8100678:	442c      	add	r4, r5
 810067a:	ea81 0603 	eor.w	r6, r1, r3
 810067e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8100682:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8100686:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 810068a:	bf18      	it	ne
 810068c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8100690:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8100694:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8100698:	d038      	beq.n	810070c <__aeabi_dmul+0xb4>
 810069a:	fba0 ce02 	umull	ip, lr, r0, r2
 810069e:	f04f 0500 	mov.w	r5, #0
 81006a2:	fbe1 e502 	umlal	lr, r5, r1, r2
 81006a6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 81006aa:	fbe0 e503 	umlal	lr, r5, r0, r3
 81006ae:	f04f 0600 	mov.w	r6, #0
 81006b2:	fbe1 5603 	umlal	r5, r6, r1, r3
 81006b6:	f09c 0f00 	teq	ip, #0
 81006ba:	bf18      	it	ne
 81006bc:	f04e 0e01 	orrne.w	lr, lr, #1
 81006c0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 81006c4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 81006c8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 81006cc:	d204      	bcs.n	81006d8 <__aeabi_dmul+0x80>
 81006ce:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 81006d2:	416d      	adcs	r5, r5
 81006d4:	eb46 0606 	adc.w	r6, r6, r6
 81006d8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 81006dc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 81006e0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 81006e4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 81006e8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 81006ec:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 81006f0:	bf88      	it	hi
 81006f2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 81006f6:	d81e      	bhi.n	8100736 <__aeabi_dmul+0xde>
 81006f8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 81006fc:	bf08      	it	eq
 81006fe:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8100702:	f150 0000 	adcs.w	r0, r0, #0
 8100706:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 810070a:	bd70      	pop	{r4, r5, r6, pc}
 810070c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8100710:	ea46 0101 	orr.w	r1, r6, r1
 8100714:	ea40 0002 	orr.w	r0, r0, r2
 8100718:	ea81 0103 	eor.w	r1, r1, r3
 810071c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8100720:	bfc2      	ittt	gt
 8100722:	ebd4 050c 	rsbsgt	r5, r4, ip
 8100726:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 810072a:	bd70      	popgt	{r4, r5, r6, pc}
 810072c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8100730:	f04f 0e00 	mov.w	lr, #0
 8100734:	3c01      	subs	r4, #1
 8100736:	f300 80ab 	bgt.w	8100890 <__aeabi_dmul+0x238>
 810073a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 810073e:	bfde      	ittt	le
 8100740:	2000      	movle	r0, #0
 8100742:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8100746:	bd70      	pople	{r4, r5, r6, pc}
 8100748:	f1c4 0400 	rsb	r4, r4, #0
 810074c:	3c20      	subs	r4, #32
 810074e:	da35      	bge.n	81007bc <__aeabi_dmul+0x164>
 8100750:	340c      	adds	r4, #12
 8100752:	dc1b      	bgt.n	810078c <__aeabi_dmul+0x134>
 8100754:	f104 0414 	add.w	r4, r4, #20
 8100758:	f1c4 0520 	rsb	r5, r4, #32
 810075c:	fa00 f305 	lsl.w	r3, r0, r5
 8100760:	fa20 f004 	lsr.w	r0, r0, r4
 8100764:	fa01 f205 	lsl.w	r2, r1, r5
 8100768:	ea40 0002 	orr.w	r0, r0, r2
 810076c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8100770:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8100774:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8100778:	fa21 f604 	lsr.w	r6, r1, r4
 810077c:	eb42 0106 	adc.w	r1, r2, r6
 8100780:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8100784:	bf08      	it	eq
 8100786:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 810078a:	bd70      	pop	{r4, r5, r6, pc}
 810078c:	f1c4 040c 	rsb	r4, r4, #12
 8100790:	f1c4 0520 	rsb	r5, r4, #32
 8100794:	fa00 f304 	lsl.w	r3, r0, r4
 8100798:	fa20 f005 	lsr.w	r0, r0, r5
 810079c:	fa01 f204 	lsl.w	r2, r1, r4
 81007a0:	ea40 0002 	orr.w	r0, r0, r2
 81007a4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 81007a8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 81007ac:	f141 0100 	adc.w	r1, r1, #0
 81007b0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 81007b4:	bf08      	it	eq
 81007b6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 81007ba:	bd70      	pop	{r4, r5, r6, pc}
 81007bc:	f1c4 0520 	rsb	r5, r4, #32
 81007c0:	fa00 f205 	lsl.w	r2, r0, r5
 81007c4:	ea4e 0e02 	orr.w	lr, lr, r2
 81007c8:	fa20 f304 	lsr.w	r3, r0, r4
 81007cc:	fa01 f205 	lsl.w	r2, r1, r5
 81007d0:	ea43 0302 	orr.w	r3, r3, r2
 81007d4:	fa21 f004 	lsr.w	r0, r1, r4
 81007d8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 81007dc:	fa21 f204 	lsr.w	r2, r1, r4
 81007e0:	ea20 0002 	bic.w	r0, r0, r2
 81007e4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 81007e8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 81007ec:	bf08      	it	eq
 81007ee:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 81007f2:	bd70      	pop	{r4, r5, r6, pc}
 81007f4:	f094 0f00 	teq	r4, #0
 81007f8:	d10f      	bne.n	810081a <__aeabi_dmul+0x1c2>
 81007fa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 81007fe:	0040      	lsls	r0, r0, #1
 8100800:	eb41 0101 	adc.w	r1, r1, r1
 8100804:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8100808:	bf08      	it	eq
 810080a:	3c01      	subeq	r4, #1
 810080c:	d0f7      	beq.n	81007fe <__aeabi_dmul+0x1a6>
 810080e:	ea41 0106 	orr.w	r1, r1, r6
 8100812:	f095 0f00 	teq	r5, #0
 8100816:	bf18      	it	ne
 8100818:	4770      	bxne	lr
 810081a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 810081e:	0052      	lsls	r2, r2, #1
 8100820:	eb43 0303 	adc.w	r3, r3, r3
 8100824:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8100828:	bf08      	it	eq
 810082a:	3d01      	subeq	r5, #1
 810082c:	d0f7      	beq.n	810081e <__aeabi_dmul+0x1c6>
 810082e:	ea43 0306 	orr.w	r3, r3, r6
 8100832:	4770      	bx	lr
 8100834:	ea94 0f0c 	teq	r4, ip
 8100838:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 810083c:	bf18      	it	ne
 810083e:	ea95 0f0c 	teqne	r5, ip
 8100842:	d00c      	beq.n	810085e <__aeabi_dmul+0x206>
 8100844:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8100848:	bf18      	it	ne
 810084a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 810084e:	d1d1      	bne.n	81007f4 <__aeabi_dmul+0x19c>
 8100850:	ea81 0103 	eor.w	r1, r1, r3
 8100854:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8100858:	f04f 0000 	mov.w	r0, #0
 810085c:	bd70      	pop	{r4, r5, r6, pc}
 810085e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8100862:	bf06      	itte	eq
 8100864:	4610      	moveq	r0, r2
 8100866:	4619      	moveq	r1, r3
 8100868:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 810086c:	d019      	beq.n	81008a2 <__aeabi_dmul+0x24a>
 810086e:	ea94 0f0c 	teq	r4, ip
 8100872:	d102      	bne.n	810087a <__aeabi_dmul+0x222>
 8100874:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8100878:	d113      	bne.n	81008a2 <__aeabi_dmul+0x24a>
 810087a:	ea95 0f0c 	teq	r5, ip
 810087e:	d105      	bne.n	810088c <__aeabi_dmul+0x234>
 8100880:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8100884:	bf1c      	itt	ne
 8100886:	4610      	movne	r0, r2
 8100888:	4619      	movne	r1, r3
 810088a:	d10a      	bne.n	81008a2 <__aeabi_dmul+0x24a>
 810088c:	ea81 0103 	eor.w	r1, r1, r3
 8100890:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8100894:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8100898:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 810089c:	f04f 0000 	mov.w	r0, #0
 81008a0:	bd70      	pop	{r4, r5, r6, pc}
 81008a2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 81008a6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 81008aa:	bd70      	pop	{r4, r5, r6, pc}

081008ac <__aeabi_ddiv>:
 81008ac:	b570      	push	{r4, r5, r6, lr}
 81008ae:	f04f 0cff 	mov.w	ip, #255	; 0xff
 81008b2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 81008b6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 81008ba:	bf1d      	ittte	ne
 81008bc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 81008c0:	ea94 0f0c 	teqne	r4, ip
 81008c4:	ea95 0f0c 	teqne	r5, ip
 81008c8:	f000 f8a7 	bleq	8100a1a <__aeabi_ddiv+0x16e>
 81008cc:	eba4 0405 	sub.w	r4, r4, r5
 81008d0:	ea81 0e03 	eor.w	lr, r1, r3
 81008d4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 81008d8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 81008dc:	f000 8088 	beq.w	81009f0 <__aeabi_ddiv+0x144>
 81008e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 81008e4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 81008e8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 81008ec:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 81008f0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 81008f4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 81008f8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 81008fc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8100900:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8100904:	429d      	cmp	r5, r3
 8100906:	bf08      	it	eq
 8100908:	4296      	cmpeq	r6, r2
 810090a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 810090e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8100912:	d202      	bcs.n	810091a <__aeabi_ddiv+0x6e>
 8100914:	085b      	lsrs	r3, r3, #1
 8100916:	ea4f 0232 	mov.w	r2, r2, rrx
 810091a:	1ab6      	subs	r6, r6, r2
 810091c:	eb65 0503 	sbc.w	r5, r5, r3
 8100920:	085b      	lsrs	r3, r3, #1
 8100922:	ea4f 0232 	mov.w	r2, r2, rrx
 8100926:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 810092a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 810092e:	ebb6 0e02 	subs.w	lr, r6, r2
 8100932:	eb75 0e03 	sbcs.w	lr, r5, r3
 8100936:	bf22      	ittt	cs
 8100938:	1ab6      	subcs	r6, r6, r2
 810093a:	4675      	movcs	r5, lr
 810093c:	ea40 000c 	orrcs.w	r0, r0, ip
 8100940:	085b      	lsrs	r3, r3, #1
 8100942:	ea4f 0232 	mov.w	r2, r2, rrx
 8100946:	ebb6 0e02 	subs.w	lr, r6, r2
 810094a:	eb75 0e03 	sbcs.w	lr, r5, r3
 810094e:	bf22      	ittt	cs
 8100950:	1ab6      	subcs	r6, r6, r2
 8100952:	4675      	movcs	r5, lr
 8100954:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8100958:	085b      	lsrs	r3, r3, #1
 810095a:	ea4f 0232 	mov.w	r2, r2, rrx
 810095e:	ebb6 0e02 	subs.w	lr, r6, r2
 8100962:	eb75 0e03 	sbcs.w	lr, r5, r3
 8100966:	bf22      	ittt	cs
 8100968:	1ab6      	subcs	r6, r6, r2
 810096a:	4675      	movcs	r5, lr
 810096c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8100970:	085b      	lsrs	r3, r3, #1
 8100972:	ea4f 0232 	mov.w	r2, r2, rrx
 8100976:	ebb6 0e02 	subs.w	lr, r6, r2
 810097a:	eb75 0e03 	sbcs.w	lr, r5, r3
 810097e:	bf22      	ittt	cs
 8100980:	1ab6      	subcs	r6, r6, r2
 8100982:	4675      	movcs	r5, lr
 8100984:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8100988:	ea55 0e06 	orrs.w	lr, r5, r6
 810098c:	d018      	beq.n	81009c0 <__aeabi_ddiv+0x114>
 810098e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8100992:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8100996:	ea4f 1606 	mov.w	r6, r6, lsl #4
 810099a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 810099e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 81009a2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 81009a6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 81009aa:	d1c0      	bne.n	810092e <__aeabi_ddiv+0x82>
 81009ac:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 81009b0:	d10b      	bne.n	81009ca <__aeabi_ddiv+0x11e>
 81009b2:	ea41 0100 	orr.w	r1, r1, r0
 81009b6:	f04f 0000 	mov.w	r0, #0
 81009ba:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 81009be:	e7b6      	b.n	810092e <__aeabi_ddiv+0x82>
 81009c0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 81009c4:	bf04      	itt	eq
 81009c6:	4301      	orreq	r1, r0
 81009c8:	2000      	moveq	r0, #0
 81009ca:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 81009ce:	bf88      	it	hi
 81009d0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 81009d4:	f63f aeaf 	bhi.w	8100736 <__aeabi_dmul+0xde>
 81009d8:	ebb5 0c03 	subs.w	ip, r5, r3
 81009dc:	bf04      	itt	eq
 81009de:	ebb6 0c02 	subseq.w	ip, r6, r2
 81009e2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 81009e6:	f150 0000 	adcs.w	r0, r0, #0
 81009ea:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 81009ee:	bd70      	pop	{r4, r5, r6, pc}
 81009f0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 81009f4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 81009f8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 81009fc:	bfc2      	ittt	gt
 81009fe:	ebd4 050c 	rsbsgt	r5, r4, ip
 8100a02:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8100a06:	bd70      	popgt	{r4, r5, r6, pc}
 8100a08:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8100a0c:	f04f 0e00 	mov.w	lr, #0
 8100a10:	3c01      	subs	r4, #1
 8100a12:	e690      	b.n	8100736 <__aeabi_dmul+0xde>
 8100a14:	ea45 0e06 	orr.w	lr, r5, r6
 8100a18:	e68d      	b.n	8100736 <__aeabi_dmul+0xde>
 8100a1a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8100a1e:	ea94 0f0c 	teq	r4, ip
 8100a22:	bf08      	it	eq
 8100a24:	ea95 0f0c 	teqeq	r5, ip
 8100a28:	f43f af3b 	beq.w	81008a2 <__aeabi_dmul+0x24a>
 8100a2c:	ea94 0f0c 	teq	r4, ip
 8100a30:	d10a      	bne.n	8100a48 <__aeabi_ddiv+0x19c>
 8100a32:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8100a36:	f47f af34 	bne.w	81008a2 <__aeabi_dmul+0x24a>
 8100a3a:	ea95 0f0c 	teq	r5, ip
 8100a3e:	f47f af25 	bne.w	810088c <__aeabi_dmul+0x234>
 8100a42:	4610      	mov	r0, r2
 8100a44:	4619      	mov	r1, r3
 8100a46:	e72c      	b.n	81008a2 <__aeabi_dmul+0x24a>
 8100a48:	ea95 0f0c 	teq	r5, ip
 8100a4c:	d106      	bne.n	8100a5c <__aeabi_ddiv+0x1b0>
 8100a4e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8100a52:	f43f aefd 	beq.w	8100850 <__aeabi_dmul+0x1f8>
 8100a56:	4610      	mov	r0, r2
 8100a58:	4619      	mov	r1, r3
 8100a5a:	e722      	b.n	81008a2 <__aeabi_dmul+0x24a>
 8100a5c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8100a60:	bf18      	it	ne
 8100a62:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8100a66:	f47f aec5 	bne.w	81007f4 <__aeabi_dmul+0x19c>
 8100a6a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8100a6e:	f47f af0d 	bne.w	810088c <__aeabi_dmul+0x234>
 8100a72:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8100a76:	f47f aeeb 	bne.w	8100850 <__aeabi_dmul+0x1f8>
 8100a7a:	e712      	b.n	81008a2 <__aeabi_dmul+0x24a>

08100a7c <__aeabi_f2lz>:
 8100a7c:	ee07 0a90 	vmov	s15, r0
 8100a80:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8100a84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8100a88:	d401      	bmi.n	8100a8e <__aeabi_f2lz+0x12>
 8100a8a:	f000 b80b 	b.w	8100aa4 <__aeabi_f2ulz>
 8100a8e:	eef1 7a67 	vneg.f32	s15, s15
 8100a92:	b508      	push	{r3, lr}
 8100a94:	ee17 0a90 	vmov	r0, s15
 8100a98:	f000 f804 	bl	8100aa4 <__aeabi_f2ulz>
 8100a9c:	4240      	negs	r0, r0
 8100a9e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8100aa2:	bd08      	pop	{r3, pc}

08100aa4 <__aeabi_f2ulz>:
 8100aa4:	b5d0      	push	{r4, r6, r7, lr}
 8100aa6:	f7ff fd7f 	bl	81005a8 <__aeabi_f2d>
 8100aaa:	4b0c      	ldr	r3, [pc, #48]	; (8100adc <__aeabi_f2ulz+0x38>)
 8100aac:	2200      	movs	r2, #0
 8100aae:	4606      	mov	r6, r0
 8100ab0:	460f      	mov	r7, r1
 8100ab2:	f7ff fdd1 	bl	8100658 <__aeabi_dmul>
 8100ab6:	f000 f815 	bl	8100ae4 <__aeabi_d2uiz>
 8100aba:	4604      	mov	r4, r0
 8100abc:	f7ff fd52 	bl	8100564 <__aeabi_ui2d>
 8100ac0:	4b07      	ldr	r3, [pc, #28]	; (8100ae0 <__aeabi_f2ulz+0x3c>)
 8100ac2:	2200      	movs	r2, #0
 8100ac4:	f7ff fdc8 	bl	8100658 <__aeabi_dmul>
 8100ac8:	4602      	mov	r2, r0
 8100aca:	460b      	mov	r3, r1
 8100acc:	4630      	mov	r0, r6
 8100ace:	4639      	mov	r1, r7
 8100ad0:	f7ff fc0a 	bl	81002e8 <__aeabi_dsub>
 8100ad4:	f000 f806 	bl	8100ae4 <__aeabi_d2uiz>
 8100ad8:	4621      	mov	r1, r4
 8100ada:	bdd0      	pop	{r4, r6, r7, pc}
 8100adc:	3df00000 	.word	0x3df00000
 8100ae0:	41f00000 	.word	0x41f00000

08100ae4 <__aeabi_d2uiz>:
 8100ae4:	004a      	lsls	r2, r1, #1
 8100ae6:	d211      	bcs.n	8100b0c <__aeabi_d2uiz+0x28>
 8100ae8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8100aec:	d211      	bcs.n	8100b12 <__aeabi_d2uiz+0x2e>
 8100aee:	d50d      	bpl.n	8100b0c <__aeabi_d2uiz+0x28>
 8100af0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8100af4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8100af8:	d40e      	bmi.n	8100b18 <__aeabi_d2uiz+0x34>
 8100afa:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8100afe:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8100b02:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8100b06:	fa23 f002 	lsr.w	r0, r3, r2
 8100b0a:	4770      	bx	lr
 8100b0c:	f04f 0000 	mov.w	r0, #0
 8100b10:	4770      	bx	lr
 8100b12:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8100b16:	d102      	bne.n	8100b1e <__aeabi_d2uiz+0x3a>
 8100b18:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8100b1c:	4770      	bx	lr
 8100b1e:	f04f 0000 	mov.w	r0, #0
 8100b22:	4770      	bx	lr

08100b24 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8100b24:	b580      	push	{r7, lr}
 8100b26:	b0a6      	sub	sp, #152	; 0x98
 8100b28:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* MPU Configuration--------------------------------------------------------*/
  MPU_Config();
 8100b2a:	f000 f8fb 	bl	8100d24 <MPU_Config>

/* USER CODE BEGIN Boot_Mode_Sequence_1 */
  /*HW semaphore Clock enable*/
  __HAL_RCC_HSEM_CLK_ENABLE();
 8100b2e:	4b2a      	ldr	r3, [pc, #168]	; (8100bd8 <main+0xb4>)
 8100b30:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8100b34:	4a28      	ldr	r2, [pc, #160]	; (8100bd8 <main+0xb4>)
 8100b36:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8100b3a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8100b3e:	4b26      	ldr	r3, [pc, #152]	; (8100bd8 <main+0xb4>)
 8100b40:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8100b44:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8100b48:	603b      	str	r3, [r7, #0]
 8100b4a:	683b      	ldr	r3, [r7, #0]
  /* Activate HSEM notification for Cortex-M4*/
  HAL_HSEM_ActivateNotification(__HAL_HSEM_SEMID_TO_MASK(HSEM_ID_0));
 8100b4c:	2001      	movs	r0, #1
 8100b4e:	f003 fdb5 	bl	81046bc <HAL_HSEM_ActivateNotification>
  /*
  Domain D2 goes to STOP mode (Cortex-M4 in deep-sleep) waiting for Cortex-M7 to
  perform system initialization (system clock config, external memory configuration.. )
  */
  HAL_PWREx_ClearPendingEvent();
 8100b52:	f003 fe3f 	bl	81047d4 <HAL_PWREx_ClearPendingEvent>
  HAL_PWREx_EnterSTOPMode(PWR_MAINREGULATOR_ON, PWR_STOPENTRY_WFE, PWR_D2_DOMAIN);
 8100b56:	2201      	movs	r2, #1
 8100b58:	2102      	movs	r1, #2
 8100b5a:	2000      	movs	r0, #0
 8100b5c:	f003 fdc0 	bl	81046e0 <HAL_PWREx_EnterSTOPMode>
  /* Clear HSEM flag */
  __HAL_HSEM_CLEAR_FLAG(__HAL_HSEM_SEMID_TO_MASK(HSEM_ID_0));
 8100b60:	4b1e      	ldr	r3, [pc, #120]	; (8100bdc <main+0xb8>)
 8100b62:	681b      	ldr	r3, [r3, #0]
 8100b64:	091b      	lsrs	r3, r3, #4
 8100b66:	f003 030f 	and.w	r3, r3, #15
 8100b6a:	2b07      	cmp	r3, #7
 8100b6c:	d108      	bne.n	8100b80 <main+0x5c>
 8100b6e:	4b1c      	ldr	r3, [pc, #112]	; (8100be0 <main+0xbc>)
 8100b70:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 8100b74:	4a1a      	ldr	r2, [pc, #104]	; (8100be0 <main+0xbc>)
 8100b76:	f043 0301 	orr.w	r3, r3, #1
 8100b7a:	f8c2 3104 	str.w	r3, [r2, #260]	; 0x104
 8100b7e:	e007      	b.n	8100b90 <main+0x6c>
 8100b80:	4b17      	ldr	r3, [pc, #92]	; (8100be0 <main+0xbc>)
 8100b82:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8100b86:	4a16      	ldr	r2, [pc, #88]	; (8100be0 <main+0xbc>)
 8100b88:	f043 0301 	orr.w	r3, r3, #1
 8100b8c:	f8c2 3114 	str.w	r3, [r2, #276]	; 0x114

/* USER CODE END Boot_Mode_Sequence_1 */
  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8100b90:	f002 fbf2 	bl	8103378 <HAL_Init>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_MDMA_Init();
 8100b94:	f000 f878 	bl	8100c88 <MX_MDMA_Init>
  MX_DMA_Init();
 8100b98:	f000 f828 	bl	8100bec <MX_DMA_Init>
  MX_GPIO_Init();
 8100b9c:	f000 f88e 	bl	8100cbc <MX_GPIO_Init>
  /* USER CODE BEGIN 2 */
  HAL_HSEM_ActivateNotification(__HAL_HSEM_SEMID_TO_MASK(HSEM_ID_0));
 8100ba0:	2001      	movs	r0, #1
 8100ba2:	f003 fd8b 	bl	81046bc <HAL_HSEM_ActivateNotification>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  ai_handle network = AI_HANDLE_NULL;
 8100ba6:	2300      	movs	r3, #0
 8100ba8:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
  ai_error err;
  ai_network_report report;

  /** @brief Initialize network */
  const ai_handle acts[] = { activations };
 8100bac:	4b0d      	ldr	r3, [pc, #52]	; (8100be4 <main+0xc0>)
 8100bae:	607b      	str	r3, [r7, #4]
  err = ai_face_recognition_create_and_init(&network, acts, NULL);
 8100bb0:	1d39      	adds	r1, r7, #4
 8100bb2:	f107 0394 	add.w	r3, r7, #148	; 0x94
 8100bb6:	2200      	movs	r2, #0
 8100bb8:	4618      	mov	r0, r3
 8100bba:	f002 fadf 	bl	810317c <ai_face_recognition_create_and_init>
 8100bbe:	4603      	mov	r3, r0
 8100bc0:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
  if (err.type != AI_ERROR_NONE) {
 8100bc4:	f897 3090 	ldrb.w	r3, [r7, #144]	; 0x90
 8100bc8:	2b00      	cmp	r3, #0
 8100bca:	d003      	beq.n	8100bd4 <main+0xb0>
	  HAL_GPIO_TogglePin(GPIOJ, GPIO_PIN_2);
 8100bcc:	2104      	movs	r1, #4
 8100bce:	4806      	ldr	r0, [pc, #24]	; (8100be8 <main+0xc4>)
 8100bd0:	f003 fd59 	bl	8104686 <HAL_GPIO_TogglePin>
//	  return -1;
  }
  while (1)
 8100bd4:	e7fe      	b.n	8100bd4 <main+0xb0>
 8100bd6:	bf00      	nop
 8100bd8:	58024400 	.word	0x58024400
 8100bdc:	e000ed00 	.word	0xe000ed00
 8100be0:	58026400 	.word	0x58026400
 8100be4:	10007464 	.word	0x10007464
 8100be8:	58022400 	.word	0x58022400

08100bec <MX_DMA_Init>:
  * Enable DMA controller clock
  * Configure DMA for memory to memory transfers
  *   hdma_memtomem_dma1_stream2
  */
static void MX_DMA_Init(void)
{
 8100bec:	b580      	push	{r7, lr}
 8100bee:	b082      	sub	sp, #8
 8100bf0:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8100bf2:	4b22      	ldr	r3, [pc, #136]	; (8100c7c <MX_DMA_Init+0x90>)
 8100bf4:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8100bf8:	4a20      	ldr	r2, [pc, #128]	; (8100c7c <MX_DMA_Init+0x90>)
 8100bfa:	f043 0301 	orr.w	r3, r3, #1
 8100bfe:	f8c2 30d8 	str.w	r3, [r2, #216]	; 0xd8
 8100c02:	4b1e      	ldr	r3, [pc, #120]	; (8100c7c <MX_DMA_Init+0x90>)
 8100c04:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8100c08:	f003 0301 	and.w	r3, r3, #1
 8100c0c:	607b      	str	r3, [r7, #4]
 8100c0e:	687b      	ldr	r3, [r7, #4]

  /* Configure DMA request hdma_memtomem_dma1_stream2 on DMA1_Stream2 */
  hdma_memtomem_dma1_stream2.Instance = DMA1_Stream2;
 8100c10:	4b1b      	ldr	r3, [pc, #108]	; (8100c80 <MX_DMA_Init+0x94>)
 8100c12:	4a1c      	ldr	r2, [pc, #112]	; (8100c84 <MX_DMA_Init+0x98>)
 8100c14:	601a      	str	r2, [r3, #0]
  hdma_memtomem_dma1_stream2.Init.Request = DMA_REQUEST_MEM2MEM;
 8100c16:	4b1a      	ldr	r3, [pc, #104]	; (8100c80 <MX_DMA_Init+0x94>)
 8100c18:	2200      	movs	r2, #0
 8100c1a:	605a      	str	r2, [r3, #4]
  hdma_memtomem_dma1_stream2.Init.Direction = DMA_MEMORY_TO_MEMORY;
 8100c1c:	4b18      	ldr	r3, [pc, #96]	; (8100c80 <MX_DMA_Init+0x94>)
 8100c1e:	2280      	movs	r2, #128	; 0x80
 8100c20:	609a      	str	r2, [r3, #8]
  hdma_memtomem_dma1_stream2.Init.PeriphInc = DMA_PINC_ENABLE;
 8100c22:	4b17      	ldr	r3, [pc, #92]	; (8100c80 <MX_DMA_Init+0x94>)
 8100c24:	f44f 7200 	mov.w	r2, #512	; 0x200
 8100c28:	60da      	str	r2, [r3, #12]
  hdma_memtomem_dma1_stream2.Init.MemInc = DMA_MINC_ENABLE;
 8100c2a:	4b15      	ldr	r3, [pc, #84]	; (8100c80 <MX_DMA_Init+0x94>)
 8100c2c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8100c30:	611a      	str	r2, [r3, #16]
  hdma_memtomem_dma1_stream2.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8100c32:	4b13      	ldr	r3, [pc, #76]	; (8100c80 <MX_DMA_Init+0x94>)
 8100c34:	2200      	movs	r2, #0
 8100c36:	615a      	str	r2, [r3, #20]
  hdma_memtomem_dma1_stream2.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8100c38:	4b11      	ldr	r3, [pc, #68]	; (8100c80 <MX_DMA_Init+0x94>)
 8100c3a:	2200      	movs	r2, #0
 8100c3c:	619a      	str	r2, [r3, #24]
  hdma_memtomem_dma1_stream2.Init.Mode = DMA_NORMAL;
 8100c3e:	4b10      	ldr	r3, [pc, #64]	; (8100c80 <MX_DMA_Init+0x94>)
 8100c40:	2200      	movs	r2, #0
 8100c42:	61da      	str	r2, [r3, #28]
  hdma_memtomem_dma1_stream2.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 8100c44:	4b0e      	ldr	r3, [pc, #56]	; (8100c80 <MX_DMA_Init+0x94>)
 8100c46:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8100c4a:	621a      	str	r2, [r3, #32]
  hdma_memtomem_dma1_stream2.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
 8100c4c:	4b0c      	ldr	r3, [pc, #48]	; (8100c80 <MX_DMA_Init+0x94>)
 8100c4e:	2204      	movs	r2, #4
 8100c50:	625a      	str	r2, [r3, #36]	; 0x24
  hdma_memtomem_dma1_stream2.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
 8100c52:	4b0b      	ldr	r3, [pc, #44]	; (8100c80 <MX_DMA_Init+0x94>)
 8100c54:	2203      	movs	r2, #3
 8100c56:	629a      	str	r2, [r3, #40]	; 0x28
  hdma_memtomem_dma1_stream2.Init.MemBurst = DMA_MBURST_SINGLE;
 8100c58:	4b09      	ldr	r3, [pc, #36]	; (8100c80 <MX_DMA_Init+0x94>)
 8100c5a:	2200      	movs	r2, #0
 8100c5c:	62da      	str	r2, [r3, #44]	; 0x2c
  hdma_memtomem_dma1_stream2.Init.PeriphBurst = DMA_PBURST_SINGLE;
 8100c5e:	4b08      	ldr	r3, [pc, #32]	; (8100c80 <MX_DMA_Init+0x94>)
 8100c60:	2200      	movs	r2, #0
 8100c62:	631a      	str	r2, [r3, #48]	; 0x30
  if (HAL_DMA_Init(&hdma_memtomem_dma1_stream2) != HAL_OK)
 8100c64:	4806      	ldr	r0, [pc, #24]	; (8100c80 <MX_DMA_Init+0x94>)
 8100c66:	f002 fdaf 	bl	81037c8 <HAL_DMA_Init>
 8100c6a:	4603      	mov	r3, r0
 8100c6c:	2b00      	cmp	r3, #0
 8100c6e:	d001      	beq.n	8100c74 <MX_DMA_Init+0x88>
  {
    Error_Handler( );
 8100c70:	f000 f885 	bl	8100d7e <Error_Handler>
  }

}
 8100c74:	bf00      	nop
 8100c76:	3708      	adds	r7, #8
 8100c78:	46bd      	mov	sp, r7
 8100c7a:	bd80      	pop	{r7, pc}
 8100c7c:	58024400 	.word	0x58024400
 8100c80:	100073ec 	.word	0x100073ec
 8100c84:	40020040 	.word	0x40020040

08100c88 <MX_MDMA_Init>:

/**
  * Enable MDMA controller clock
  */
static void MX_MDMA_Init(void)
{
 8100c88:	b480      	push	{r7}
 8100c8a:	b083      	sub	sp, #12
 8100c8c:	af00      	add	r7, sp, #0

  /* MDMA controller clock enable */
  __HAL_RCC_MDMA_CLK_ENABLE();
 8100c8e:	4b0a      	ldr	r3, [pc, #40]	; (8100cb8 <MX_MDMA_Init+0x30>)
 8100c90:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8100c94:	4a08      	ldr	r2, [pc, #32]	; (8100cb8 <MX_MDMA_Init+0x30>)
 8100c96:	f043 0301 	orr.w	r3, r3, #1
 8100c9a:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
 8100c9e:	4b06      	ldr	r3, [pc, #24]	; (8100cb8 <MX_MDMA_Init+0x30>)
 8100ca0:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8100ca4:	f003 0301 	and.w	r3, r3, #1
 8100ca8:	607b      	str	r3, [r7, #4]
 8100caa:	687b      	ldr	r3, [r7, #4]
  /* Local variables */

}
 8100cac:	bf00      	nop
 8100cae:	370c      	adds	r7, #12
 8100cb0:	46bd      	mov	sp, r7
 8100cb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100cb6:	4770      	bx	lr
 8100cb8:	58024400 	.word	0x58024400

08100cbc <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8100cbc:	b580      	push	{r7, lr}
 8100cbe:	b086      	sub	sp, #24
 8100cc0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8100cc2:	1d3b      	adds	r3, r7, #4
 8100cc4:	2200      	movs	r2, #0
 8100cc6:	601a      	str	r2, [r3, #0]
 8100cc8:	605a      	str	r2, [r3, #4]
 8100cca:	609a      	str	r2, [r3, #8]
 8100ccc:	60da      	str	r2, [r3, #12]
 8100cce:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8100cd0:	4b12      	ldr	r3, [pc, #72]	; (8100d1c <MX_GPIO_Init+0x60>)
 8100cd2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8100cd6:	4a11      	ldr	r2, [pc, #68]	; (8100d1c <MX_GPIO_Init+0x60>)
 8100cd8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8100cdc:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8100ce0:	4b0e      	ldr	r3, [pc, #56]	; (8100d1c <MX_GPIO_Init+0x60>)
 8100ce2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8100ce6:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8100cea:	603b      	str	r3, [r7, #0]
 8100cec:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOJ, GPIO_PIN_2, GPIO_PIN_RESET);
 8100cee:	2200      	movs	r2, #0
 8100cf0:	2104      	movs	r1, #4
 8100cf2:	480b      	ldr	r0, [pc, #44]	; (8100d20 <MX_GPIO_Init+0x64>)
 8100cf4:	f003 fcae 	bl	8104654 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PJ2 */
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8100cf8:	2304      	movs	r3, #4
 8100cfa:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8100cfc:	2301      	movs	r3, #1
 8100cfe:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8100d00:	2300      	movs	r3, #0
 8100d02:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8100d04:	2300      	movs	r3, #0
 8100d06:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8100d08:	1d3b      	adds	r3, r7, #4
 8100d0a:	4619      	mov	r1, r3
 8100d0c:	4804      	ldr	r0, [pc, #16]	; (8100d20 <MX_GPIO_Init+0x64>)
 8100d0e:	f003 faf1 	bl	81042f4 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8100d12:	bf00      	nop
 8100d14:	3718      	adds	r7, #24
 8100d16:	46bd      	mov	sp, r7
 8100d18:	bd80      	pop	{r7, pc}
 8100d1a:	bf00      	nop
 8100d1c:	58024400 	.word	0x58024400
 8100d20:	58022400 	.word	0x58022400

08100d24 <MPU_Config>:
/* USER CODE END 4 */

/* MPU Configuration */

void MPU_Config(void)
{
 8100d24:	b580      	push	{r7, lr}
 8100d26:	b084      	sub	sp, #16
 8100d28:	af00      	add	r7, sp, #0
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 8100d2a:	463b      	mov	r3, r7
 8100d2c:	2200      	movs	r2, #0
 8100d2e:	601a      	str	r2, [r3, #0]
 8100d30:	605a      	str	r2, [r3, #4]
 8100d32:	609a      	str	r2, [r3, #8]
 8100d34:	60da      	str	r2, [r3, #12]

  /* Disables the MPU */
  HAL_MPU_Disable();
 8100d36:	f002 fcb7 	bl	81036a8 <HAL_MPU_Disable>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8100d3a:	2301      	movs	r3, #1
 8100d3c:	703b      	strb	r3, [r7, #0]
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
 8100d3e:	2300      	movs	r3, #0
 8100d40:	707b      	strb	r3, [r7, #1]
  MPU_InitStruct.BaseAddress = 0xD0000000;
 8100d42:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
 8100d46:	607b      	str	r3, [r7, #4]
  MPU_InitStruct.Size = MPU_REGION_SIZE_64MB;
 8100d48:	2319      	movs	r3, #25
 8100d4a:	723b      	strb	r3, [r7, #8]
  MPU_InitStruct.SubRegionDisable = 0x0;
 8100d4c:	2300      	movs	r3, #0
 8100d4e:	727b      	strb	r3, [r7, #9]
  MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 8100d50:	2300      	movs	r3, #0
 8100d52:	72bb      	strb	r3, [r7, #10]
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 8100d54:	2303      	movs	r3, #3
 8100d56:	72fb      	strb	r3, [r7, #11]
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 8100d58:	2300      	movs	r3, #0
 8100d5a:	733b      	strb	r3, [r7, #12]
  MPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
 8100d5c:	2301      	movs	r3, #1
 8100d5e:	737b      	strb	r3, [r7, #13]
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 8100d60:	2301      	movs	r3, #1
 8100d62:	73bb      	strb	r3, [r7, #14]
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;
 8100d64:	2301      	movs	r3, #1
 8100d66:	73fb      	strb	r3, [r7, #15]

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8100d68:	463b      	mov	r3, r7
 8100d6a:	4618      	mov	r0, r3
 8100d6c:	f002 fcd4 	bl	8103718 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 8100d70:	2004      	movs	r0, #4
 8100d72:	f002 fcb1 	bl	81036d8 <HAL_MPU_Enable>

}
 8100d76:	bf00      	nop
 8100d78:	3710      	adds	r7, #16
 8100d7a:	46bd      	mov	sp, r7
 8100d7c:	bd80      	pop	{r7, pc}

08100d7e <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8100d7e:	b480      	push	{r7}
 8100d80:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8100d82:	b672      	cpsid	i
}
 8100d84:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8100d86:	e7fe      	b.n	8100d86 <Error_Handler+0x8>

08100d88 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8100d88:	b480      	push	{r7}
 8100d8a:	b083      	sub	sp, #12
 8100d8c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8100d8e:	4b0a      	ldr	r3, [pc, #40]	; (8100db8 <HAL_MspInit+0x30>)
 8100d90:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8100d94:	4a08      	ldr	r2, [pc, #32]	; (8100db8 <HAL_MspInit+0x30>)
 8100d96:	f043 0302 	orr.w	r3, r3, #2
 8100d9a:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 8100d9e:	4b06      	ldr	r3, [pc, #24]	; (8100db8 <HAL_MspInit+0x30>)
 8100da0:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8100da4:	f003 0302 	and.w	r3, r3, #2
 8100da8:	607b      	str	r3, [r7, #4]
 8100daa:	687b      	ldr	r3, [r7, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8100dac:	bf00      	nop
 8100dae:	370c      	adds	r7, #12
 8100db0:	46bd      	mov	sp, r7
 8100db2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100db6:	4770      	bx	lr
 8100db8:	58024400 	.word	0x58024400

08100dbc <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8100dbc:	b480      	push	{r7}
 8100dbe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8100dc0:	e7fe      	b.n	8100dc0 <NMI_Handler+0x4>

08100dc2 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8100dc2:	b480      	push	{r7}
 8100dc4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8100dc6:	e7fe      	b.n	8100dc6 <HardFault_Handler+0x4>

08100dc8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8100dc8:	b480      	push	{r7}
 8100dca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8100dcc:	e7fe      	b.n	8100dcc <MemManage_Handler+0x4>

08100dce <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8100dce:	b480      	push	{r7}
 8100dd0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8100dd2:	e7fe      	b.n	8100dd2 <BusFault_Handler+0x4>

08100dd4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8100dd4:	b480      	push	{r7}
 8100dd6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8100dd8:	e7fe      	b.n	8100dd8 <UsageFault_Handler+0x4>

08100dda <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8100dda:	b480      	push	{r7}
 8100ddc:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8100dde:	bf00      	nop
 8100de0:	46bd      	mov	sp, r7
 8100de2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100de6:	4770      	bx	lr

08100de8 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8100de8:	b480      	push	{r7}
 8100dea:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8100dec:	bf00      	nop
 8100dee:	46bd      	mov	sp, r7
 8100df0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100df4:	4770      	bx	lr

08100df6 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8100df6:	b480      	push	{r7}
 8100df8:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8100dfa:	bf00      	nop
 8100dfc:	46bd      	mov	sp, r7
 8100dfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100e02:	4770      	bx	lr

08100e04 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8100e04:	b580      	push	{r7, lr}
 8100e06:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8100e08:	f002 fb4a 	bl	81034a0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8100e0c:	bf00      	nop
 8100e0e:	bd80      	pop	{r7, pc}

08100e10 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack      /* set stack pointer */
 8100e10:	f8df d034 	ldr.w	sp, [pc, #52]	; 8100e48 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit
 8100e14:	f002 fa94 	bl	8103340 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8100e18:	480c      	ldr	r0, [pc, #48]	; (8100e4c <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8100e1a:	490d      	ldr	r1, [pc, #52]	; (8100e50 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8100e1c:	4a0d      	ldr	r2, [pc, #52]	; (8100e54 <LoopFillZerobss+0x1a>)
  movs r3, #0
 8100e1e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8100e20:	e002      	b.n	8100e28 <LoopCopyDataInit>

08100e22 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8100e22:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8100e24:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8100e26:	3304      	adds	r3, #4

08100e28 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8100e28:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8100e2a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8100e2c:	d3f9      	bcc.n	8100e22 <CopyDataInit>
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8100e2e:	4a0a      	ldr	r2, [pc, #40]	; (8100e58 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8100e30:	4c0a      	ldr	r4, [pc, #40]	; (8100e5c <LoopFillZerobss+0x22>)
  movs r3, #0
 8100e32:	2300      	movs	r3, #0
  b LoopFillZerobss
 8100e34:	e001      	b.n	8100e3a <LoopFillZerobss>

08100e36 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8100e36:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8100e38:	3204      	adds	r2, #4

08100e3a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8100e3a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8100e3c:	d3fb      	bcc.n	8100e36 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8100e3e:	f00a fd97 	bl	810b970 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8100e42:	f7ff fe6f 	bl	8100b24 <main>
  bx  lr
 8100e46:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8100e48:	10048000 	.word	0x10048000
  ldr r0, =_sdata
 8100e4c:	10000000 	.word	0x10000000
  ldr r1, =_edata
 8100e50:	100073d0 	.word	0x100073d0
  ldr r2, =_sidata
 8100e54:	08179b80 	.word	0x08179b80
  ldr r2, =_sbss
 8100e58:	100073d0 	.word	0x100073d0
  ldr r4, =_ebss
 8100e5c:	1003fef4 	.word	0x1003fef4

08100e60 <ADC3_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8100e60:	e7fe      	b.n	8100e60 <ADC3_IRQHandler>
	...

08100e64 <face_recognition_configure_activations>:

/******************************************************************************/
AI_DECLARE_STATIC
ai_bool face_recognition_configure_activations(
  ai_network* net_ctx, const ai_network_params* params)
{
 8100e64:	b580      	push	{r7, lr}
 8100e66:	b082      	sub	sp, #8
 8100e68:	af00      	add	r7, sp, #0
 8100e6a:	6078      	str	r0, [r7, #4]
 8100e6c:	6039      	str	r1, [r7, #0]
  AI_ASSERT(net_ctx)

  if (ai_platform_get_activations_map(g_face_recognition_activations_map, 1, params)) {
 8100e6e:	683a      	ldr	r2, [r7, #0]
 8100e70:	2101      	movs	r1, #1
 8100e72:	48a0      	ldr	r0, [pc, #640]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100e74:	f003 fed8 	bl	8104c28 <ai_platform_get_activations_map>
 8100e78:	4603      	mov	r3, r0
 8100e7a:	2b00      	cmp	r3, #0
 8100e7c:	f000 87e0 	beq.w	8101e40 <face_recognition_configure_activations+0xfdc>
    /* Updating activations (byte) offsets */
    
    serving_default_input_10_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 23124);
 8100e80:	4b9c      	ldr	r3, [pc, #624]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100e82:	681b      	ldr	r3, [r3, #0]
 8100e84:	f503 43b4 	add.w	r3, r3, #23040	; 0x5a00
 8100e88:	3354      	adds	r3, #84	; 0x54
 8100e8a:	4a9b      	ldr	r2, [pc, #620]	; (81010f8 <face_recognition_configure_activations+0x294>)
 8100e8c:	6093      	str	r3, [r2, #8]
    serving_default_input_10_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 23124);
 8100e8e:	4b99      	ldr	r3, [pc, #612]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100e90:	681b      	ldr	r3, [r3, #0]
 8100e92:	f503 43b4 	add.w	r3, r3, #23040	; 0x5a00
 8100e96:	3354      	adds	r3, #84	; 0x54
 8100e98:	4a97      	ldr	r2, [pc, #604]	; (81010f8 <face_recognition_configure_activations+0x294>)
 8100e9a:	60d3      	str	r3, [r2, #12]
    conversion_0_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 23120);
 8100e9c:	4b95      	ldr	r3, [pc, #596]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100e9e:	681b      	ldr	r3, [r3, #0]
 8100ea0:	f503 43b4 	add.w	r3, r3, #23040	; 0x5a00
 8100ea4:	3350      	adds	r3, #80	; 0x50
 8100ea6:	4a95      	ldr	r2, [pc, #596]	; (81010fc <face_recognition_configure_activations+0x298>)
 8100ea8:	6093      	str	r3, [r2, #8]
    conversion_0_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 23120);
 8100eaa:	4b92      	ldr	r3, [pc, #584]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100eac:	681b      	ldr	r3, [r3, #0]
 8100eae:	f503 43b4 	add.w	r3, r3, #23040	; 0x5a00
 8100eb2:	3350      	adds	r3, #80	; 0x50
 8100eb4:	4a91      	ldr	r2, [pc, #580]	; (81010fc <face_recognition_configure_activations+0x298>)
 8100eb6:	60d3      	str	r3, [r2, #12]
    conv2d_1_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 5696);
 8100eb8:	4b8e      	ldr	r3, [pc, #568]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100eba:	681b      	ldr	r3, [r3, #0]
 8100ebc:	f503 53b2 	add.w	r3, r3, #5696	; 0x1640
 8100ec0:	4a8f      	ldr	r2, [pc, #572]	; (8101100 <face_recognition_configure_activations+0x29c>)
 8100ec2:	6093      	str	r3, [r2, #8]
    conv2d_1_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 5696);
 8100ec4:	4b8b      	ldr	r3, [pc, #556]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100ec6:	681b      	ldr	r3, [r3, #0]
 8100ec8:	f503 53b2 	add.w	r3, r3, #5696	; 0x1640
 8100ecc:	4a8c      	ldr	r2, [pc, #560]	; (8101100 <face_recognition_configure_activations+0x29c>)
 8100ece:	60d3      	str	r3, [r2, #12]
    conv2d_2_pad_before_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 1536);
 8100ed0:	4b88      	ldr	r3, [pc, #544]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100ed2:	681b      	ldr	r3, [r3, #0]
 8100ed4:	f503 63c0 	add.w	r3, r3, #1536	; 0x600
 8100ed8:	4a8a      	ldr	r2, [pc, #552]	; (8101104 <face_recognition_configure_activations+0x2a0>)
 8100eda:	6093      	str	r3, [r2, #8]
    conv2d_2_pad_before_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 1536);
 8100edc:	4b85      	ldr	r3, [pc, #532]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100ede:	681b      	ldr	r3, [r3, #0]
 8100ee0:	f503 63c0 	add.w	r3, r3, #1536	; 0x600
 8100ee4:	4a87      	ldr	r2, [pc, #540]	; (8101104 <face_recognition_configure_activations+0x2a0>)
 8100ee6:	60d3      	str	r3, [r2, #12]
    conv2d_2_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 71680);
 8100ee8:	4b82      	ldr	r3, [pc, #520]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100eea:	681b      	ldr	r3, [r3, #0]
 8100eec:	f503 338c 	add.w	r3, r3, #71680	; 0x11800
 8100ef0:	4a85      	ldr	r2, [pc, #532]	; (8101108 <face_recognition_configure_activations+0x2a4>)
 8100ef2:	6093      	str	r3, [r2, #8]
    conv2d_2_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 71680);
 8100ef4:	4b7f      	ldr	r3, [pc, #508]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100ef6:	681b      	ldr	r3, [r3, #0]
 8100ef8:	f503 338c 	add.w	r3, r3, #71680	; 0x11800
 8100efc:	4a82      	ldr	r2, [pc, #520]	; (8101108 <face_recognition_configure_activations+0x2a4>)
 8100efe:	60d3      	str	r3, [r2, #12]
    conv2d_2_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 512);
 8100f00:	4b7c      	ldr	r3, [pc, #496]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100f02:	681b      	ldr	r3, [r3, #0]
 8100f04:	f503 7300 	add.w	r3, r3, #512	; 0x200
 8100f08:	4a80      	ldr	r2, [pc, #512]	; (810110c <face_recognition_configure_activations+0x2a8>)
 8100f0a:	6093      	str	r3, [r2, #8]
    conv2d_2_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 512);
 8100f0c:	4b79      	ldr	r3, [pc, #484]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100f0e:	681b      	ldr	r3, [r3, #0]
 8100f10:	f503 7300 	add.w	r3, r3, #512	; 0x200
 8100f14:	4a7d      	ldr	r2, [pc, #500]	; (810110c <face_recognition_configure_activations+0x2a8>)
 8100f16:	60d3      	str	r3, [r2, #12]
    conv2d_3_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 72132);
 8100f18:	4b76      	ldr	r3, [pc, #472]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100f1a:	681b      	ldr	r3, [r3, #0]
 8100f1c:	f503 338c 	add.w	r3, r3, #71680	; 0x11800
 8100f20:	f503 73e2 	add.w	r3, r3, #452	; 0x1c4
 8100f24:	4a7a      	ldr	r2, [pc, #488]	; (8101110 <face_recognition_configure_activations+0x2ac>)
 8100f26:	6093      	str	r3, [r2, #8]
    conv2d_3_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 72132);
 8100f28:	4b72      	ldr	r3, [pc, #456]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100f2a:	681b      	ldr	r3, [r3, #0]
 8100f2c:	f503 338c 	add.w	r3, r3, #71680	; 0x11800
 8100f30:	f503 73e2 	add.w	r3, r3, #452	; 0x1c4
 8100f34:	4a76      	ldr	r2, [pc, #472]	; (8101110 <face_recognition_configure_activations+0x2ac>)
 8100f36:	60d3      	str	r3, [r2, #12]
    conv2d_3_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8100f38:	4b6e      	ldr	r3, [pc, #440]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100f3a:	681b      	ldr	r3, [r3, #0]
 8100f3c:	4a75      	ldr	r2, [pc, #468]	; (8101114 <face_recognition_configure_activations+0x2b0>)
 8100f3e:	6093      	str	r3, [r2, #8]
    conv2d_3_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8100f40:	4b6c      	ldr	r3, [pc, #432]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100f42:	681b      	ldr	r3, [r3, #0]
 8100f44:	4a73      	ldr	r2, [pc, #460]	; (8101114 <face_recognition_configure_activations+0x2b0>)
 8100f46:	60d3      	str	r3, [r2, #12]
    conv2d_4_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 32768);
 8100f48:	4b6a      	ldr	r3, [pc, #424]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100f4a:	681b      	ldr	r3, [r3, #0]
 8100f4c:	f503 4300 	add.w	r3, r3, #32768	; 0x8000
 8100f50:	4a71      	ldr	r2, [pc, #452]	; (8101118 <face_recognition_configure_activations+0x2b4>)
 8100f52:	6093      	str	r3, [r2, #8]
    conv2d_4_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 32768);
 8100f54:	4b67      	ldr	r3, [pc, #412]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100f56:	681b      	ldr	r3, [r3, #0]
 8100f58:	f503 4300 	add.w	r3, r3, #32768	; 0x8000
 8100f5c:	4a6e      	ldr	r2, [pc, #440]	; (8101118 <face_recognition_configure_activations+0x2b4>)
 8100f5e:	60d3      	str	r3, [r2, #12]
    conv2d_6_pad_before_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 26576);
 8100f60:	4b64      	ldr	r3, [pc, #400]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100f62:	681b      	ldr	r3, [r3, #0]
 8100f64:	f503 43cf 	add.w	r3, r3, #26496	; 0x6780
 8100f68:	3350      	adds	r3, #80	; 0x50
 8100f6a:	4a6c      	ldr	r2, [pc, #432]	; (810111c <face_recognition_configure_activations+0x2b8>)
 8100f6c:	6093      	str	r3, [r2, #8]
    conv2d_6_pad_before_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 26576);
 8100f6e:	4b61      	ldr	r3, [pc, #388]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100f70:	681b      	ldr	r3, [r3, #0]
 8100f72:	f503 43cf 	add.w	r3, r3, #26496	; 0x6780
 8100f76:	3350      	adds	r3, #80	; 0x50
 8100f78:	4a68      	ldr	r2, [pc, #416]	; (810111c <face_recognition_configure_activations+0x2b8>)
 8100f7a:	60d3      	str	r3, [r2, #12]
    conv2d_6_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8100f7c:	4b5d      	ldr	r3, [pc, #372]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100f7e:	681b      	ldr	r3, [r3, #0]
 8100f80:	4a67      	ldr	r2, [pc, #412]	; (8101120 <face_recognition_configure_activations+0x2bc>)
 8100f82:	6093      	str	r3, [r2, #8]
    conv2d_6_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8100f84:	4b5b      	ldr	r3, [pc, #364]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100f86:	681b      	ldr	r3, [r3, #0]
 8100f88:	4a65      	ldr	r2, [pc, #404]	; (8101120 <face_recognition_configure_activations+0x2bc>)
 8100f8a:	60d3      	str	r3, [r2, #12]
    conv2d_6_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 25040);
 8100f8c:	4b59      	ldr	r3, [pc, #356]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100f8e:	681b      	ldr	r3, [r3, #0]
 8100f90:	f503 43c3 	add.w	r3, r3, #24960	; 0x6180
 8100f94:	3350      	adds	r3, #80	; 0x50
 8100f96:	4a63      	ldr	r2, [pc, #396]	; (8101124 <face_recognition_configure_activations+0x2c0>)
 8100f98:	6093      	str	r3, [r2, #8]
    conv2d_6_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 25040);
 8100f9a:	4b56      	ldr	r3, [pc, #344]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100f9c:	681b      	ldr	r3, [r3, #0]
 8100f9e:	f503 43c3 	add.w	r3, r3, #24960	; 0x6180
 8100fa2:	3350      	adds	r3, #80	; 0x50
 8100fa4:	4a5f      	ldr	r2, [pc, #380]	; (8101124 <face_recognition_configure_activations+0x2c0>)
 8100fa6:	60d3      	str	r3, [r2, #12]
    conv2d_7_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 229104);
 8100fa8:	4b52      	ldr	r3, [pc, #328]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100faa:	681b      	ldr	r3, [r3, #0]
 8100fac:	f503 335f 	add.w	r3, r3, #228352	; 0x37c00
 8100fb0:	f503 733c 	add.w	r3, r3, #752	; 0x2f0
 8100fb4:	4a5c      	ldr	r2, [pc, #368]	; (8101128 <face_recognition_configure_activations+0x2c4>)
 8100fb6:	6093      	str	r3, [r2, #8]
    conv2d_7_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 229104);
 8100fb8:	4b4e      	ldr	r3, [pc, #312]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100fba:	681b      	ldr	r3, [r3, #0]
 8100fbc:	f503 335f 	add.w	r3, r3, #228352	; 0x37c00
 8100fc0:	f503 733c 	add.w	r3, r3, #752	; 0x2f0
 8100fc4:	4a58      	ldr	r2, [pc, #352]	; (8101128 <face_recognition_configure_activations+0x2c4>)
 8100fc6:	60d3      	str	r3, [r2, #12]
    conv2d_7_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 24784);
 8100fc8:	4b4a      	ldr	r3, [pc, #296]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100fca:	681b      	ldr	r3, [r3, #0]
 8100fcc:	f503 43c1 	add.w	r3, r3, #24704	; 0x6080
 8100fd0:	3350      	adds	r3, #80	; 0x50
 8100fd2:	4a56      	ldr	r2, [pc, #344]	; (810112c <face_recognition_configure_activations+0x2c8>)
 8100fd4:	6093      	str	r3, [r2, #8]
    conv2d_7_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 24784);
 8100fd6:	4b47      	ldr	r3, [pc, #284]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100fd8:	681b      	ldr	r3, [r3, #0]
 8100fda:	f503 43c1 	add.w	r3, r3, #24704	; 0x6080
 8100fde:	3350      	adds	r3, #80	; 0x50
 8100fe0:	4a52      	ldr	r2, [pc, #328]	; (810112c <face_recognition_configure_activations+0x2c8>)
 8100fe2:	60d3      	str	r3, [r2, #12]
    conv2d_8_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 32976);
 8100fe4:	4b43      	ldr	r3, [pc, #268]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100fe6:	681b      	ldr	r3, [r3, #0]
 8100fe8:	f503 4300 	add.w	r3, r3, #32768	; 0x8000
 8100fec:	33d0      	adds	r3, #208	; 0xd0
 8100fee:	4a50      	ldr	r2, [pc, #320]	; (8101130 <face_recognition_configure_activations+0x2cc>)
 8100ff0:	6093      	str	r3, [r2, #8]
    conv2d_8_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 32976);
 8100ff2:	4b40      	ldr	r3, [pc, #256]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8100ff4:	681b      	ldr	r3, [r3, #0]
 8100ff6:	f503 4300 	add.w	r3, r3, #32768	; 0x8000
 8100ffa:	33d0      	adds	r3, #208	; 0xd0
 8100ffc:	4a4c      	ldr	r2, [pc, #304]	; (8101130 <face_recognition_configure_activations+0x2cc>)
 8100ffe:	60d3      	str	r3, [r2, #12]
    conv2d_9_pad_before_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 82128);
 8101000:	4b3c      	ldr	r3, [pc, #240]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8101002:	681b      	ldr	r3, [r3, #0]
 8101004:	f503 33a0 	add.w	r3, r3, #81920	; 0x14000
 8101008:	33d0      	adds	r3, #208	; 0xd0
 810100a:	4a4a      	ldr	r2, [pc, #296]	; (8101134 <face_recognition_configure_activations+0x2d0>)
 810100c:	6093      	str	r3, [r2, #8]
    conv2d_9_pad_before_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 82128);
 810100e:	4b39      	ldr	r3, [pc, #228]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8101010:	681b      	ldr	r3, [r3, #0]
 8101012:	f503 33a0 	add.w	r3, r3, #81920	; 0x14000
 8101016:	33d0      	adds	r3, #208	; 0xd0
 8101018:	4a46      	ldr	r2, [pc, #280]	; (8101134 <face_recognition_configure_activations+0x2d0>)
 810101a:	60d3      	str	r3, [r2, #12]
    conv2d_9_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 23004);
 810101c:	4b35      	ldr	r3, [pc, #212]	; (81010f4 <face_recognition_configure_activations+0x290>)
 810101e:	681b      	ldr	r3, [r3, #0]
 8101020:	f503 43b3 	add.w	r3, r3, #22912	; 0x5980
 8101024:	335c      	adds	r3, #92	; 0x5c
 8101026:	4a44      	ldr	r2, [pc, #272]	; (8101138 <face_recognition_configure_activations+0x2d4>)
 8101028:	6093      	str	r3, [r2, #8]
    conv2d_9_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 23004);
 810102a:	4b32      	ldr	r3, [pc, #200]	; (81010f4 <face_recognition_configure_activations+0x290>)
 810102c:	681b      	ldr	r3, [r3, #0]
 810102e:	f503 43b3 	add.w	r3, r3, #22912	; 0x5980
 8101032:	335c      	adds	r3, #92	; 0x5c
 8101034:	4a40      	ldr	r2, [pc, #256]	; (8101138 <face_recognition_configure_activations+0x2d4>)
 8101036:	60d3      	str	r3, [r2, #12]
    conv2d_9_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 80592);
 8101038:	4b2e      	ldr	r3, [pc, #184]	; (81010f4 <face_recognition_configure_activations+0x290>)
 810103a:	681b      	ldr	r3, [r3, #0]
 810103c:	f503 339d 	add.w	r3, r3, #80384	; 0x13a00
 8101040:	33d0      	adds	r3, #208	; 0xd0
 8101042:	4a3e      	ldr	r2, [pc, #248]	; (810113c <face_recognition_configure_activations+0x2d8>)
 8101044:	6093      	str	r3, [r2, #8]
    conv2d_9_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 80592);
 8101046:	4b2b      	ldr	r3, [pc, #172]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8101048:	681b      	ldr	r3, [r3, #0]
 810104a:	f503 339d 	add.w	r3, r3, #80384	; 0x13a00
 810104e:	33d0      	adds	r3, #208	; 0xd0
 8101050:	4a3a      	ldr	r2, [pc, #232]	; (810113c <face_recognition_configure_activations+0x2d8>)
 8101052:	60d3      	str	r3, [r2, #12]
    conv2d_10_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 80336);
 8101054:	4b27      	ldr	r3, [pc, #156]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8101056:	681b      	ldr	r3, [r3, #0]
 8101058:	f503 339c 	add.w	r3, r3, #79872	; 0x13800
 810105c:	f503 73e8 	add.w	r3, r3, #464	; 0x1d0
 8101060:	4a37      	ldr	r2, [pc, #220]	; (8101140 <face_recognition_configure_activations+0x2dc>)
 8101062:	6093      	str	r3, [r2, #8]
    conv2d_10_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 80336);
 8101064:	4b23      	ldr	r3, [pc, #140]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8101066:	681b      	ldr	r3, [r3, #0]
 8101068:	f503 339c 	add.w	r3, r3, #79872	; 0x13800
 810106c:	f503 73e8 	add.w	r3, r3, #464	; 0x1d0
 8101070:	4a33      	ldr	r2, [pc, #204]	; (8101140 <face_recognition_configure_activations+0x2dc>)
 8101072:	60d3      	str	r3, [r2, #12]
    eltwise_11_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 80336);
 8101074:	4b1f      	ldr	r3, [pc, #124]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8101076:	681b      	ldr	r3, [r3, #0]
 8101078:	f503 339c 	add.w	r3, r3, #79872	; 0x13800
 810107c:	f503 73e8 	add.w	r3, r3, #464	; 0x1d0
 8101080:	4a30      	ldr	r2, [pc, #192]	; (8101144 <face_recognition_configure_activations+0x2e0>)
 8101082:	6093      	str	r3, [r2, #8]
    eltwise_11_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 80336);
 8101084:	4b1b      	ldr	r3, [pc, #108]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8101086:	681b      	ldr	r3, [r3, #0]
 8101088:	f503 339c 	add.w	r3, r3, #79872	; 0x13800
 810108c:	f503 73e8 	add.w	r3, r3, #464	; 0x1d0
 8101090:	4a2c      	ldr	r2, [pc, #176]	; (8101144 <face_recognition_configure_activations+0x2e0>)
 8101092:	60d3      	str	r3, [r2, #12]
    conv2d_12_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 88528);
 8101094:	4b17      	ldr	r3, [pc, #92]	; (81010f4 <face_recognition_configure_activations+0x290>)
 8101096:	681b      	ldr	r3, [r3, #0]
 8101098:	f503 33ac 	add.w	r3, r3, #88064	; 0x15800
 810109c:	f503 73e8 	add.w	r3, r3, #464	; 0x1d0
 81010a0:	4a29      	ldr	r2, [pc, #164]	; (8101148 <face_recognition_configure_activations+0x2e4>)
 81010a2:	6093      	str	r3, [r2, #8]
    conv2d_12_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 88528);
 81010a4:	4b13      	ldr	r3, [pc, #76]	; (81010f4 <face_recognition_configure_activations+0x290>)
 81010a6:	681b      	ldr	r3, [r3, #0]
 81010a8:	f503 33ac 	add.w	r3, r3, #88064	; 0x15800
 81010ac:	f503 73e8 	add.w	r3, r3, #464	; 0x1d0
 81010b0:	4a25      	ldr	r2, [pc, #148]	; (8101148 <face_recognition_configure_activations+0x2e4>)
 81010b2:	60d3      	str	r3, [r2, #12]
    conv2d_14_pad_before_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 85408);
 81010b4:	4b0f      	ldr	r3, [pc, #60]	; (81010f4 <face_recognition_configure_activations+0x290>)
 81010b6:	681b      	ldr	r3, [r3, #0]
 81010b8:	f503 33a6 	add.w	r3, r3, #84992	; 0x14c00
 81010bc:	f503 73d0 	add.w	r3, r3, #416	; 0x1a0
 81010c0:	4a22      	ldr	r2, [pc, #136]	; (810114c <face_recognition_configure_activations+0x2e8>)
 81010c2:	6093      	str	r3, [r2, #8]
    conv2d_14_pad_before_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 85408);
 81010c4:	4b0b      	ldr	r3, [pc, #44]	; (81010f4 <face_recognition_configure_activations+0x290>)
 81010c6:	681b      	ldr	r3, [r3, #0]
 81010c8:	f503 33a6 	add.w	r3, r3, #84992	; 0x14c00
 81010cc:	f503 73d0 	add.w	r3, r3, #416	; 0x1a0
 81010d0:	4a1e      	ldr	r2, [pc, #120]	; (810114c <face_recognition_configure_activations+0x2e8>)
 81010d2:	60d3      	str	r3, [r2, #12]
    conv2d_14_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 81010d4:	4b07      	ldr	r3, [pc, #28]	; (81010f4 <face_recognition_configure_activations+0x290>)
 81010d6:	681b      	ldr	r3, [r3, #0]
 81010d8:	4a1d      	ldr	r2, [pc, #116]	; (8101150 <face_recognition_configure_activations+0x2ec>)
 81010da:	6093      	str	r3, [r2, #8]
    conv2d_14_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 81010dc:	4b05      	ldr	r3, [pc, #20]	; (81010f4 <face_recognition_configure_activations+0x290>)
 81010de:	681b      	ldr	r3, [r3, #0]
 81010e0:	4a1b      	ldr	r2, [pc, #108]	; (8101150 <face_recognition_configure_activations+0x2ec>)
 81010e2:	60d3      	str	r3, [r2, #12]
    conv2d_14_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 73120);
 81010e4:	4b03      	ldr	r3, [pc, #12]	; (81010f4 <face_recognition_configure_activations+0x290>)
 81010e6:	681b      	ldr	r3, [r3, #0]
 81010e8:	f503 338e 	add.w	r3, r3, #72704	; 0x11c00
 81010ec:	f503 73d0 	add.w	r3, r3, #416	; 0x1a0
 81010f0:	e030      	b.n	8101154 <face_recognition_configure_activations+0x2f0>
 81010f2:	bf00      	nop
 81010f4:	1003f910 	.word	0x1003f910
 81010f8:	10000000 	.word	0x10000000
 81010fc:	10000010 	.word	0x10000010
 8101100:	10000020 	.word	0x10000020
 8101104:	10000030 	.word	0x10000030
 8101108:	10000c00 	.word	0x10000c00
 810110c:	10000040 	.word	0x10000040
 8101110:	10000c10 	.word	0x10000c10
 8101114:	10000050 	.word	0x10000050
 8101118:	10000060 	.word	0x10000060
 810111c:	10000070 	.word	0x10000070
 8101120:	10000c30 	.word	0x10000c30
 8101124:	10000080 	.word	0x10000080
 8101128:	10000c40 	.word	0x10000c40
 810112c:	10000090 	.word	0x10000090
 8101130:	100000a0 	.word	0x100000a0
 8101134:	100000b0 	.word	0x100000b0
 8101138:	10000c60 	.word	0x10000c60
 810113c:	100000c0 	.word	0x100000c0
 8101140:	100000d0 	.word	0x100000d0
 8101144:	100000e0 	.word	0x100000e0
 8101148:	100000f0 	.word	0x100000f0
 810114c:	10000100 	.word	0x10000100
 8101150:	10000c90 	.word	0x10000c90
 8101154:	4a9a      	ldr	r2, [pc, #616]	; (81013c0 <face_recognition_configure_activations+0x55c>)
 8101156:	6093      	str	r3, [r2, #8]
    conv2d_14_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 73120);
 8101158:	4b9a      	ldr	r3, [pc, #616]	; (81013c4 <face_recognition_configure_activations+0x560>)
 810115a:	681b      	ldr	r3, [r3, #0]
 810115c:	f503 338e 	add.w	r3, r3, #72704	; 0x11c00
 8101160:	f503 73d0 	add.w	r3, r3, #416	; 0x1a0
 8101164:	4a96      	ldr	r2, [pc, #600]	; (81013c0 <face_recognition_configure_activations+0x55c>)
 8101166:	60d3      	str	r3, [r2, #12]
    conv2d_15_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 72768);
 8101168:	4b96      	ldr	r3, [pc, #600]	; (81013c4 <face_recognition_configure_activations+0x560>)
 810116a:	681b      	ldr	r3, [r3, #0]
 810116c:	f503 338e 	add.w	r3, r3, #72704	; 0x11c00
 8101170:	3340      	adds	r3, #64	; 0x40
 8101172:	4a95      	ldr	r2, [pc, #596]	; (81013c8 <face_recognition_configure_activations+0x564>)
 8101174:	6093      	str	r3, [r2, #8]
    conv2d_15_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 72768);
 8101176:	4b93      	ldr	r3, [pc, #588]	; (81013c4 <face_recognition_configure_activations+0x560>)
 8101178:	681b      	ldr	r3, [r3, #0]
 810117a:	f503 338e 	add.w	r3, r3, #72704	; 0x11c00
 810117e:	3340      	adds	r3, #64	; 0x40
 8101180:	4a91      	ldr	r2, [pc, #580]	; (81013c8 <face_recognition_configure_activations+0x564>)
 8101182:	60d3      	str	r3, [r2, #12]
    conv2d_15_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 225280);
 8101184:	4b8f      	ldr	r3, [pc, #572]	; (81013c4 <face_recognition_configure_activations+0x560>)
 8101186:	681b      	ldr	r3, [r3, #0]
 8101188:	f503 335c 	add.w	r3, r3, #225280	; 0x37000
 810118c:	4a8f      	ldr	r2, [pc, #572]	; (81013cc <face_recognition_configure_activations+0x568>)
 810118e:	6093      	str	r3, [r2, #8]
    conv2d_15_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 225280);
 8101190:	4b8c      	ldr	r3, [pc, #560]	; (81013c4 <face_recognition_configure_activations+0x560>)
 8101192:	681b      	ldr	r3, [r3, #0]
 8101194:	f503 335c 	add.w	r3, r3, #225280	; 0x37000
 8101198:	4a8c      	ldr	r2, [pc, #560]	; (81013cc <face_recognition_configure_activations+0x568>)
 810119a:	60d3      	str	r3, [r2, #12]
    conv2d_16_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 810119c:	4b89      	ldr	r3, [pc, #548]	; (81013c4 <face_recognition_configure_activations+0x560>)
 810119e:	681b      	ldr	r3, [r3, #0]
 81011a0:	4a8b      	ldr	r2, [pc, #556]	; (81013d0 <face_recognition_configure_activations+0x56c>)
 81011a2:	6093      	str	r3, [r2, #8]
    conv2d_16_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 81011a4:	4b87      	ldr	r3, [pc, #540]	; (81013c4 <face_recognition_configure_activations+0x560>)
 81011a6:	681b      	ldr	r3, [r3, #0]
 81011a8:	4a89      	ldr	r2, [pc, #548]	; (81013d0 <face_recognition_configure_activations+0x56c>)
 81011aa:	60d3      	str	r3, [r2, #12]
    conv2d_17_pad_before_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 24576);
 81011ac:	4b85      	ldr	r3, [pc, #532]	; (81013c4 <face_recognition_configure_activations+0x560>)
 81011ae:	681b      	ldr	r3, [r3, #0]
 81011b0:	f503 43c0 	add.w	r3, r3, #24576	; 0x6000
 81011b4:	4a87      	ldr	r2, [pc, #540]	; (81013d4 <face_recognition_configure_activations+0x570>)
 81011b6:	6093      	str	r3, [r2, #8]
    conv2d_17_pad_before_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 24576);
 81011b8:	4b82      	ldr	r3, [pc, #520]	; (81013c4 <face_recognition_configure_activations+0x560>)
 81011ba:	681b      	ldr	r3, [r3, #0]
 81011bc:	f503 43c0 	add.w	r3, r3, #24576	; 0x6000
 81011c0:	4a84      	ldr	r2, [pc, #528]	; (81013d4 <face_recognition_configure_activations+0x570>)
 81011c2:	60d3      	str	r3, [r2, #12]
    conv2d_17_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 221724);
 81011c4:	4b7f      	ldr	r3, [pc, #508]	; (81013c4 <face_recognition_configure_activations+0x560>)
 81011c6:	681b      	ldr	r3, [r3, #0]
 81011c8:	f503 3358 	add.w	r3, r3, #221184	; 0x36000
 81011cc:	f503 7307 	add.w	r3, r3, #540	; 0x21c
 81011d0:	4a81      	ldr	r2, [pc, #516]	; (81013d8 <face_recognition_configure_activations+0x574>)
 81011d2:	6093      	str	r3, [r2, #8]
    conv2d_17_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 221724);
 81011d4:	4b7b      	ldr	r3, [pc, #492]	; (81013c4 <face_recognition_configure_activations+0x560>)
 81011d6:	681b      	ldr	r3, [r3, #0]
 81011d8:	f503 3358 	add.w	r3, r3, #221184	; 0x36000
 81011dc:	f503 7307 	add.w	r3, r3, #540	; 0x21c
 81011e0:	4a7d      	ldr	r2, [pc, #500]	; (81013d8 <face_recognition_configure_activations+0x574>)
 81011e2:	60d3      	str	r3, [r2, #12]
    conv2d_17_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 23040);
 81011e4:	4b77      	ldr	r3, [pc, #476]	; (81013c4 <face_recognition_configure_activations+0x560>)
 81011e6:	681b      	ldr	r3, [r3, #0]
 81011e8:	f503 43b4 	add.w	r3, r3, #23040	; 0x5a00
 81011ec:	4a7b      	ldr	r2, [pc, #492]	; (81013dc <face_recognition_configure_activations+0x578>)
 81011ee:	6093      	str	r3, [r2, #8]
    conv2d_17_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 23040);
 81011f0:	4b74      	ldr	r3, [pc, #464]	; (81013c4 <face_recognition_configure_activations+0x560>)
 81011f2:	681b      	ldr	r3, [r3, #0]
 81011f4:	f503 43b4 	add.w	r3, r3, #23040	; 0x5a00
 81011f8:	4a78      	ldr	r2, [pc, #480]	; (81013dc <face_recognition_configure_activations+0x578>)
 81011fa:	60d3      	str	r3, [r2, #12]
    conv2d_18_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 22784);
 81011fc:	4b71      	ldr	r3, [pc, #452]	; (81013c4 <face_recognition_configure_activations+0x560>)
 81011fe:	681b      	ldr	r3, [r3, #0]
 8101200:	f503 43b2 	add.w	r3, r3, #22784	; 0x5900
 8101204:	4a76      	ldr	r2, [pc, #472]	; (81013e0 <face_recognition_configure_activations+0x57c>)
 8101206:	6093      	str	r3, [r2, #8]
    conv2d_18_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 22784);
 8101208:	4b6e      	ldr	r3, [pc, #440]	; (81013c4 <face_recognition_configure_activations+0x560>)
 810120a:	681b      	ldr	r3, [r3, #0]
 810120c:	f503 43b2 	add.w	r3, r3, #22784	; 0x5900
 8101210:	4a73      	ldr	r2, [pc, #460]	; (81013e0 <face_recognition_configure_activations+0x57c>)
 8101212:	60d3      	str	r3, [r2, #12]
    eltwise_19_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 22784);
 8101214:	4b6b      	ldr	r3, [pc, #428]	; (81013c4 <face_recognition_configure_activations+0x560>)
 8101216:	681b      	ldr	r3, [r3, #0]
 8101218:	f503 43b2 	add.w	r3, r3, #22784	; 0x5900
 810121c:	4a71      	ldr	r2, [pc, #452]	; (81013e4 <face_recognition_configure_activations+0x580>)
 810121e:	6093      	str	r3, [r2, #8]
    eltwise_19_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 22784);
 8101220:	4b68      	ldr	r3, [pc, #416]	; (81013c4 <face_recognition_configure_activations+0x560>)
 8101222:	681b      	ldr	r3, [r3, #0]
 8101224:	f503 43b2 	add.w	r3, r3, #22784	; 0x5900
 8101228:	4a6e      	ldr	r2, [pc, #440]	; (81013e4 <face_recognition_configure_activations+0x580>)
 810122a:	60d3      	str	r3, [r2, #12]
    conv2d_20_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 26880);
 810122c:	4b65      	ldr	r3, [pc, #404]	; (81013c4 <face_recognition_configure_activations+0x560>)
 810122e:	681b      	ldr	r3, [r3, #0]
 8101230:	f503 43d2 	add.w	r3, r3, #26880	; 0x6900
 8101234:	4a6c      	ldr	r2, [pc, #432]	; (81013e8 <face_recognition_configure_activations+0x584>)
 8101236:	6093      	str	r3, [r2, #8]
    conv2d_20_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 26880);
 8101238:	4b62      	ldr	r3, [pc, #392]	; (81013c4 <face_recognition_configure_activations+0x560>)
 810123a:	681b      	ldr	r3, [r3, #0]
 810123c:	f503 43d2 	add.w	r3, r3, #26880	; 0x6900
 8101240:	4a69      	ldr	r2, [pc, #420]	; (81013e8 <face_recognition_configure_activations+0x584>)
 8101242:	60d3      	str	r3, [r2, #12]
    conv2d_21_pad_before_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 51456);
 8101244:	4b5f      	ldr	r3, [pc, #380]	; (81013c4 <face_recognition_configure_activations+0x560>)
 8101246:	681b      	ldr	r3, [r3, #0]
 8101248:	f503 4349 	add.w	r3, r3, #51456	; 0xc900
 810124c:	4a67      	ldr	r2, [pc, #412]	; (81013ec <face_recognition_configure_activations+0x588>)
 810124e:	6093      	str	r3, [r2, #8]
    conv2d_21_pad_before_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 51456);
 8101250:	4b5c      	ldr	r3, [pc, #368]	; (81013c4 <face_recognition_configure_activations+0x560>)
 8101252:	681b      	ldr	r3, [r3, #0]
 8101254:	f503 4349 	add.w	r3, r3, #51456	; 0xc900
 8101258:	4a64      	ldr	r2, [pc, #400]	; (81013ec <face_recognition_configure_activations+0x588>)
 810125a:	60d3      	str	r3, [r2, #12]
    conv2d_21_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 19228);
 810125c:	4b59      	ldr	r3, [pc, #356]	; (81013c4 <face_recognition_configure_activations+0x560>)
 810125e:	681b      	ldr	r3, [r3, #0]
 8101260:	f503 4396 	add.w	r3, r3, #19200	; 0x4b00
 8101264:	331c      	adds	r3, #28
 8101266:	4a62      	ldr	r2, [pc, #392]	; (81013f0 <face_recognition_configure_activations+0x58c>)
 8101268:	6093      	str	r3, [r2, #8]
    conv2d_21_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 19228);
 810126a:	4b56      	ldr	r3, [pc, #344]	; (81013c4 <face_recognition_configure_activations+0x560>)
 810126c:	681b      	ldr	r3, [r3, #0]
 810126e:	f503 4396 	add.w	r3, r3, #19200	; 0x4b00
 8101272:	331c      	adds	r3, #28
 8101274:	4a5e      	ldr	r2, [pc, #376]	; (81013f0 <face_recognition_configure_activations+0x58c>)
 8101276:	60d3      	str	r3, [r2, #12]
    conv2d_21_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 49920);
 8101278:	4b52      	ldr	r3, [pc, #328]	; (81013c4 <face_recognition_configure_activations+0x560>)
 810127a:	681b      	ldr	r3, [r3, #0]
 810127c:	f503 4343 	add.w	r3, r3, #49920	; 0xc300
 8101280:	4a5c      	ldr	r2, [pc, #368]	; (81013f4 <face_recognition_configure_activations+0x590>)
 8101282:	6093      	str	r3, [r2, #8]
    conv2d_21_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 49920);
 8101284:	4b4f      	ldr	r3, [pc, #316]	; (81013c4 <face_recognition_configure_activations+0x560>)
 8101286:	681b      	ldr	r3, [r3, #0]
 8101288:	f503 4343 	add.w	r3, r3, #49920	; 0xc300
 810128c:	4a59      	ldr	r2, [pc, #356]	; (81013f4 <face_recognition_configure_activations+0x590>)
 810128e:	60d3      	str	r3, [r2, #12]
    conv2d_22_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 49664);
 8101290:	4b4c      	ldr	r3, [pc, #304]	; (81013c4 <face_recognition_configure_activations+0x560>)
 8101292:	681b      	ldr	r3, [r3, #0]
 8101294:	f503 4342 	add.w	r3, r3, #49664	; 0xc200
 8101298:	4a57      	ldr	r2, [pc, #348]	; (81013f8 <face_recognition_configure_activations+0x594>)
 810129a:	6093      	str	r3, [r2, #8]
    conv2d_22_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 49664);
 810129c:	4b49      	ldr	r3, [pc, #292]	; (81013c4 <face_recognition_configure_activations+0x560>)
 810129e:	681b      	ldr	r3, [r3, #0]
 81012a0:	f503 4342 	add.w	r3, r3, #49664	; 0xc200
 81012a4:	4a54      	ldr	r2, [pc, #336]	; (81013f8 <face_recognition_configure_activations+0x594>)
 81012a6:	60d3      	str	r3, [r2, #12]
    eltwise_23_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 49664);
 81012a8:	4b46      	ldr	r3, [pc, #280]	; (81013c4 <face_recognition_configure_activations+0x560>)
 81012aa:	681b      	ldr	r3, [r3, #0]
 81012ac:	f503 4342 	add.w	r3, r3, #49664	; 0xc200
 81012b0:	4a52      	ldr	r2, [pc, #328]	; (81013fc <face_recognition_configure_activations+0x598>)
 81012b2:	6093      	str	r3, [r2, #8]
    eltwise_23_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 49664);
 81012b4:	4b43      	ldr	r3, [pc, #268]	; (81013c4 <face_recognition_configure_activations+0x560>)
 81012b6:	681b      	ldr	r3, [r3, #0]
 81012b8:	f503 4342 	add.w	r3, r3, #49664	; 0xc200
 81012bc:	4a4f      	ldr	r2, [pc, #316]	; (81013fc <face_recognition_configure_activations+0x598>)
 81012be:	60d3      	str	r3, [r2, #12]
    conv2d_24_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 53760);
 81012c0:	4b40      	ldr	r3, [pc, #256]	; (81013c4 <face_recognition_configure_activations+0x560>)
 81012c2:	681b      	ldr	r3, [r3, #0]
 81012c4:	f503 4352 	add.w	r3, r3, #53760	; 0xd200
 81012c8:	4a4d      	ldr	r2, [pc, #308]	; (8101400 <face_recognition_configure_activations+0x59c>)
 81012ca:	6093      	str	r3, [r2, #8]
    conv2d_24_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 53760);
 81012cc:	4b3d      	ldr	r3, [pc, #244]	; (81013c4 <face_recognition_configure_activations+0x560>)
 81012ce:	681b      	ldr	r3, [r3, #0]
 81012d0:	f503 4352 	add.w	r3, r3, #53760	; 0xd200
 81012d4:	4a4a      	ldr	r2, [pc, #296]	; (8101400 <face_recognition_configure_activations+0x59c>)
 81012d6:	60d3      	str	r3, [r2, #12]
    conv2d_26_pad_before_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 50592);
 81012d8:	4b3a      	ldr	r3, [pc, #232]	; (81013c4 <face_recognition_configure_activations+0x560>)
 81012da:	681b      	ldr	r3, [r3, #0]
 81012dc:	f503 4345 	add.w	r3, r3, #50432	; 0xc500
 81012e0:	33a0      	adds	r3, #160	; 0xa0
 81012e2:	4a48      	ldr	r2, [pc, #288]	; (8101404 <face_recognition_configure_activations+0x5a0>)
 81012e4:	6093      	str	r3, [r2, #8]
    conv2d_26_pad_before_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 50592);
 81012e6:	4b37      	ldr	r3, [pc, #220]	; (81013c4 <face_recognition_configure_activations+0x560>)
 81012e8:	681b      	ldr	r3, [r3, #0]
 81012ea:	f503 4345 	add.w	r3, r3, #50432	; 0xc500
 81012ee:	33a0      	adds	r3, #160	; 0xa0
 81012f0:	4a44      	ldr	r2, [pc, #272]	; (8101404 <face_recognition_configure_activations+0x5a0>)
 81012f2:	60d3      	str	r3, [r2, #12]
    conv2d_26_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 81012f4:	4b33      	ldr	r3, [pc, #204]	; (81013c4 <face_recognition_configure_activations+0x560>)
 81012f6:	681b      	ldr	r3, [r3, #0]
 81012f8:	4a43      	ldr	r2, [pc, #268]	; (8101408 <face_recognition_configure_activations+0x5a4>)
 81012fa:	6093      	str	r3, [r2, #8]
    conv2d_26_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 81012fc:	4b31      	ldr	r3, [pc, #196]	; (81013c4 <face_recognition_configure_activations+0x560>)
 81012fe:	681b      	ldr	r3, [r3, #0]
 8101300:	4a41      	ldr	r2, [pc, #260]	; (8101408 <face_recognition_configure_activations+0x5a4>)
 8101302:	60d3      	str	r3, [r2, #12]
    conv2d_26_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 44448);
 8101304:	4b2f      	ldr	r3, [pc, #188]	; (81013c4 <face_recognition_configure_activations+0x560>)
 8101306:	681b      	ldr	r3, [r3, #0]
 8101308:	f503 432d 	add.w	r3, r3, #44288	; 0xad00
 810130c:	33a0      	adds	r3, #160	; 0xa0
 810130e:	4a3f      	ldr	r2, [pc, #252]	; (810140c <face_recognition_configure_activations+0x5a8>)
 8101310:	6093      	str	r3, [r2, #8]
    conv2d_26_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 44448);
 8101312:	4b2c      	ldr	r3, [pc, #176]	; (81013c4 <face_recognition_configure_activations+0x560>)
 8101314:	681b      	ldr	r3, [r3, #0]
 8101316:	f503 432d 	add.w	r3, r3, #44288	; 0xad00
 810131a:	33a0      	adds	r3, #160	; 0xa0
 810131c:	4a3b      	ldr	r2, [pc, #236]	; (810140c <face_recognition_configure_activations+0x5a8>)
 810131e:	60d3      	str	r3, [r2, #12]
    conv2d_27_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 43824);
 8101320:	4b28      	ldr	r3, [pc, #160]	; (81013c4 <face_recognition_configure_activations+0x560>)
 8101322:	681b      	ldr	r3, [r3, #0]
 8101324:	f503 432b 	add.w	r3, r3, #43776	; 0xab00
 8101328:	3330      	adds	r3, #48	; 0x30
 810132a:	4a39      	ldr	r2, [pc, #228]	; (8101410 <face_recognition_configure_activations+0x5ac>)
 810132c:	6093      	str	r3, [r2, #8]
    conv2d_27_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 43824);
 810132e:	4b25      	ldr	r3, [pc, #148]	; (81013c4 <face_recognition_configure_activations+0x560>)
 8101330:	681b      	ldr	r3, [r3, #0]
 8101332:	f503 432b 	add.w	r3, r3, #43776	; 0xab00
 8101336:	3330      	adds	r3, #48	; 0x30
 8101338:	4a35      	ldr	r2, [pc, #212]	; (8101410 <face_recognition_configure_activations+0x5ac>)
 810133a:	60d3      	str	r3, [r2, #12]
    conv2d_27_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 227840);
 810133c:	4b21      	ldr	r3, [pc, #132]	; (81013c4 <face_recognition_configure_activations+0x560>)
 810133e:	681b      	ldr	r3, [r3, #0]
 8101340:	f503 335e 	add.w	r3, r3, #227328	; 0x37800
 8101344:	f503 7300 	add.w	r3, r3, #512	; 0x200
 8101348:	4a32      	ldr	r2, [pc, #200]	; (8101414 <face_recognition_configure_activations+0x5b0>)
 810134a:	6093      	str	r3, [r2, #8]
    conv2d_27_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 227840);
 810134c:	4b1d      	ldr	r3, [pc, #116]	; (81013c4 <face_recognition_configure_activations+0x560>)
 810134e:	681b      	ldr	r3, [r3, #0]
 8101350:	f503 335e 	add.w	r3, r3, #227328	; 0x37800
 8101354:	f503 7300 	add.w	r3, r3, #512	; 0x200
 8101358:	4a2e      	ldr	r2, [pc, #184]	; (8101414 <face_recognition_configure_activations+0x5b0>)
 810135a:	60d3      	str	r3, [r2, #12]
    conv2d_28_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 810135c:	4b19      	ldr	r3, [pc, #100]	; (81013c4 <face_recognition_configure_activations+0x560>)
 810135e:	681b      	ldr	r3, [r3, #0]
 8101360:	4a2d      	ldr	r2, [pc, #180]	; (8101418 <face_recognition_configure_activations+0x5b4>)
 8101362:	6093      	str	r3, [r2, #8]
    conv2d_28_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101364:	4b17      	ldr	r3, [pc, #92]	; (81013c4 <face_recognition_configure_activations+0x560>)
 8101366:	681b      	ldr	r3, [r3, #0]
 8101368:	4a2b      	ldr	r2, [pc, #172]	; (8101418 <face_recognition_configure_activations+0x5b4>)
 810136a:	60d3      	str	r3, [r2, #12]
    conv2d_28_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 1536);
 810136c:	4b15      	ldr	r3, [pc, #84]	; (81013c4 <face_recognition_configure_activations+0x560>)
 810136e:	681b      	ldr	r3, [r3, #0]
 8101370:	f503 63c0 	add.w	r3, r3, #1536	; 0x600
 8101374:	4a29      	ldr	r2, [pc, #164]	; (810141c <face_recognition_configure_activations+0x5b8>)
 8101376:	6093      	str	r3, [r2, #8]
    conv2d_28_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 1536);
 8101378:	4b12      	ldr	r3, [pc, #72]	; (81013c4 <face_recognition_configure_activations+0x560>)
 810137a:	681b      	ldr	r3, [r3, #0]
 810137c:	f503 63c0 	add.w	r3, r3, #1536	; 0x600
 8101380:	4a26      	ldr	r2, [pc, #152]	; (810141c <face_recognition_configure_activations+0x5b8>)
 8101382:	60d3      	str	r3, [r2, #12]
    conv2d_29_pad_before_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 10752);
 8101384:	4b0f      	ldr	r3, [pc, #60]	; (81013c4 <face_recognition_configure_activations+0x560>)
 8101386:	681b      	ldr	r3, [r3, #0]
 8101388:	f503 5328 	add.w	r3, r3, #10752	; 0x2a00
 810138c:	4a24      	ldr	r2, [pc, #144]	; (8101420 <face_recognition_configure_activations+0x5bc>)
 810138e:	6093      	str	r3, [r2, #8]
    conv2d_29_pad_before_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 10752);
 8101390:	4b0c      	ldr	r3, [pc, #48]	; (81013c4 <face_recognition_configure_activations+0x560>)
 8101392:	681b      	ldr	r3, [r3, #0]
 8101394:	f503 5328 	add.w	r3, r3, #10752	; 0x2a00
 8101398:	4a21      	ldr	r2, [pc, #132]	; (8101420 <face_recognition_configure_activations+0x5bc>)
 810139a:	60d3      	str	r3, [r2, #12]
    conv2d_29_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 222508);
 810139c:	4b09      	ldr	r3, [pc, #36]	; (81013c4 <face_recognition_configure_activations+0x560>)
 810139e:	681b      	ldr	r3, [r3, #0]
 81013a0:	f503 3359 	add.w	r3, r3, #222208	; 0x36400
 81013a4:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 81013a8:	4a1e      	ldr	r2, [pc, #120]	; (8101424 <face_recognition_configure_activations+0x5c0>)
 81013aa:	6093      	str	r3, [r2, #8]
    conv2d_29_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 222508);
 81013ac:	4b05      	ldr	r3, [pc, #20]	; (81013c4 <face_recognition_configure_activations+0x560>)
 81013ae:	681b      	ldr	r3, [r3, #0]
 81013b0:	f503 3359 	add.w	r3, r3, #222208	; 0x36400
 81013b4:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 81013b8:	4a1a      	ldr	r2, [pc, #104]	; (8101424 <face_recognition_configure_activations+0x5c0>)
 81013ba:	60d3      	str	r3, [r2, #12]
 81013bc:	e034      	b.n	8101428 <face_recognition_configure_activations+0x5c4>
 81013be:	bf00      	nop
 81013c0:	10000110 	.word	0x10000110
 81013c4:	1003f910 	.word	0x1003f910
 81013c8:	10000ca0 	.word	0x10000ca0
 81013cc:	10000120 	.word	0x10000120
 81013d0:	10000130 	.word	0x10000130
 81013d4:	10000140 	.word	0x10000140
 81013d8:	10000cc0 	.word	0x10000cc0
 81013dc:	10000150 	.word	0x10000150
 81013e0:	10000160 	.word	0x10000160
 81013e4:	10000170 	.word	0x10000170
 81013e8:	10000180 	.word	0x10000180
 81013ec:	10000190 	.word	0x10000190
 81013f0:	10000cf0 	.word	0x10000cf0
 81013f4:	100001a0 	.word	0x100001a0
 81013f8:	100001b0 	.word	0x100001b0
 81013fc:	100001c0 	.word	0x100001c0
 8101400:	100001d0 	.word	0x100001d0
 8101404:	100001e0 	.word	0x100001e0
 8101408:	10000d20 	.word	0x10000d20
 810140c:	100001f0 	.word	0x100001f0
 8101410:	10000d30 	.word	0x10000d30
 8101414:	10000200 	.word	0x10000200
 8101418:	10000d40 	.word	0x10000d40
 810141c:	10000210 	.word	0x10000210
 8101420:	10000220 	.word	0x10000220
 8101424:	10000d50 	.word	0x10000d50
    conv2d_29_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 9600);
 8101428:	4b9b      	ldr	r3, [pc, #620]	; (8101698 <face_recognition_configure_activations+0x834>)
 810142a:	681b      	ldr	r3, [r3, #0]
 810142c:	f503 5316 	add.w	r3, r3, #9600	; 0x2580
 8101430:	4a9a      	ldr	r2, [pc, #616]	; (810169c <face_recognition_configure_activations+0x838>)
 8101432:	6093      	str	r3, [r2, #8]
    conv2d_29_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 9600);
 8101434:	4b98      	ldr	r3, [pc, #608]	; (8101698 <face_recognition_configure_activations+0x834>)
 8101436:	681b      	ldr	r3, [r3, #0]
 8101438:	f503 5316 	add.w	r3, r3, #9600	; 0x2580
 810143c:	4a97      	ldr	r2, [pc, #604]	; (810169c <face_recognition_configure_activations+0x838>)
 810143e:	60d3      	str	r3, [r2, #12]
    conv2d_30_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 9408);
 8101440:	4b95      	ldr	r3, [pc, #596]	; (8101698 <face_recognition_configure_activations+0x834>)
 8101442:	681b      	ldr	r3, [r3, #0]
 8101444:	f503 5313 	add.w	r3, r3, #9408	; 0x24c0
 8101448:	4a95      	ldr	r2, [pc, #596]	; (81016a0 <face_recognition_configure_activations+0x83c>)
 810144a:	6093      	str	r3, [r2, #8]
    conv2d_30_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 9408);
 810144c:	4b92      	ldr	r3, [pc, #584]	; (8101698 <face_recognition_configure_activations+0x834>)
 810144e:	681b      	ldr	r3, [r3, #0]
 8101450:	f503 5313 	add.w	r3, r3, #9408	; 0x24c0
 8101454:	4a92      	ldr	r2, [pc, #584]	; (81016a0 <face_recognition_configure_activations+0x83c>)
 8101456:	60d3      	str	r3, [r2, #12]
    eltwise_31_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 9408);
 8101458:	4b8f      	ldr	r3, [pc, #572]	; (8101698 <face_recognition_configure_activations+0x834>)
 810145a:	681b      	ldr	r3, [r3, #0]
 810145c:	f503 5313 	add.w	r3, r3, #9408	; 0x24c0
 8101460:	4a90      	ldr	r2, [pc, #576]	; (81016a4 <face_recognition_configure_activations+0x840>)
 8101462:	6093      	str	r3, [r2, #8]
    eltwise_31_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 9408);
 8101464:	4b8c      	ldr	r3, [pc, #560]	; (8101698 <face_recognition_configure_activations+0x834>)
 8101466:	681b      	ldr	r3, [r3, #0]
 8101468:	f503 5313 	add.w	r3, r3, #9408	; 0x24c0
 810146c:	4a8d      	ldr	r2, [pc, #564]	; (81016a4 <face_recognition_configure_activations+0x840>)
 810146e:	60d3      	str	r3, [r2, #12]
    conv2d_32_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101470:	4b89      	ldr	r3, [pc, #548]	; (8101698 <face_recognition_configure_activations+0x834>)
 8101472:	681b      	ldr	r3, [r3, #0]
 8101474:	4a8c      	ldr	r2, [pc, #560]	; (81016a8 <face_recognition_configure_activations+0x844>)
 8101476:	6093      	str	r3, [r2, #8]
    conv2d_32_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101478:	4b87      	ldr	r3, [pc, #540]	; (8101698 <face_recognition_configure_activations+0x834>)
 810147a:	681b      	ldr	r3, [r3, #0]
 810147c:	4a8a      	ldr	r2, [pc, #552]	; (81016a8 <face_recognition_configure_activations+0x844>)
 810147e:	60d3      	str	r3, [r2, #12]
    conv2d_32_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 10944);
 8101480:	4b85      	ldr	r3, [pc, #532]	; (8101698 <face_recognition_configure_activations+0x834>)
 8101482:	681b      	ldr	r3, [r3, #0]
 8101484:	f503 532b 	add.w	r3, r3, #10944	; 0x2ac0
 8101488:	4a88      	ldr	r2, [pc, #544]	; (81016ac <face_recognition_configure_activations+0x848>)
 810148a:	6093      	str	r3, [r2, #8]
    conv2d_32_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 10944);
 810148c:	4b82      	ldr	r3, [pc, #520]	; (8101698 <face_recognition_configure_activations+0x834>)
 810148e:	681b      	ldr	r3, [r3, #0]
 8101490:	f503 532b 	add.w	r3, r3, #10944	; 0x2ac0
 8101494:	4a85      	ldr	r2, [pc, #532]	; (81016ac <face_recognition_configure_activations+0x848>)
 8101496:	60d3      	str	r3, [r2, #12]
    conv2d_33_pad_before_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 20160);
 8101498:	4b7f      	ldr	r3, [pc, #508]	; (8101698 <face_recognition_configure_activations+0x834>)
 810149a:	681b      	ldr	r3, [r3, #0]
 810149c:	f503 439d 	add.w	r3, r3, #20096	; 0x4e80
 81014a0:	3340      	adds	r3, #64	; 0x40
 81014a2:	4a83      	ldr	r2, [pc, #524]	; (81016b0 <face_recognition_configure_activations+0x84c>)
 81014a4:	6093      	str	r3, [r2, #8]
    conv2d_33_pad_before_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 20160);
 81014a6:	4b7c      	ldr	r3, [pc, #496]	; (8101698 <face_recognition_configure_activations+0x834>)
 81014a8:	681b      	ldr	r3, [r3, #0]
 81014aa:	f503 439d 	add.w	r3, r3, #20096	; 0x4e80
 81014ae:	3340      	adds	r3, #64	; 0x40
 81014b0:	4a7f      	ldr	r2, [pc, #508]	; (81016b0 <face_recognition_configure_activations+0x84c>)
 81014b2:	60d3      	str	r3, [r2, #12]
    conv2d_33_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 4076);
 81014b4:	4b78      	ldr	r3, [pc, #480]	; (8101698 <face_recognition_configure_activations+0x834>)
 81014b6:	681b      	ldr	r3, [r3, #0]
 81014b8:	f603 73ec 	addw	r3, r3, #4076	; 0xfec
 81014bc:	4a7d      	ldr	r2, [pc, #500]	; (81016b4 <face_recognition_configure_activations+0x850>)
 81014be:	6093      	str	r3, [r2, #8]
    conv2d_33_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 4076);
 81014c0:	4b75      	ldr	r3, [pc, #468]	; (8101698 <face_recognition_configure_activations+0x834>)
 81014c2:	681b      	ldr	r3, [r3, #0]
 81014c4:	f603 73ec 	addw	r3, r3, #4076	; 0xfec
 81014c8:	4a7a      	ldr	r2, [pc, #488]	; (81016b4 <face_recognition_configure_activations+0x850>)
 81014ca:	60d3      	str	r3, [r2, #12]
    conv2d_33_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 19008);
 81014cc:	4b72      	ldr	r3, [pc, #456]	; (8101698 <face_recognition_configure_activations+0x834>)
 81014ce:	681b      	ldr	r3, [r3, #0]
 81014d0:	f503 4394 	add.w	r3, r3, #18944	; 0x4a00
 81014d4:	3340      	adds	r3, #64	; 0x40
 81014d6:	4a78      	ldr	r2, [pc, #480]	; (81016b8 <face_recognition_configure_activations+0x854>)
 81014d8:	6093      	str	r3, [r2, #8]
    conv2d_33_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 19008);
 81014da:	4b6f      	ldr	r3, [pc, #444]	; (8101698 <face_recognition_configure_activations+0x834>)
 81014dc:	681b      	ldr	r3, [r3, #0]
 81014de:	f503 4394 	add.w	r3, r3, #18944	; 0x4a00
 81014e2:	3340      	adds	r3, #64	; 0x40
 81014e4:	4a74      	ldr	r2, [pc, #464]	; (81016b8 <face_recognition_configure_activations+0x854>)
 81014e6:	60d3      	str	r3, [r2, #12]
    conv2d_34_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 18816);
 81014e8:	4b6b      	ldr	r3, [pc, #428]	; (8101698 <face_recognition_configure_activations+0x834>)
 81014ea:	681b      	ldr	r3, [r3, #0]
 81014ec:	f503 4393 	add.w	r3, r3, #18816	; 0x4980
 81014f0:	4a72      	ldr	r2, [pc, #456]	; (81016bc <face_recognition_configure_activations+0x858>)
 81014f2:	6093      	str	r3, [r2, #8]
    conv2d_34_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 18816);
 81014f4:	4b68      	ldr	r3, [pc, #416]	; (8101698 <face_recognition_configure_activations+0x834>)
 81014f6:	681b      	ldr	r3, [r3, #0]
 81014f8:	f503 4393 	add.w	r3, r3, #18816	; 0x4980
 81014fc:	4a6f      	ldr	r2, [pc, #444]	; (81016bc <face_recognition_configure_activations+0x858>)
 81014fe:	60d3      	str	r3, [r2, #12]
    eltwise_35_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 18816);
 8101500:	4b65      	ldr	r3, [pc, #404]	; (8101698 <face_recognition_configure_activations+0x834>)
 8101502:	681b      	ldr	r3, [r3, #0]
 8101504:	f503 4393 	add.w	r3, r3, #18816	; 0x4980
 8101508:	4a6d      	ldr	r2, [pc, #436]	; (81016c0 <face_recognition_configure_activations+0x85c>)
 810150a:	6093      	str	r3, [r2, #8]
    eltwise_35_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 18816);
 810150c:	4b62      	ldr	r3, [pc, #392]	; (8101698 <face_recognition_configure_activations+0x834>)
 810150e:	681b      	ldr	r3, [r3, #0]
 8101510:	f503 4393 	add.w	r3, r3, #18816	; 0x4980
 8101514:	4a6a      	ldr	r2, [pc, #424]	; (81016c0 <face_recognition_configure_activations+0x85c>)
 8101516:	60d3      	str	r3, [r2, #12]
    conv2d_36_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101518:	4b5f      	ldr	r3, [pc, #380]	; (8101698 <face_recognition_configure_activations+0x834>)
 810151a:	681b      	ldr	r3, [r3, #0]
 810151c:	4a69      	ldr	r2, [pc, #420]	; (81016c4 <face_recognition_configure_activations+0x860>)
 810151e:	6093      	str	r3, [r2, #8]
    conv2d_36_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101520:	4b5d      	ldr	r3, [pc, #372]	; (8101698 <face_recognition_configure_activations+0x834>)
 8101522:	681b      	ldr	r3, [r3, #0]
 8101524:	4a67      	ldr	r2, [pc, #412]	; (81016c4 <face_recognition_configure_activations+0x860>)
 8101526:	60d3      	str	r3, [r2, #12]
    conv2d_36_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 220160);
 8101528:	4b5b      	ldr	r3, [pc, #364]	; (8101698 <face_recognition_configure_activations+0x834>)
 810152a:	681b      	ldr	r3, [r3, #0]
 810152c:	f503 3357 	add.w	r3, r3, #220160	; 0x35c00
 8101530:	4a65      	ldr	r2, [pc, #404]	; (81016c8 <face_recognition_configure_activations+0x864>)
 8101532:	6093      	str	r3, [r2, #8]
    conv2d_36_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 220160);
 8101534:	4b58      	ldr	r3, [pc, #352]	; (8101698 <face_recognition_configure_activations+0x834>)
 8101536:	681b      	ldr	r3, [r3, #0]
 8101538:	f503 3357 	add.w	r3, r3, #220160	; 0x35c00
 810153c:	4a62      	ldr	r2, [pc, #392]	; (81016c8 <face_recognition_configure_activations+0x864>)
 810153e:	60d3      	str	r3, [r2, #12]
    conv2d_37_pad_before_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101540:	4b55      	ldr	r3, [pc, #340]	; (8101698 <face_recognition_configure_activations+0x834>)
 8101542:	681b      	ldr	r3, [r3, #0]
 8101544:	4a61      	ldr	r2, [pc, #388]	; (81016cc <face_recognition_configure_activations+0x868>)
 8101546:	6093      	str	r3, [r2, #8]
    conv2d_37_pad_before_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101548:	4b53      	ldr	r3, [pc, #332]	; (8101698 <face_recognition_configure_activations+0x834>)
 810154a:	681b      	ldr	r3, [r3, #0]
 810154c:	4a5f      	ldr	r2, [pc, #380]	; (81016cc <face_recognition_configure_activations+0x868>)
 810154e:	60d3      	str	r3, [r2, #12]
    conv2d_37_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 224044);
 8101550:	4b51      	ldr	r3, [pc, #324]	; (8101698 <face_recognition_configure_activations+0x834>)
 8101552:	681b      	ldr	r3, [r3, #0]
 8101554:	f503 335a 	add.w	r3, r3, #223232	; 0x36800
 8101558:	f503 734b 	add.w	r3, r3, #812	; 0x32c
 810155c:	4a5c      	ldr	r2, [pc, #368]	; (81016d0 <face_recognition_configure_activations+0x86c>)
 810155e:	6093      	str	r3, [r2, #8]
    conv2d_37_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 224044);
 8101560:	4b4d      	ldr	r3, [pc, #308]	; (8101698 <face_recognition_configure_activations+0x834>)
 8101562:	681b      	ldr	r3, [r3, #0]
 8101564:	f503 335a 	add.w	r3, r3, #223232	; 0x36800
 8101568:	f503 734b 	add.w	r3, r3, #812	; 0x32c
 810156c:	4a58      	ldr	r2, [pc, #352]	; (81016d0 <face_recognition_configure_activations+0x86c>)
 810156e:	60d3      	str	r3, [r2, #12]
    conv2d_37_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 214828);
 8101570:	4b49      	ldr	r3, [pc, #292]	; (8101698 <face_recognition_configure_activations+0x834>)
 8101572:	681b      	ldr	r3, [r3, #0]
 8101574:	f503 3351 	add.w	r3, r3, #214016	; 0x34400
 8101578:	f503 734b 	add.w	r3, r3, #812	; 0x32c
 810157c:	4a55      	ldr	r2, [pc, #340]	; (81016d4 <face_recognition_configure_activations+0x870>)
 810157e:	6093      	str	r3, [r2, #8]
    conv2d_37_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 214828);
 8101580:	4b45      	ldr	r3, [pc, #276]	; (8101698 <face_recognition_configure_activations+0x834>)
 8101582:	681b      	ldr	r3, [r3, #0]
 8101584:	f503 3351 	add.w	r3, r3, #214016	; 0x34400
 8101588:	f503 734b 	add.w	r3, r3, #812	; 0x32c
 810158c:	4a51      	ldr	r2, [pc, #324]	; (81016d4 <face_recognition_configure_activations+0x870>)
 810158e:	60d3      	str	r3, [r2, #12]
    conv2d_38_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 214636);
 8101590:	4b41      	ldr	r3, [pc, #260]	; (8101698 <face_recognition_configure_activations+0x834>)
 8101592:	681b      	ldr	r3, [r3, #0]
 8101594:	f503 3351 	add.w	r3, r3, #214016	; 0x34400
 8101598:	f503 731b 	add.w	r3, r3, #620	; 0x26c
 810159c:	4a4e      	ldr	r2, [pc, #312]	; (81016d8 <face_recognition_configure_activations+0x874>)
 810159e:	6093      	str	r3, [r2, #8]
    conv2d_38_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 214636);
 81015a0:	4b3d      	ldr	r3, [pc, #244]	; (8101698 <face_recognition_configure_activations+0x834>)
 81015a2:	681b      	ldr	r3, [r3, #0]
 81015a4:	f503 3351 	add.w	r3, r3, #214016	; 0x34400
 81015a8:	f503 731b 	add.w	r3, r3, #620	; 0x26c
 81015ac:	4a4a      	ldr	r2, [pc, #296]	; (81016d8 <face_recognition_configure_activations+0x874>)
 81015ae:	60d3      	str	r3, [r2, #12]
    eltwise_39_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 214636);
 81015b0:	4b39      	ldr	r3, [pc, #228]	; (8101698 <face_recognition_configure_activations+0x834>)
 81015b2:	681b      	ldr	r3, [r3, #0]
 81015b4:	f503 3351 	add.w	r3, r3, #214016	; 0x34400
 81015b8:	f503 731b 	add.w	r3, r3, #620	; 0x26c
 81015bc:	4a47      	ldr	r2, [pc, #284]	; (81016dc <face_recognition_configure_activations+0x878>)
 81015be:	6093      	str	r3, [r2, #8]
    eltwise_39_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 214636);
 81015c0:	4b35      	ldr	r3, [pc, #212]	; (8101698 <face_recognition_configure_activations+0x834>)
 81015c2:	681b      	ldr	r3, [r3, #0]
 81015c4:	f503 3351 	add.w	r3, r3, #214016	; 0x34400
 81015c8:	f503 731b 	add.w	r3, r3, #620	; 0x26c
 81015cc:	4a43      	ldr	r2, [pc, #268]	; (81016dc <face_recognition_configure_activations+0x878>)
 81015ce:	60d3      	str	r3, [r2, #12]
    conv2d_40_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 81015d0:	4b31      	ldr	r3, [pc, #196]	; (8101698 <face_recognition_configure_activations+0x834>)
 81015d2:	681b      	ldr	r3, [r3, #0]
 81015d4:	4a42      	ldr	r2, [pc, #264]	; (81016e0 <face_recognition_configure_activations+0x87c>)
 81015d6:	6093      	str	r3, [r2, #8]
    conv2d_40_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 81015d8:	4b2f      	ldr	r3, [pc, #188]	; (8101698 <face_recognition_configure_activations+0x834>)
 81015da:	681b      	ldr	r3, [r3, #0]
 81015dc:	4a40      	ldr	r2, [pc, #256]	; (81016e0 <face_recognition_configure_activations+0x87c>)
 81015de:	60d3      	str	r3, [r2, #12]
    conv2d_40_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 220160);
 81015e0:	4b2d      	ldr	r3, [pc, #180]	; (8101698 <face_recognition_configure_activations+0x834>)
 81015e2:	681b      	ldr	r3, [r3, #0]
 81015e4:	f503 3357 	add.w	r3, r3, #220160	; 0x35c00
 81015e8:	4a3e      	ldr	r2, [pc, #248]	; (81016e4 <face_recognition_configure_activations+0x880>)
 81015ea:	6093      	str	r3, [r2, #8]
    conv2d_40_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 220160);
 81015ec:	4b2a      	ldr	r3, [pc, #168]	; (8101698 <face_recognition_configure_activations+0x834>)
 81015ee:	681b      	ldr	r3, [r3, #0]
 81015f0:	f503 3357 	add.w	r3, r3, #220160	; 0x35c00
 81015f4:	4a3b      	ldr	r2, [pc, #236]	; (81016e4 <face_recognition_configure_activations+0x880>)
 81015f6:	60d3      	str	r3, [r2, #12]
    conv2d_41_pad_before_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 81015f8:	4b27      	ldr	r3, [pc, #156]	; (8101698 <face_recognition_configure_activations+0x834>)
 81015fa:	681b      	ldr	r3, [r3, #0]
 81015fc:	4a3a      	ldr	r2, [pc, #232]	; (81016e8 <face_recognition_configure_activations+0x884>)
 81015fe:	6093      	str	r3, [r2, #8]
    conv2d_41_pad_before_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101600:	4b25      	ldr	r3, [pc, #148]	; (8101698 <face_recognition_configure_activations+0x834>)
 8101602:	681b      	ldr	r3, [r3, #0]
 8101604:	4a38      	ldr	r2, [pc, #224]	; (81016e8 <face_recognition_configure_activations+0x884>)
 8101606:	60d3      	str	r3, [r2, #12]
    conv2d_41_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 224044);
 8101608:	4b23      	ldr	r3, [pc, #140]	; (8101698 <face_recognition_configure_activations+0x834>)
 810160a:	681b      	ldr	r3, [r3, #0]
 810160c:	f503 335a 	add.w	r3, r3, #223232	; 0x36800
 8101610:	f503 734b 	add.w	r3, r3, #812	; 0x32c
 8101614:	4a35      	ldr	r2, [pc, #212]	; (81016ec <face_recognition_configure_activations+0x888>)
 8101616:	6093      	str	r3, [r2, #8]
    conv2d_41_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 224044);
 8101618:	4b1f      	ldr	r3, [pc, #124]	; (8101698 <face_recognition_configure_activations+0x834>)
 810161a:	681b      	ldr	r3, [r3, #0]
 810161c:	f503 335a 	add.w	r3, r3, #223232	; 0x36800
 8101620:	f503 734b 	add.w	r3, r3, #812	; 0x32c
 8101624:	4a31      	ldr	r2, [pc, #196]	; (81016ec <face_recognition_configure_activations+0x888>)
 8101626:	60d3      	str	r3, [r2, #12]
    conv2d_41_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 214828);
 8101628:	4b1b      	ldr	r3, [pc, #108]	; (8101698 <face_recognition_configure_activations+0x834>)
 810162a:	681b      	ldr	r3, [r3, #0]
 810162c:	f503 3351 	add.w	r3, r3, #214016	; 0x34400
 8101630:	f503 734b 	add.w	r3, r3, #812	; 0x32c
 8101634:	4a2e      	ldr	r2, [pc, #184]	; (81016f0 <face_recognition_configure_activations+0x88c>)
 8101636:	6093      	str	r3, [r2, #8]
    conv2d_41_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 214828);
 8101638:	4b17      	ldr	r3, [pc, #92]	; (8101698 <face_recognition_configure_activations+0x834>)
 810163a:	681b      	ldr	r3, [r3, #0]
 810163c:	f503 3351 	add.w	r3, r3, #214016	; 0x34400
 8101640:	f503 734b 	add.w	r3, r3, #812	; 0x32c
 8101644:	4a2a      	ldr	r2, [pc, #168]	; (81016f0 <face_recognition_configure_activations+0x88c>)
 8101646:	60d3      	str	r3, [r2, #12]
    conv2d_42_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 214572);
 8101648:	4b13      	ldr	r3, [pc, #76]	; (8101698 <face_recognition_configure_activations+0x834>)
 810164a:	681b      	ldr	r3, [r3, #0]
 810164c:	f503 3351 	add.w	r3, r3, #214016	; 0x34400
 8101650:	f503 730b 	add.w	r3, r3, #556	; 0x22c
 8101654:	4a27      	ldr	r2, [pc, #156]	; (81016f4 <face_recognition_configure_activations+0x890>)
 8101656:	6093      	str	r3, [r2, #8]
    conv2d_42_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 214572);
 8101658:	4b0f      	ldr	r3, [pc, #60]	; (8101698 <face_recognition_configure_activations+0x834>)
 810165a:	681b      	ldr	r3, [r3, #0]
 810165c:	f503 3351 	add.w	r3, r3, #214016	; 0x34400
 8101660:	f503 730b 	add.w	r3, r3, #556	; 0x22c
 8101664:	4a23      	ldr	r2, [pc, #140]	; (81016f4 <face_recognition_configure_activations+0x890>)
 8101666:	60d3      	str	r3, [r2, #12]
    conv2d_43_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101668:	4b0b      	ldr	r3, [pc, #44]	; (8101698 <face_recognition_configure_activations+0x834>)
 810166a:	681b      	ldr	r3, [r3, #0]
 810166c:	4a22      	ldr	r2, [pc, #136]	; (81016f8 <face_recognition_configure_activations+0x894>)
 810166e:	6093      	str	r3, [r2, #8]
    conv2d_43_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101670:	4b09      	ldr	r3, [pc, #36]	; (8101698 <face_recognition_configure_activations+0x834>)
 8101672:	681b      	ldr	r3, [r3, #0]
 8101674:	4a20      	ldr	r2, [pc, #128]	; (81016f8 <face_recognition_configure_activations+0x894>)
 8101676:	60d3      	str	r3, [r2, #12]
    conv2d_43_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 202284);
 8101678:	4b07      	ldr	r3, [pc, #28]	; (8101698 <face_recognition_configure_activations+0x834>)
 810167a:	681b      	ldr	r3, [r3, #0]
 810167c:	f503 3345 	add.w	r3, r3, #201728	; 0x31400
 8101680:	f503 730b 	add.w	r3, r3, #556	; 0x22c
 8101684:	4a1d      	ldr	r2, [pc, #116]	; (81016fc <face_recognition_configure_activations+0x898>)
 8101686:	6093      	str	r3, [r2, #8]
    conv2d_43_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 202284);
 8101688:	4b03      	ldr	r3, [pc, #12]	; (8101698 <face_recognition_configure_activations+0x834>)
 810168a:	681b      	ldr	r3, [r3, #0]
 810168c:	f503 3345 	add.w	r3, r3, #201728	; 0x31400
 8101690:	f503 730b 	add.w	r3, r3, #556	; 0x22c
 8101694:	e034      	b.n	8101700 <face_recognition_configure_activations+0x89c>
 8101696:	bf00      	nop
 8101698:	1003f910 	.word	0x1003f910
 810169c:	10000230 	.word	0x10000230
 81016a0:	10000240 	.word	0x10000240
 81016a4:	10000250 	.word	0x10000250
 81016a8:	10000d70 	.word	0x10000d70
 81016ac:	10000260 	.word	0x10000260
 81016b0:	10000270 	.word	0x10000270
 81016b4:	10000d80 	.word	0x10000d80
 81016b8:	10000280 	.word	0x10000280
 81016bc:	10000290 	.word	0x10000290
 81016c0:	100002a0 	.word	0x100002a0
 81016c4:	10000da0 	.word	0x10000da0
 81016c8:	100002b0 	.word	0x100002b0
 81016cc:	100002c0 	.word	0x100002c0
 81016d0:	10000db0 	.word	0x10000db0
 81016d4:	100002d0 	.word	0x100002d0
 81016d8:	100002e0 	.word	0x100002e0
 81016dc:	100002f0 	.word	0x100002f0
 81016e0:	10000dd0 	.word	0x10000dd0
 81016e4:	10000300 	.word	0x10000300
 81016e8:	10000310 	.word	0x10000310
 81016ec:	10000de0 	.word	0x10000de0
 81016f0:	10000320 	.word	0x10000320
 81016f4:	10000330 	.word	0x10000330
 81016f8:	10000e00 	.word	0x10000e00
 81016fc:	10000340 	.word	0x10000340
 8101700:	4a9f      	ldr	r2, [pc, #636]	; (8101980 <face_recognition_configure_activations+0xb1c>)
 8101702:	60d3      	str	r3, [r2, #12]
    conv2d_44_pad_before_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 195372);
 8101704:	4b9f      	ldr	r3, [pc, #636]	; (8101984 <face_recognition_configure_activations+0xb20>)
 8101706:	681b      	ldr	r3, [r3, #0]
 8101708:	f503 333e 	add.w	r3, r3, #194560	; 0x2f800
 810170c:	f503 734b 	add.w	r3, r3, #812	; 0x32c
 8101710:	4a9d      	ldr	r2, [pc, #628]	; (8101988 <face_recognition_configure_activations+0xb24>)
 8101712:	6093      	str	r3, [r2, #8]
    conv2d_44_pad_before_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 195372);
 8101714:	4b9b      	ldr	r3, [pc, #620]	; (8101984 <face_recognition_configure_activations+0xb20>)
 8101716:	681b      	ldr	r3, [r3, #0]
 8101718:	f503 333e 	add.w	r3, r3, #194560	; 0x2f800
 810171c:	f503 734b 	add.w	r3, r3, #812	; 0x32c
 8101720:	4a99      	ldr	r2, [pc, #612]	; (8101988 <face_recognition_configure_activations+0xb24>)
 8101722:	60d3      	str	r3, [r2, #12]
    conv2d_44_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 216620);
 8101724:	4b97      	ldr	r3, [pc, #604]	; (8101984 <face_recognition_configure_activations+0xb20>)
 8101726:	681b      	ldr	r3, [r3, #0]
 8101728:	f503 3353 	add.w	r3, r3, #216064	; 0x34c00
 810172c:	f503 730b 	add.w	r3, r3, #556	; 0x22c
 8101730:	4a96      	ldr	r2, [pc, #600]	; (810198c <face_recognition_configure_activations+0xb28>)
 8101732:	6093      	str	r3, [r2, #8]
    conv2d_44_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 216620);
 8101734:	4b93      	ldr	r3, [pc, #588]	; (8101984 <face_recognition_configure_activations+0xb20>)
 8101736:	681b      	ldr	r3, [r3, #0]
 8101738:	f503 3353 	add.w	r3, r3, #216064	; 0x34c00
 810173c:	f503 730b 	add.w	r3, r3, #556	; 0x22c
 8101740:	4a92      	ldr	r2, [pc, #584]	; (810198c <face_recognition_configure_activations+0xb28>)
 8101742:	60d3      	str	r3, [r2, #12]
    conv2d_44_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 193836);
 8101744:	4b8f      	ldr	r3, [pc, #572]	; (8101984 <face_recognition_configure_activations+0xb20>)
 8101746:	681b      	ldr	r3, [r3, #0]
 8101748:	f503 333d 	add.w	r3, r3, #193536	; 0x2f400
 810174c:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 8101750:	4a8f      	ldr	r2, [pc, #572]	; (8101990 <face_recognition_configure_activations+0xb2c>)
 8101752:	6093      	str	r3, [r2, #8]
    conv2d_44_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 193836);
 8101754:	4b8b      	ldr	r3, [pc, #556]	; (8101984 <face_recognition_configure_activations+0xb20>)
 8101756:	681b      	ldr	r3, [r3, #0]
 8101758:	f503 333d 	add.w	r3, r3, #193536	; 0x2f400
 810175c:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 8101760:	4a8b      	ldr	r2, [pc, #556]	; (8101990 <face_recognition_configure_activations+0xb2c>)
 8101762:	60d3      	str	r3, [r2, #12]
    conv2d_45_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 193580);
 8101764:	4b87      	ldr	r3, [pc, #540]	; (8101984 <face_recognition_configure_activations+0xb20>)
 8101766:	681b      	ldr	r3, [r3, #0]
 8101768:	f503 333d 	add.w	r3, r3, #193536	; 0x2f400
 810176c:	332c      	adds	r3, #44	; 0x2c
 810176e:	4a89      	ldr	r2, [pc, #548]	; (8101994 <face_recognition_configure_activations+0xb30>)
 8101770:	6093      	str	r3, [r2, #8]
    conv2d_45_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 193580);
 8101772:	4b84      	ldr	r3, [pc, #528]	; (8101984 <face_recognition_configure_activations+0xb20>)
 8101774:	681b      	ldr	r3, [r3, #0]
 8101776:	f503 333d 	add.w	r3, r3, #193536	; 0x2f400
 810177a:	332c      	adds	r3, #44	; 0x2c
 810177c:	4a85      	ldr	r2, [pc, #532]	; (8101994 <face_recognition_configure_activations+0xb30>)
 810177e:	60d3      	str	r3, [r2, #12]
    eltwise_46_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 193580);
 8101780:	4b80      	ldr	r3, [pc, #512]	; (8101984 <face_recognition_configure_activations+0xb20>)
 8101782:	681b      	ldr	r3, [r3, #0]
 8101784:	f503 333d 	add.w	r3, r3, #193536	; 0x2f400
 8101788:	332c      	adds	r3, #44	; 0x2c
 810178a:	4a83      	ldr	r2, [pc, #524]	; (8101998 <face_recognition_configure_activations+0xb34>)
 810178c:	6093      	str	r3, [r2, #8]
    eltwise_46_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 193580);
 810178e:	4b7d      	ldr	r3, [pc, #500]	; (8101984 <face_recognition_configure_activations+0xb20>)
 8101790:	681b      	ldr	r3, [r3, #0]
 8101792:	f503 333d 	add.w	r3, r3, #193536	; 0x2f400
 8101796:	332c      	adds	r3, #44	; 0x2c
 8101798:	4a7f      	ldr	r2, [pc, #508]	; (8101998 <face_recognition_configure_activations+0xb34>)
 810179a:	60d3      	str	r3, [r2, #12]
    conv2d_47_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 810179c:	4b79      	ldr	r3, [pc, #484]	; (8101984 <face_recognition_configure_activations+0xb20>)
 810179e:	681b      	ldr	r3, [r3, #0]
 81017a0:	4a7e      	ldr	r2, [pc, #504]	; (810199c <face_recognition_configure_activations+0xb38>)
 81017a2:	6093      	str	r3, [r2, #8]
    conv2d_47_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 81017a4:	4b77      	ldr	r3, [pc, #476]	; (8101984 <face_recognition_configure_activations+0xb20>)
 81017a6:	681b      	ldr	r3, [r3, #0]
 81017a8:	4a7c      	ldr	r2, [pc, #496]	; (810199c <face_recognition_configure_activations+0xb38>)
 81017aa:	60d3      	str	r3, [r2, #12]
    conv2d_47_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 217088);
 81017ac:	4b75      	ldr	r3, [pc, #468]	; (8101984 <face_recognition_configure_activations+0xb20>)
 81017ae:	681b      	ldr	r3, [r3, #0]
 81017b0:	f503 3354 	add.w	r3, r3, #217088	; 0x35000
 81017b4:	4a7a      	ldr	r2, [pc, #488]	; (81019a0 <face_recognition_configure_activations+0xb3c>)
 81017b6:	6093      	str	r3, [r2, #8]
    conv2d_47_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 217088);
 81017b8:	4b72      	ldr	r3, [pc, #456]	; (8101984 <face_recognition_configure_activations+0xb20>)
 81017ba:	681b      	ldr	r3, [r3, #0]
 81017bc:	f503 3354 	add.w	r3, r3, #217088	; 0x35000
 81017c0:	4a77      	ldr	r2, [pc, #476]	; (81019a0 <face_recognition_configure_activations+0xb3c>)
 81017c2:	60d3      	str	r3, [r2, #12]
    conv2d_48_pad_before_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 81017c4:	4b6f      	ldr	r3, [pc, #444]	; (8101984 <face_recognition_configure_activations+0xb20>)
 81017c6:	681b      	ldr	r3, [r3, #0]
 81017c8:	4a76      	ldr	r2, [pc, #472]	; (81019a4 <face_recognition_configure_activations+0xb40>)
 81017ca:	6093      	str	r3, [r2, #8]
    conv2d_48_pad_before_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 81017cc:	4b6d      	ldr	r3, [pc, #436]	; (8101984 <face_recognition_configure_activations+0xb20>)
 81017ce:	681b      	ldr	r3, [r3, #0]
 81017d0:	4a74      	ldr	r2, [pc, #464]	; (81019a4 <face_recognition_configure_activations+0xb40>)
 81017d2:	60d3      	str	r3, [r2, #12]
    conv2d_48_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 186472);
 81017d4:	4b6b      	ldr	r3, [pc, #428]	; (8101984 <face_recognition_configure_activations+0xb20>)
 81017d6:	681b      	ldr	r3, [r3, #0]
 81017d8:	f503 3336 	add.w	r3, r3, #186368	; 0x2d800
 81017dc:	3368      	adds	r3, #104	; 0x68
 81017de:	4a72      	ldr	r2, [pc, #456]	; (81019a8 <face_recognition_configure_activations+0xb44>)
 81017e0:	6093      	str	r3, [r2, #8]
    conv2d_48_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 186472);
 81017e2:	4b68      	ldr	r3, [pc, #416]	; (8101984 <face_recognition_configure_activations+0xb20>)
 81017e4:	681b      	ldr	r3, [r3, #0]
 81017e6:	f503 3336 	add.w	r3, r3, #186368	; 0x2d800
 81017ea:	3368      	adds	r3, #104	; 0x68
 81017ec:	4a6e      	ldr	r2, [pc, #440]	; (81019a8 <face_recognition_configure_activations+0xb44>)
 81017ee:	60d3      	str	r3, [r2, #12]
    conv2d_48_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 217088);
 81017f0:	4b64      	ldr	r3, [pc, #400]	; (8101984 <face_recognition_configure_activations+0xb20>)
 81017f2:	681b      	ldr	r3, [r3, #0]
 81017f4:	f503 3354 	add.w	r3, r3, #217088	; 0x35000
 81017f8:	4a6c      	ldr	r2, [pc, #432]	; (81019ac <face_recognition_configure_activations+0xb48>)
 81017fa:	6093      	str	r3, [r2, #8]
    conv2d_48_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 217088);
 81017fc:	4b61      	ldr	r3, [pc, #388]	; (8101984 <face_recognition_configure_activations+0xb20>)
 81017fe:	681b      	ldr	r3, [r3, #0]
 8101800:	f503 3354 	add.w	r3, r3, #217088	; 0x35000
 8101804:	4a69      	ldr	r2, [pc, #420]	; (81019ac <face_recognition_configure_activations+0xb48>)
 8101806:	60d3      	str	r3, [r2, #12]
    conv2d_49_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 216832);
 8101808:	4b5e      	ldr	r3, [pc, #376]	; (8101984 <face_recognition_configure_activations+0xb20>)
 810180a:	681b      	ldr	r3, [r3, #0]
 810180c:	f503 3353 	add.w	r3, r3, #216064	; 0x34c00
 8101810:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8101814:	4a66      	ldr	r2, [pc, #408]	; (81019b0 <face_recognition_configure_activations+0xb4c>)
 8101816:	6093      	str	r3, [r2, #8]
    conv2d_49_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 216832);
 8101818:	4b5a      	ldr	r3, [pc, #360]	; (8101984 <face_recognition_configure_activations+0xb20>)
 810181a:	681b      	ldr	r3, [r3, #0]
 810181c:	f503 3353 	add.w	r3, r3, #216064	; 0x34c00
 8101820:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8101824:	4a62      	ldr	r2, [pc, #392]	; (81019b0 <face_recognition_configure_activations+0xb4c>)
 8101826:	60d3      	str	r3, [r2, #12]
    eltwise_50_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 216832);
 8101828:	4b56      	ldr	r3, [pc, #344]	; (8101984 <face_recognition_configure_activations+0xb20>)
 810182a:	681b      	ldr	r3, [r3, #0]
 810182c:	f503 3353 	add.w	r3, r3, #216064	; 0x34c00
 8101830:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8101834:	4a5f      	ldr	r2, [pc, #380]	; (81019b4 <face_recognition_configure_activations+0xb50>)
 8101836:	6093      	str	r3, [r2, #8]
    eltwise_50_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 216832);
 8101838:	4b52      	ldr	r3, [pc, #328]	; (8101984 <face_recognition_configure_activations+0xb20>)
 810183a:	681b      	ldr	r3, [r3, #0]
 810183c:	f503 3353 	add.w	r3, r3, #216064	; 0x34c00
 8101840:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8101844:	4a5b      	ldr	r2, [pc, #364]	; (81019b4 <face_recognition_configure_activations+0xb50>)
 8101846:	60d3      	str	r3, [r2, #12]
    conv2d_51_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101848:	4b4e      	ldr	r3, [pc, #312]	; (8101984 <face_recognition_configure_activations+0xb20>)
 810184a:	681b      	ldr	r3, [r3, #0]
 810184c:	4a5a      	ldr	r2, [pc, #360]	; (81019b8 <face_recognition_configure_activations+0xb54>)
 810184e:	6093      	str	r3, [r2, #8]
    conv2d_51_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101850:	4b4c      	ldr	r3, [pc, #304]	; (8101984 <face_recognition_configure_activations+0xb20>)
 8101852:	681b      	ldr	r3, [r3, #0]
 8101854:	4a58      	ldr	r2, [pc, #352]	; (81019b8 <face_recognition_configure_activations+0xb54>)
 8101856:	60d3      	str	r3, [r2, #12]
    conv2d_51_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 204544);
 8101858:	4b4a      	ldr	r3, [pc, #296]	; (8101984 <face_recognition_configure_activations+0xb20>)
 810185a:	681b      	ldr	r3, [r3, #0]
 810185c:	f503 3347 	add.w	r3, r3, #203776	; 0x31c00
 8101860:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8101864:	4a55      	ldr	r2, [pc, #340]	; (81019bc <face_recognition_configure_activations+0xb58>)
 8101866:	6093      	str	r3, [r2, #8]
    conv2d_51_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 204544);
 8101868:	4b46      	ldr	r3, [pc, #280]	; (8101984 <face_recognition_configure_activations+0xb20>)
 810186a:	681b      	ldr	r3, [r3, #0]
 810186c:	f503 3347 	add.w	r3, r3, #203776	; 0x31c00
 8101870:	f503 7340 	add.w	r3, r3, #768	; 0x300
 8101874:	4a51      	ldr	r2, [pc, #324]	; (81019bc <face_recognition_configure_activations+0xb58>)
 8101876:	60d3      	str	r3, [r2, #12]
    conv2d_53_pad_before_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 188992);
 8101878:	4b42      	ldr	r3, [pc, #264]	; (8101984 <face_recognition_configure_activations+0xb20>)
 810187a:	681b      	ldr	r3, [r3, #0]
 810187c:	f503 3338 	add.w	r3, r3, #188416	; 0x2e000
 8101880:	f503 7310 	add.w	r3, r3, #576	; 0x240
 8101884:	4a4e      	ldr	r2, [pc, #312]	; (81019c0 <face_recognition_configure_activations+0xb5c>)
 8101886:	6093      	str	r3, [r2, #8]
    conv2d_53_pad_before_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 188992);
 8101888:	4b3e      	ldr	r3, [pc, #248]	; (8101984 <face_recognition_configure_activations+0xb20>)
 810188a:	681b      	ldr	r3, [r3, #0]
 810188c:	f503 3338 	add.w	r3, r3, #188416	; 0x2e000
 8101890:	f503 7310 	add.w	r3, r3, #576	; 0x240
 8101894:	4a4a      	ldr	r2, [pc, #296]	; (81019c0 <face_recognition_configure_activations+0xb5c>)
 8101896:	60d3      	str	r3, [r2, #12]
    conv2d_53_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 222268);
 8101898:	4b3a      	ldr	r3, [pc, #232]	; (8101984 <face_recognition_configure_activations+0xb20>)
 810189a:	681b      	ldr	r3, [r3, #0]
 810189c:	f503 3359 	add.w	r3, r3, #222208	; 0x36400
 81018a0:	333c      	adds	r3, #60	; 0x3c
 81018a2:	4a48      	ldr	r2, [pc, #288]	; (81019c4 <face_recognition_configure_activations+0xb60>)
 81018a4:	6093      	str	r3, [r2, #8]
    conv2d_53_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 222268);
 81018a6:	4b37      	ldr	r3, [pc, #220]	; (8101984 <face_recognition_configure_activations+0xb20>)
 81018a8:	681b      	ldr	r3, [r3, #0]
 81018aa:	f503 3359 	add.w	r3, r3, #222208	; 0x36400
 81018ae:	333c      	adds	r3, #60	; 0x3c
 81018b0:	4a44      	ldr	r2, [pc, #272]	; (81019c4 <face_recognition_configure_activations+0xb60>)
 81018b2:	60d3      	str	r3, [r2, #12]
    conv2d_53_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 185920);
 81018b4:	4b33      	ldr	r3, [pc, #204]	; (8101984 <face_recognition_configure_activations+0xb20>)
 81018b6:	681b      	ldr	r3, [r3, #0]
 81018b8:	f503 3335 	add.w	r3, r3, #185344	; 0x2d400
 81018bc:	f503 7310 	add.w	r3, r3, #576	; 0x240
 81018c0:	4a41      	ldr	r2, [pc, #260]	; (81019c8 <face_recognition_configure_activations+0xb64>)
 81018c2:	6093      	str	r3, [r2, #8]
    conv2d_53_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 185920);
 81018c4:	4b2f      	ldr	r3, [pc, #188]	; (8101984 <face_recognition_configure_activations+0xb20>)
 81018c6:	681b      	ldr	r3, [r3, #0]
 81018c8:	f503 3335 	add.w	r3, r3, #185344	; 0x2d400
 81018cc:	f503 7310 	add.w	r3, r3, #576	; 0x240
 81018d0:	4a3d      	ldr	r2, [pc, #244]	; (81019c8 <face_recognition_configure_activations+0xb64>)
 81018d2:	60d3      	str	r3, [r2, #12]
    conv2d_54_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 184592);
 81018d4:	4b2b      	ldr	r3, [pc, #172]	; (8101984 <face_recognition_configure_activations+0xb20>)
 81018d6:	681b      	ldr	r3, [r3, #0]
 81018d8:	f503 3334 	add.w	r3, r3, #184320	; 0x2d000
 81018dc:	f503 7388 	add.w	r3, r3, #272	; 0x110
 81018e0:	4a3a      	ldr	r2, [pc, #232]	; (81019cc <face_recognition_configure_activations+0xb68>)
 81018e2:	6093      	str	r3, [r2, #8]
    conv2d_54_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 184592);
 81018e4:	4b27      	ldr	r3, [pc, #156]	; (8101984 <face_recognition_configure_activations+0xb20>)
 81018e6:	681b      	ldr	r3, [r3, #0]
 81018e8:	f503 3334 	add.w	r3, r3, #184320	; 0x2d000
 81018ec:	f503 7388 	add.w	r3, r3, #272	; 0x110
 81018f0:	4a36      	ldr	r2, [pc, #216]	; (81019cc <face_recognition_configure_activations+0xb68>)
 81018f2:	60d3      	str	r3, [r2, #12]
    conv2d_54_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 228480);
 81018f4:	4b23      	ldr	r3, [pc, #140]	; (8101984 <face_recognition_configure_activations+0xb20>)
 81018f6:	681b      	ldr	r3, [r3, #0]
 81018f8:	f503 335f 	add.w	r3, r3, #228352	; 0x37c00
 81018fc:	3380      	adds	r3, #128	; 0x80
 81018fe:	4a34      	ldr	r2, [pc, #208]	; (81019d0 <face_recognition_configure_activations+0xb6c>)
 8101900:	6093      	str	r3, [r2, #8]
    conv2d_54_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 228480);
 8101902:	4b20      	ldr	r3, [pc, #128]	; (8101984 <face_recognition_configure_activations+0xb20>)
 8101904:	681b      	ldr	r3, [r3, #0]
 8101906:	f503 335f 	add.w	r3, r3, #228352	; 0x37c00
 810190a:	3380      	adds	r3, #128	; 0x80
 810190c:	4a30      	ldr	r2, [pc, #192]	; (81019d0 <face_recognition_configure_activations+0xb6c>)
 810190e:	60d3      	str	r3, [r2, #12]
    conv2d_55_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101910:	4b1c      	ldr	r3, [pc, #112]	; (8101984 <face_recognition_configure_activations+0xb20>)
 8101912:	681b      	ldr	r3, [r3, #0]
 8101914:	4a2f      	ldr	r2, [pc, #188]	; (81019d4 <face_recognition_configure_activations+0xb70>)
 8101916:	6093      	str	r3, [r2, #8]
    conv2d_55_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101918:	4b1a      	ldr	r3, [pc, #104]	; (8101984 <face_recognition_configure_activations+0xb20>)
 810191a:	681b      	ldr	r3, [r3, #0]
 810191c:	4a2d      	ldr	r2, [pc, #180]	; (81019d4 <face_recognition_configure_activations+0xb70>)
 810191e:	60d3      	str	r3, [r2, #12]
    conv2d_55_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 3584);
 8101920:	4b18      	ldr	r3, [pc, #96]	; (8101984 <face_recognition_configure_activations+0xb20>)
 8101922:	681b      	ldr	r3, [r3, #0]
 8101924:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8101928:	4a2b      	ldr	r2, [pc, #172]	; (81019d8 <face_recognition_configure_activations+0xb74>)
 810192a:	6093      	str	r3, [r2, #8]
    conv2d_55_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 3584);
 810192c:	4b15      	ldr	r3, [pc, #84]	; (8101984 <face_recognition_configure_activations+0xb20>)
 810192e:	681b      	ldr	r3, [r3, #0]
 8101930:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8101934:	4a28      	ldr	r2, [pc, #160]	; (81019d8 <face_recognition_configure_activations+0xb74>)
 8101936:	60d3      	str	r3, [r2, #12]
    conv2d_56_pad_before_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 8960);
 8101938:	4b12      	ldr	r3, [pc, #72]	; (8101984 <face_recognition_configure_activations+0xb20>)
 810193a:	681b      	ldr	r3, [r3, #0]
 810193c:	f503 530c 	add.w	r3, r3, #8960	; 0x2300
 8101940:	4a26      	ldr	r2, [pc, #152]	; (81019dc <face_recognition_configure_activations+0xb78>)
 8101942:	6093      	str	r3, [r2, #8]
    conv2d_56_pad_before_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 8960);
 8101944:	4b0f      	ldr	r3, [pc, #60]	; (8101984 <face_recognition_configure_activations+0xb20>)
 8101946:	681b      	ldr	r3, [r3, #0]
 8101948:	f503 530c 	add.w	r3, r3, #8960	; 0x2300
 810194c:	4a23      	ldr	r2, [pc, #140]	; (81019dc <face_recognition_configure_activations+0xb78>)
 810194e:	60d3      	str	r3, [r2, #12]
    conv2d_56_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 216044);
 8101950:	4b0c      	ldr	r3, [pc, #48]	; (8101984 <face_recognition_configure_activations+0xb20>)
 8101952:	681b      	ldr	r3, [r3, #0]
 8101954:	f503 3352 	add.w	r3, r3, #215040	; 0x34800
 8101958:	f503 737b 	add.w	r3, r3, #1004	; 0x3ec
 810195c:	4a20      	ldr	r2, [pc, #128]	; (81019e0 <face_recognition_configure_activations+0xb7c>)
 810195e:	6093      	str	r3, [r2, #8]
    conv2d_56_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 216044);
 8101960:	4b08      	ldr	r3, [pc, #32]	; (8101984 <face_recognition_configure_activations+0xb20>)
 8101962:	681b      	ldr	r3, [r3, #0]
 8101964:	f503 3352 	add.w	r3, r3, #215040	; 0x34800
 8101968:	f503 737b 	add.w	r3, r3, #1004	; 0x3ec
 810196c:	4a1c      	ldr	r2, [pc, #112]	; (81019e0 <face_recognition_configure_activations+0xb7c>)
 810196e:	60d3      	str	r3, [r2, #12]
    conv2d_56_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 7616);
 8101970:	4b04      	ldr	r3, [pc, #16]	; (8101984 <face_recognition_configure_activations+0xb20>)
 8101972:	681b      	ldr	r3, [r3, #0]
 8101974:	f503 53ee 	add.w	r3, r3, #7616	; 0x1dc0
 8101978:	4a1a      	ldr	r2, [pc, #104]	; (81019e4 <face_recognition_configure_activations+0xb80>)
 810197a:	6093      	str	r3, [r2, #8]
 810197c:	e034      	b.n	81019e8 <face_recognition_configure_activations+0xb84>
 810197e:	bf00      	nop
 8101980:	10000340 	.word	0x10000340
 8101984:	1003f910 	.word	0x1003f910
 8101988:	10000350 	.word	0x10000350
 810198c:	10000e10 	.word	0x10000e10
 8101990:	10000360 	.word	0x10000360
 8101994:	10000370 	.word	0x10000370
 8101998:	10000380 	.word	0x10000380
 810199c:	10000e30 	.word	0x10000e30
 81019a0:	10000390 	.word	0x10000390
 81019a4:	100003a0 	.word	0x100003a0
 81019a8:	10000e40 	.word	0x10000e40
 81019ac:	100003b0 	.word	0x100003b0
 81019b0:	100003c0 	.word	0x100003c0
 81019b4:	100003d0 	.word	0x100003d0
 81019b8:	10000e60 	.word	0x10000e60
 81019bc:	100003e0 	.word	0x100003e0
 81019c0:	100003f0 	.word	0x100003f0
 81019c4:	10000e70 	.word	0x10000e70
 81019c8:	10000400 	.word	0x10000400
 81019cc:	10000e80 	.word	0x10000e80
 81019d0:	10000410 	.word	0x10000410
 81019d4:	10000e90 	.word	0x10000e90
 81019d8:	10000420 	.word	0x10000420
 81019dc:	10000430 	.word	0x10000430
 81019e0:	10000ea0 	.word	0x10000ea0
 81019e4:	10000440 	.word	0x10000440
    conv2d_56_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 7616);
 81019e8:	4b97      	ldr	r3, [pc, #604]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 81019ea:	681b      	ldr	r3, [r3, #0]
 81019ec:	f503 53ee 	add.w	r3, r3, #7616	; 0x1dc0
 81019f0:	4a96      	ldr	r2, [pc, #600]	; (8101c4c <face_recognition_configure_activations+0xde8>)
 81019f2:	60d3      	str	r3, [r2, #12]
    conv2d_57_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 81019f4:	4b94      	ldr	r3, [pc, #592]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 81019f6:	681b      	ldr	r3, [r3, #0]
 81019f8:	4a95      	ldr	r2, [pc, #596]	; (8101c50 <face_recognition_configure_activations+0xdec>)
 81019fa:	6093      	str	r3, [r2, #8]
    conv2d_57_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 81019fc:	4b92      	ldr	r3, [pc, #584]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 81019fe:	681b      	ldr	r3, [r3, #0]
 8101a00:	4a93      	ldr	r2, [pc, #588]	; (8101c50 <face_recognition_configure_activations+0xdec>)
 8101a02:	60d3      	str	r3, [r2, #12]
    conv2d_57_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 7392);
 8101a04:	4b90      	ldr	r3, [pc, #576]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101a06:	681b      	ldr	r3, [r3, #0]
 8101a08:	f503 53e7 	add.w	r3, r3, #7392	; 0x1ce0
 8101a0c:	4a91      	ldr	r2, [pc, #580]	; (8101c54 <face_recognition_configure_activations+0xdf0>)
 8101a0e:	6093      	str	r3, [r2, #8]
    conv2d_57_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 7392);
 8101a10:	4b8d      	ldr	r3, [pc, #564]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101a12:	681b      	ldr	r3, [r3, #0]
 8101a14:	f503 53e7 	add.w	r3, r3, #7392	; 0x1ce0
 8101a18:	4a8e      	ldr	r2, [pc, #568]	; (8101c54 <face_recognition_configure_activations+0xdf0>)
 8101a1a:	60d3      	str	r3, [r2, #12]
    eltwise_58_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 7392);
 8101a1c:	4b8a      	ldr	r3, [pc, #552]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101a1e:	681b      	ldr	r3, [r3, #0]
 8101a20:	f503 53e7 	add.w	r3, r3, #7392	; 0x1ce0
 8101a24:	4a8c      	ldr	r2, [pc, #560]	; (8101c58 <face_recognition_configure_activations+0xdf4>)
 8101a26:	6093      	str	r3, [r2, #8]
    eltwise_58_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 7392);
 8101a28:	4b87      	ldr	r3, [pc, #540]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101a2a:	681b      	ldr	r3, [r3, #0]
 8101a2c:	f503 53e7 	add.w	r3, r3, #7392	; 0x1ce0
 8101a30:	4a89      	ldr	r2, [pc, #548]	; (8101c58 <face_recognition_configure_activations+0xdf4>)
 8101a32:	60d3      	str	r3, [r2, #12]
    conv2d_59_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101a34:	4b84      	ldr	r3, [pc, #528]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101a36:	681b      	ldr	r3, [r3, #0]
 8101a38:	4a88      	ldr	r2, [pc, #544]	; (8101c5c <face_recognition_configure_activations+0xdf8>)
 8101a3a:	6093      	str	r3, [r2, #8]
    conv2d_59_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101a3c:	4b82      	ldr	r3, [pc, #520]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101a3e:	681b      	ldr	r3, [r3, #0]
 8101a40:	4a86      	ldr	r2, [pc, #536]	; (8101c5c <face_recognition_configure_activations+0xdf8>)
 8101a42:	60d3      	str	r3, [r2, #12]
    conv2d_59_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 8288);
 8101a44:	4b80      	ldr	r3, [pc, #512]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101a46:	681b      	ldr	r3, [r3, #0]
 8101a48:	f503 5301 	add.w	r3, r3, #8256	; 0x2040
 8101a4c:	3320      	adds	r3, #32
 8101a4e:	4a84      	ldr	r2, [pc, #528]	; (8101c60 <face_recognition_configure_activations+0xdfc>)
 8101a50:	6093      	str	r3, [r2, #8]
    conv2d_59_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 8288);
 8101a52:	4b7d      	ldr	r3, [pc, #500]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101a54:	681b      	ldr	r3, [r3, #0]
 8101a56:	f503 5301 	add.w	r3, r3, #8256	; 0x2040
 8101a5a:	3320      	adds	r3, #32
 8101a5c:	4a80      	ldr	r2, [pc, #512]	; (8101c60 <face_recognition_configure_activations+0xdfc>)
 8101a5e:	60d3      	str	r3, [r2, #12]
    conv2d_60_pad_before_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 13664);
 8101a60:	4b79      	ldr	r3, [pc, #484]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101a62:	681b      	ldr	r3, [r3, #0]
 8101a64:	f503 5355 	add.w	r3, r3, #13632	; 0x3540
 8101a68:	3320      	adds	r3, #32
 8101a6a:	4a7e      	ldr	r2, [pc, #504]	; (8101c64 <face_recognition_configure_activations+0xe00>)
 8101a6c:	6093      	str	r3, [r2, #8]
    conv2d_60_pad_before_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 13664);
 8101a6e:	4b76      	ldr	r3, [pc, #472]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101a70:	681b      	ldr	r3, [r3, #0]
 8101a72:	f503 5355 	add.w	r3, r3, #13632	; 0x3540
 8101a76:	3320      	adds	r3, #32
 8101a78:	4a7a      	ldr	r2, [pc, #488]	; (8101c64 <face_recognition_configure_activations+0xe00>)
 8101a7a:	60d3      	str	r3, [r2, #12]
    conv2d_60_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 216940);
 8101a7c:	4b72      	ldr	r3, [pc, #456]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101a7e:	681b      	ldr	r3, [r3, #0]
 8101a80:	f503 3353 	add.w	r3, r3, #216064	; 0x34c00
 8101a84:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 8101a88:	4a77      	ldr	r2, [pc, #476]	; (8101c68 <face_recognition_configure_activations+0xe04>)
 8101a8a:	6093      	str	r3, [r2, #8]
    conv2d_60_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 216940);
 8101a8c:	4b6e      	ldr	r3, [pc, #440]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101a8e:	681b      	ldr	r3, [r3, #0]
 8101a90:	f503 3353 	add.w	r3, r3, #216064	; 0x34c00
 8101a94:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 8101a98:	4a73      	ldr	r2, [pc, #460]	; (8101c68 <face_recognition_configure_activations+0xe04>)
 8101a9a:	60d3      	str	r3, [r2, #12]
    conv2d_60_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 12320);
 8101a9c:	4b6a      	ldr	r3, [pc, #424]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101a9e:	681b      	ldr	r3, [r3, #0]
 8101aa0:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8101aa4:	3320      	adds	r3, #32
 8101aa6:	4a71      	ldr	r2, [pc, #452]	; (8101c6c <face_recognition_configure_activations+0xe08>)
 8101aa8:	6093      	str	r3, [r2, #8]
    conv2d_60_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 12320);
 8101aaa:	4b67      	ldr	r3, [pc, #412]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101aac:	681b      	ldr	r3, [r3, #0]
 8101aae:	f503 5340 	add.w	r3, r3, #12288	; 0x3000
 8101ab2:	3320      	adds	r3, #32
 8101ab4:	4a6d      	ldr	r2, [pc, #436]	; (8101c6c <face_recognition_configure_activations+0xe08>)
 8101ab6:	60d3      	str	r3, [r2, #12]
    conv2d_61_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101ab8:	4b63      	ldr	r3, [pc, #396]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101aba:	681b      	ldr	r3, [r3, #0]
 8101abc:	4a6c      	ldr	r2, [pc, #432]	; (8101c70 <face_recognition_configure_activations+0xe0c>)
 8101abe:	6093      	str	r3, [r2, #8]
    conv2d_61_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101ac0:	4b61      	ldr	r3, [pc, #388]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101ac2:	681b      	ldr	r3, [r3, #0]
 8101ac4:	4a6a      	ldr	r2, [pc, #424]	; (8101c70 <face_recognition_configure_activations+0xe0c>)
 8101ac6:	60d3      	str	r3, [r2, #12]
    conv2d_61_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 12096);
 8101ac8:	4b5f      	ldr	r3, [pc, #380]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101aca:	681b      	ldr	r3, [r3, #0]
 8101acc:	f503 533d 	add.w	r3, r3, #12096	; 0x2f40
 8101ad0:	4a68      	ldr	r2, [pc, #416]	; (8101c74 <face_recognition_configure_activations+0xe10>)
 8101ad2:	6093      	str	r3, [r2, #8]
    conv2d_61_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 12096);
 8101ad4:	4b5c      	ldr	r3, [pc, #368]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101ad6:	681b      	ldr	r3, [r3, #0]
 8101ad8:	f503 533d 	add.w	r3, r3, #12096	; 0x2f40
 8101adc:	4a65      	ldr	r2, [pc, #404]	; (8101c74 <face_recognition_configure_activations+0xe10>)
 8101ade:	60d3      	str	r3, [r2, #12]
    eltwise_62_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 12096);
 8101ae0:	4b59      	ldr	r3, [pc, #356]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101ae2:	681b      	ldr	r3, [r3, #0]
 8101ae4:	f503 533d 	add.w	r3, r3, #12096	; 0x2f40
 8101ae8:	4a63      	ldr	r2, [pc, #396]	; (8101c78 <face_recognition_configure_activations+0xe14>)
 8101aea:	6093      	str	r3, [r2, #8]
    eltwise_62_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 12096);
 8101aec:	4b56      	ldr	r3, [pc, #344]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101aee:	681b      	ldr	r3, [r3, #0]
 8101af0:	f503 533d 	add.w	r3, r3, #12096	; 0x2f40
 8101af4:	4a60      	ldr	r2, [pc, #384]	; (8101c78 <face_recognition_configure_activations+0xe14>)
 8101af6:	60d3      	str	r3, [r2, #12]
    conv2d_63_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101af8:	4b53      	ldr	r3, [pc, #332]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101afa:	681b      	ldr	r3, [r3, #0]
 8101afc:	4a5f      	ldr	r2, [pc, #380]	; (8101c7c <face_recognition_configure_activations+0xe18>)
 8101afe:	6093      	str	r3, [r2, #8]
    conv2d_63_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101b00:	4b51      	ldr	r3, [pc, #324]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101b02:	681b      	ldr	r3, [r3, #0]
 8101b04:	4a5d      	ldr	r2, [pc, #372]	; (8101c7c <face_recognition_configure_activations+0xe18>)
 8101b06:	60d3      	str	r3, [r2, #12]
    conv2d_63_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 12992);
 8101b08:	4b4f      	ldr	r3, [pc, #316]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101b0a:	681b      	ldr	r3, [r3, #0]
 8101b0c:	f503 534b 	add.w	r3, r3, #12992	; 0x32c0
 8101b10:	4a5b      	ldr	r2, [pc, #364]	; (8101c80 <face_recognition_configure_activations+0xe1c>)
 8101b12:	6093      	str	r3, [r2, #8]
    conv2d_63_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 12992);
 8101b14:	4b4c      	ldr	r3, [pc, #304]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101b16:	681b      	ldr	r3, [r3, #0]
 8101b18:	f503 534b 	add.w	r3, r3, #12992	; 0x32c0
 8101b1c:	4a58      	ldr	r2, [pc, #352]	; (8101c80 <face_recognition_configure_activations+0xe1c>)
 8101b1e:	60d3      	str	r3, [r2, #12]
    conv2d_64_pad_before_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 18368);
 8101b20:	4b49      	ldr	r3, [pc, #292]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101b22:	681b      	ldr	r3, [r3, #0]
 8101b24:	f503 438f 	add.w	r3, r3, #18304	; 0x4780
 8101b28:	3340      	adds	r3, #64	; 0x40
 8101b2a:	4a56      	ldr	r2, [pc, #344]	; (8101c84 <face_recognition_configure_activations+0xe20>)
 8101b2c:	6093      	str	r3, [r2, #8]
    conv2d_64_pad_before_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 18368);
 8101b2e:	4b46      	ldr	r3, [pc, #280]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101b30:	681b      	ldr	r3, [r3, #0]
 8101b32:	f503 438f 	add.w	r3, r3, #18304	; 0x4780
 8101b36:	3340      	adds	r3, #64	; 0x40
 8101b38:	4a52      	ldr	r2, [pc, #328]	; (8101c84 <face_recognition_configure_activations+0xe20>)
 8101b3a:	60d3      	str	r3, [r2, #12]
    conv2d_64_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 216940);
 8101b3c:	4b42      	ldr	r3, [pc, #264]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101b3e:	681b      	ldr	r3, [r3, #0]
 8101b40:	f503 3353 	add.w	r3, r3, #216064	; 0x34c00
 8101b44:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 8101b48:	4a4f      	ldr	r2, [pc, #316]	; (8101c88 <face_recognition_configure_activations+0xe24>)
 8101b4a:	6093      	str	r3, [r2, #8]
    conv2d_64_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 216940);
 8101b4c:	4b3e      	ldr	r3, [pc, #248]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101b4e:	681b      	ldr	r3, [r3, #0]
 8101b50:	f503 3353 	add.w	r3, r3, #216064	; 0x34c00
 8101b54:	f503 735b 	add.w	r3, r3, #876	; 0x36c
 8101b58:	4a4b      	ldr	r2, [pc, #300]	; (8101c88 <face_recognition_configure_activations+0xe24>)
 8101b5a:	60d3      	str	r3, [r2, #12]
    conv2d_64_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 211564);
 8101b5c:	4b3a      	ldr	r3, [pc, #232]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101b5e:	681b      	ldr	r3, [r3, #0]
 8101b60:	f503 334e 	add.w	r3, r3, #210944	; 0x33800
 8101b64:	f503 731b 	add.w	r3, r3, #620	; 0x26c
 8101b68:	4a48      	ldr	r2, [pc, #288]	; (8101c8c <face_recognition_configure_activations+0xe28>)
 8101b6a:	6093      	str	r3, [r2, #8]
    conv2d_64_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 211564);
 8101b6c:	4b36      	ldr	r3, [pc, #216]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101b6e:	681b      	ldr	r3, [r3, #0]
 8101b70:	f503 334e 	add.w	r3, r3, #210944	; 0x33800
 8101b74:	f503 731b 	add.w	r3, r3, #620	; 0x26c
 8101b78:	4a44      	ldr	r2, [pc, #272]	; (8101c8c <face_recognition_configure_activations+0xe28>)
 8101b7a:	60d3      	str	r3, [r2, #12]
    conv2d_65_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101b7c:	4b32      	ldr	r3, [pc, #200]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101b7e:	681b      	ldr	r3, [r3, #0]
 8101b80:	4a43      	ldr	r2, [pc, #268]	; (8101c90 <face_recognition_configure_activations+0xe2c>)
 8101b82:	6093      	str	r3, [r2, #8]
    conv2d_65_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101b84:	4b30      	ldr	r3, [pc, #192]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101b86:	681b      	ldr	r3, [r3, #0]
 8101b88:	4a41      	ldr	r2, [pc, #260]	; (8101c90 <face_recognition_configure_activations+0xe2c>)
 8101b8a:	60d3      	str	r3, [r2, #12]
    conv2d_65_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 211116);
 8101b8c:	4b2e      	ldr	r3, [pc, #184]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101b8e:	681b      	ldr	r3, [r3, #0]
 8101b90:	f503 334e 	add.w	r3, r3, #210944	; 0x33800
 8101b94:	33ac      	adds	r3, #172	; 0xac
 8101b96:	4a3f      	ldr	r2, [pc, #252]	; (8101c94 <face_recognition_configure_activations+0xe30>)
 8101b98:	6093      	str	r3, [r2, #8]
    conv2d_65_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 211116);
 8101b9a:	4b2b      	ldr	r3, [pc, #172]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101b9c:	681b      	ldr	r3, [r3, #0]
 8101b9e:	f503 334e 	add.w	r3, r3, #210944	; 0x33800
 8101ba2:	33ac      	adds	r3, #172	; 0xac
 8101ba4:	4a3b      	ldr	r2, [pc, #236]	; (8101c94 <face_recognition_configure_activations+0xe30>)
 8101ba6:	60d3      	str	r3, [r2, #12]
    conv2d_66_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101ba8:	4b27      	ldr	r3, [pc, #156]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101baa:	681b      	ldr	r3, [r3, #0]
 8101bac:	4a3a      	ldr	r2, [pc, #232]	; (8101c98 <face_recognition_configure_activations+0xe34>)
 8101bae:	6093      	str	r3, [r2, #8]
    conv2d_66_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101bb0:	4b25      	ldr	r3, [pc, #148]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101bb2:	681b      	ldr	r3, [r3, #0]
 8101bb4:	4a38      	ldr	r2, [pc, #224]	; (8101c98 <face_recognition_configure_activations+0xe34>)
 8101bb6:	60d3      	str	r3, [r2, #12]
    conv2d_66_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 187308);
 8101bb8:	4b23      	ldr	r3, [pc, #140]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101bba:	681b      	ldr	r3, [r3, #0]
 8101bbc:	f503 3336 	add.w	r3, r3, #186368	; 0x2d800
 8101bc0:	f503 736b 	add.w	r3, r3, #940	; 0x3ac
 8101bc4:	4a35      	ldr	r2, [pc, #212]	; (8101c9c <face_recognition_configure_activations+0xe38>)
 8101bc6:	6093      	str	r3, [r2, #8]
    conv2d_66_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 187308);
 8101bc8:	4b1f      	ldr	r3, [pc, #124]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101bca:	681b      	ldr	r3, [r3, #0]
 8101bcc:	f503 3336 	add.w	r3, r3, #186368	; 0x2d800
 8101bd0:	f503 736b 	add.w	r3, r3, #940	; 0x3ac
 8101bd4:	4a31      	ldr	r2, [pc, #196]	; (8101c9c <face_recognition_configure_activations+0xe38>)
 8101bd6:	60d3      	str	r3, [r2, #12]
    pool_67_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 187308);
 8101bd8:	4b1b      	ldr	r3, [pc, #108]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101bda:	681b      	ldr	r3, [r3, #0]
 8101bdc:	f503 3336 	add.w	r3, r3, #186368	; 0x2d800
 8101be0:	f503 736b 	add.w	r3, r3, #940	; 0x3ac
 8101be4:	4a2e      	ldr	r2, [pc, #184]	; (8101ca0 <face_recognition_configure_activations+0xe3c>)
 8101be6:	6093      	str	r3, [r2, #8]
    pool_67_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 187308);
 8101be8:	4b17      	ldr	r3, [pc, #92]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101bea:	681b      	ldr	r3, [r3, #0]
 8101bec:	f503 3336 	add.w	r3, r3, #186368	; 0x2d800
 8101bf0:	f503 736b 	add.w	r3, r3, #940	; 0x3ac
 8101bf4:	4a2a      	ldr	r2, [pc, #168]	; (8101ca0 <face_recognition_configure_activations+0xe3c>)
 8101bf6:	60d3      	str	r3, [r2, #12]
    gemm_68_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101bf8:	4b13      	ldr	r3, [pc, #76]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101bfa:	681b      	ldr	r3, [r3, #0]
 8101bfc:	4a29      	ldr	r2, [pc, #164]	; (8101ca4 <face_recognition_configure_activations+0xe40>)
 8101bfe:	6093      	str	r3, [r2, #8]
    gemm_68_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101c00:	4b11      	ldr	r3, [pc, #68]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101c02:	681b      	ldr	r3, [r3, #0]
 8101c04:	4a27      	ldr	r2, [pc, #156]	; (8101ca4 <face_recognition_configure_activations+0xe40>)
 8101c06:	60d3      	str	r3, [r2, #12]
    gemm_68_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 2560);
 8101c08:	4b0f      	ldr	r3, [pc, #60]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101c0a:	681b      	ldr	r3, [r3, #0]
 8101c0c:	f503 6320 	add.w	r3, r3, #2560	; 0xa00
 8101c10:	4a25      	ldr	r2, [pc, #148]	; (8101ca8 <face_recognition_configure_activations+0xe44>)
 8101c12:	6093      	str	r3, [r2, #8]
    gemm_68_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 2560);
 8101c14:	4b0c      	ldr	r3, [pc, #48]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101c16:	681b      	ldr	r3, [r3, #0]
 8101c18:	f503 6320 	add.w	r3, r3, #2560	; 0xa00
 8101c1c:	4a22      	ldr	r2, [pc, #136]	; (8101ca8 <face_recognition_configure_activations+0xe44>)
 8101c1e:	60d3      	str	r3, [r2, #12]
    nl_69_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101c20:	4b09      	ldr	r3, [pc, #36]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101c22:	681b      	ldr	r3, [r3, #0]
 8101c24:	4a21      	ldr	r2, [pc, #132]	; (8101cac <face_recognition_configure_activations+0xe48>)
 8101c26:	6093      	str	r3, [r2, #8]
    nl_69_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 0);
 8101c28:	4b07      	ldr	r3, [pc, #28]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101c2a:	681b      	ldr	r3, [r3, #0]
 8101c2c:	4a1f      	ldr	r2, [pc, #124]	; (8101cac <face_recognition_configure_activations+0xe48>)
 8101c2e:	60d3      	str	r3, [r2, #12]
    conversion_70_output_array.data = AI_PTR(g_face_recognition_activations_map[0] + 4);
 8101c30:	4b05      	ldr	r3, [pc, #20]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101c32:	681b      	ldr	r3, [r3, #0]
 8101c34:	3304      	adds	r3, #4
 8101c36:	4a1e      	ldr	r2, [pc, #120]	; (8101cb0 <face_recognition_configure_activations+0xe4c>)
 8101c38:	6093      	str	r3, [r2, #8]
    conversion_70_output_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 4);
 8101c3a:	4b03      	ldr	r3, [pc, #12]	; (8101c48 <face_recognition_configure_activations+0xde4>)
 8101c3c:	681b      	ldr	r3, [r3, #0]
 8101c3e:	3304      	adds	r3, #4
 8101c40:	4a1b      	ldr	r2, [pc, #108]	; (8101cb0 <face_recognition_configure_activations+0xe4c>)
 8101c42:	60d3      	str	r3, [r2, #12]
 8101c44:	e036      	b.n	8101cb4 <face_recognition_configure_activations+0xe50>
 8101c46:	bf00      	nop
 8101c48:	1003f910 	.word	0x1003f910
 8101c4c:	10000440 	.word	0x10000440
 8101c50:	10000eb0 	.word	0x10000eb0
 8101c54:	10000450 	.word	0x10000450
 8101c58:	10000460 	.word	0x10000460
 8101c5c:	10000ec0 	.word	0x10000ec0
 8101c60:	10000470 	.word	0x10000470
 8101c64:	10000480 	.word	0x10000480
 8101c68:	10000ed0 	.word	0x10000ed0
 8101c6c:	10000490 	.word	0x10000490
 8101c70:	10000ee0 	.word	0x10000ee0
 8101c74:	100004a0 	.word	0x100004a0
 8101c78:	100004b0 	.word	0x100004b0
 8101c7c:	10000ef0 	.word	0x10000ef0
 8101c80:	100004c0 	.word	0x100004c0
 8101c84:	100004d0 	.word	0x100004d0
 8101c88:	10000f00 	.word	0x10000f00
 8101c8c:	100004e0 	.word	0x100004e0
 8101c90:	10000f10 	.word	0x10000f10
 8101c94:	100004f0 	.word	0x100004f0
 8101c98:	10000f20 	.word	0x10000f20
 8101c9c:	10000500 	.word	0x10000500
 8101ca0:	10000510 	.word	0x10000510
 8101ca4:	10000f30 	.word	0x10000f30
 8101ca8:	10000520 	.word	0x10000520
 8101cac:	10000530 	.word	0x10000530
 8101cb0:	10000540 	.word	0x10000540
    conv2d_1_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101cb4:	4b67      	ldr	r3, [pc, #412]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101cb6:	681b      	ldr	r3, [r3, #0]
 8101cb8:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101cbc:	4a66      	ldr	r2, [pc, #408]	; (8101e58 <face_recognition_configure_activations+0xff4>)
 8101cbe:	6093      	str	r3, [r2, #8]
    conv2d_1_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101cc0:	4b64      	ldr	r3, [pc, #400]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101cc2:	681b      	ldr	r3, [r3, #0]
 8101cc4:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101cc8:	4a63      	ldr	r2, [pc, #396]	; (8101e58 <face_recognition_configure_activations+0xff4>)
 8101cca:	60d3      	str	r3, [r2, #12]
    conv2d_4_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101ccc:	4b61      	ldr	r3, [pc, #388]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101cce:	681b      	ldr	r3, [r3, #0]
 8101cd0:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101cd4:	4a61      	ldr	r2, [pc, #388]	; (8101e5c <face_recognition_configure_activations+0xff8>)
 8101cd6:	6093      	str	r3, [r2, #8]
    conv2d_4_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101cd8:	4b5e      	ldr	r3, [pc, #376]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101cda:	681b      	ldr	r3, [r3, #0]
 8101cdc:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101ce0:	4a5e      	ldr	r2, [pc, #376]	; (8101e5c <face_recognition_configure_activations+0xff8>)
 8101ce2:	60d3      	str	r3, [r2, #12]
    conv2d_8_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101ce4:	4b5b      	ldr	r3, [pc, #364]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101ce6:	681b      	ldr	r3, [r3, #0]
 8101ce8:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101cec:	4a5c      	ldr	r2, [pc, #368]	; (8101e60 <face_recognition_configure_activations+0xffc>)
 8101cee:	6093      	str	r3, [r2, #8]
    conv2d_8_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101cf0:	4b58      	ldr	r3, [pc, #352]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101cf2:	681b      	ldr	r3, [r3, #0]
 8101cf4:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101cf8:	4a59      	ldr	r2, [pc, #356]	; (8101e60 <face_recognition_configure_activations+0xffc>)
 8101cfa:	60d3      	str	r3, [r2, #12]
    conv2d_10_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101cfc:	4b55      	ldr	r3, [pc, #340]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101cfe:	681b      	ldr	r3, [r3, #0]
 8101d00:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101d04:	4a57      	ldr	r2, [pc, #348]	; (8101e64 <face_recognition_configure_activations+0x1000>)
 8101d06:	6093      	str	r3, [r2, #8]
    conv2d_10_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101d08:	4b52      	ldr	r3, [pc, #328]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101d0a:	681b      	ldr	r3, [r3, #0]
 8101d0c:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101d10:	4a54      	ldr	r2, [pc, #336]	; (8101e64 <face_recognition_configure_activations+0x1000>)
 8101d12:	60d3      	str	r3, [r2, #12]
    conv2d_12_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101d14:	4b4f      	ldr	r3, [pc, #316]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101d16:	681b      	ldr	r3, [r3, #0]
 8101d18:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101d1c:	4a52      	ldr	r2, [pc, #328]	; (8101e68 <face_recognition_configure_activations+0x1004>)
 8101d1e:	6093      	str	r3, [r2, #8]
    conv2d_12_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101d20:	4b4c      	ldr	r3, [pc, #304]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101d22:	681b      	ldr	r3, [r3, #0]
 8101d24:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101d28:	4a4f      	ldr	r2, [pc, #316]	; (8101e68 <face_recognition_configure_activations+0x1004>)
 8101d2a:	60d3      	str	r3, [r2, #12]
    conv2d_16_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101d2c:	4b49      	ldr	r3, [pc, #292]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101d2e:	681b      	ldr	r3, [r3, #0]
 8101d30:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101d34:	4a4d      	ldr	r2, [pc, #308]	; (8101e6c <face_recognition_configure_activations+0x1008>)
 8101d36:	6093      	str	r3, [r2, #8]
    conv2d_16_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101d38:	4b46      	ldr	r3, [pc, #280]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101d3a:	681b      	ldr	r3, [r3, #0]
 8101d3c:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101d40:	4a4a      	ldr	r2, [pc, #296]	; (8101e6c <face_recognition_configure_activations+0x1008>)
 8101d42:	60d3      	str	r3, [r2, #12]
    conv2d_18_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101d44:	4b43      	ldr	r3, [pc, #268]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101d46:	681b      	ldr	r3, [r3, #0]
 8101d48:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101d4c:	4a48      	ldr	r2, [pc, #288]	; (8101e70 <face_recognition_configure_activations+0x100c>)
 8101d4e:	6093      	str	r3, [r2, #8]
    conv2d_18_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101d50:	4b40      	ldr	r3, [pc, #256]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101d52:	681b      	ldr	r3, [r3, #0]
 8101d54:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101d58:	4a45      	ldr	r2, [pc, #276]	; (8101e70 <face_recognition_configure_activations+0x100c>)
 8101d5a:	60d3      	str	r3, [r2, #12]
    conv2d_20_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101d5c:	4b3d      	ldr	r3, [pc, #244]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101d5e:	681b      	ldr	r3, [r3, #0]
 8101d60:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101d64:	4a43      	ldr	r2, [pc, #268]	; (8101e74 <face_recognition_configure_activations+0x1010>)
 8101d66:	6093      	str	r3, [r2, #8]
    conv2d_20_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101d68:	4b3a      	ldr	r3, [pc, #232]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101d6a:	681b      	ldr	r3, [r3, #0]
 8101d6c:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101d70:	4a40      	ldr	r2, [pc, #256]	; (8101e74 <face_recognition_configure_activations+0x1010>)
 8101d72:	60d3      	str	r3, [r2, #12]
    conv2d_22_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101d74:	4b37      	ldr	r3, [pc, #220]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101d76:	681b      	ldr	r3, [r3, #0]
 8101d78:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101d7c:	4a3e      	ldr	r2, [pc, #248]	; (8101e78 <face_recognition_configure_activations+0x1014>)
 8101d7e:	6093      	str	r3, [r2, #8]
    conv2d_22_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101d80:	4b34      	ldr	r3, [pc, #208]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101d82:	681b      	ldr	r3, [r3, #0]
 8101d84:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101d88:	4a3b      	ldr	r2, [pc, #236]	; (8101e78 <face_recognition_configure_activations+0x1014>)
 8101d8a:	60d3      	str	r3, [r2, #12]
    conv2d_24_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101d8c:	4b31      	ldr	r3, [pc, #196]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101d8e:	681b      	ldr	r3, [r3, #0]
 8101d90:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101d94:	4a39      	ldr	r2, [pc, #228]	; (8101e7c <face_recognition_configure_activations+0x1018>)
 8101d96:	6093      	str	r3, [r2, #8]
    conv2d_24_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101d98:	4b2e      	ldr	r3, [pc, #184]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101d9a:	681b      	ldr	r3, [r3, #0]
 8101d9c:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101da0:	4a36      	ldr	r2, [pc, #216]	; (8101e7c <face_recognition_configure_activations+0x1018>)
 8101da2:	60d3      	str	r3, [r2, #12]
    conv2d_30_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101da4:	4b2b      	ldr	r3, [pc, #172]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101da6:	681b      	ldr	r3, [r3, #0]
 8101da8:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101dac:	4a34      	ldr	r2, [pc, #208]	; (8101e80 <face_recognition_configure_activations+0x101c>)
 8101dae:	6093      	str	r3, [r2, #8]
    conv2d_30_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101db0:	4b28      	ldr	r3, [pc, #160]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101db2:	681b      	ldr	r3, [r3, #0]
 8101db4:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101db8:	4a31      	ldr	r2, [pc, #196]	; (8101e80 <face_recognition_configure_activations+0x101c>)
 8101dba:	60d3      	str	r3, [r2, #12]
    conv2d_34_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101dbc:	4b25      	ldr	r3, [pc, #148]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101dbe:	681b      	ldr	r3, [r3, #0]
 8101dc0:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101dc4:	4a2f      	ldr	r2, [pc, #188]	; (8101e84 <face_recognition_configure_activations+0x1020>)
 8101dc6:	6093      	str	r3, [r2, #8]
    conv2d_34_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101dc8:	4b22      	ldr	r3, [pc, #136]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101dca:	681b      	ldr	r3, [r3, #0]
 8101dcc:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101dd0:	4a2c      	ldr	r2, [pc, #176]	; (8101e84 <face_recognition_configure_activations+0x1020>)
 8101dd2:	60d3      	str	r3, [r2, #12]
    conv2d_38_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101dd4:	4b1f      	ldr	r3, [pc, #124]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101dd6:	681b      	ldr	r3, [r3, #0]
 8101dd8:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101ddc:	4a2a      	ldr	r2, [pc, #168]	; (8101e88 <face_recognition_configure_activations+0x1024>)
 8101dde:	6093      	str	r3, [r2, #8]
    conv2d_38_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101de0:	4b1c      	ldr	r3, [pc, #112]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101de2:	681b      	ldr	r3, [r3, #0]
 8101de4:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101de8:	4a27      	ldr	r2, [pc, #156]	; (8101e88 <face_recognition_configure_activations+0x1024>)
 8101dea:	60d3      	str	r3, [r2, #12]
    conv2d_42_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 229676);
 8101dec:	4b19      	ldr	r3, [pc, #100]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101dee:	681b      	ldr	r3, [r3, #0]
 8101df0:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101df4:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 8101df8:	4a24      	ldr	r2, [pc, #144]	; (8101e8c <face_recognition_configure_activations+0x1028>)
 8101dfa:	6093      	str	r3, [r2, #8]
    conv2d_42_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 229676);
 8101dfc:	4b15      	ldr	r3, [pc, #84]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101dfe:	681b      	ldr	r3, [r3, #0]
 8101e00:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101e04:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 8101e08:	4a20      	ldr	r2, [pc, #128]	; (8101e8c <face_recognition_configure_activations+0x1028>)
 8101e0a:	60d3      	str	r3, [r2, #12]
    conv2d_45_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101e0c:	4b11      	ldr	r3, [pc, #68]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101e0e:	681b      	ldr	r3, [r3, #0]
 8101e10:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101e14:	4a1e      	ldr	r2, [pc, #120]	; (8101e90 <face_recognition_configure_activations+0x102c>)
 8101e16:	6093      	str	r3, [r2, #8]
    conv2d_45_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101e18:	4b0e      	ldr	r3, [pc, #56]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101e1a:	681b      	ldr	r3, [r3, #0]
 8101e1c:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101e20:	4a1b      	ldr	r2, [pc, #108]	; (8101e90 <face_recognition_configure_activations+0x102c>)
 8101e22:	60d3      	str	r3, [r2, #12]
    conv2d_49_scratch0_array.data = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101e24:	4b0b      	ldr	r3, [pc, #44]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101e26:	681b      	ldr	r3, [r3, #0]
 8101e28:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101e2c:	4a19      	ldr	r2, [pc, #100]	; (8101e94 <face_recognition_configure_activations+0x1030>)
 8101e2e:	6093      	str	r3, [r2, #8]
    conv2d_49_scratch0_array.data_start = AI_PTR(g_face_recognition_activations_map[0] + 229376);
 8101e30:	4b08      	ldr	r3, [pc, #32]	; (8101e54 <face_recognition_configure_activations+0xff0>)
 8101e32:	681b      	ldr	r3, [r3, #0]
 8101e34:	f503 3360 	add.w	r3, r3, #229376	; 0x38000
 8101e38:	4a16      	ldr	r2, [pc, #88]	; (8101e94 <face_recognition_configure_activations+0x1030>)
 8101e3a:	60d3      	str	r3, [r2, #12]
    return true;
 8101e3c:	2301      	movs	r3, #1
 8101e3e:	e005      	b.n	8101e4c <face_recognition_configure_activations+0xfe8>
  }
  AI_ERROR_TRAP(net_ctx, INIT_FAILED, NETWORK_ACTIVATIONS);
 8101e40:	2213      	movs	r2, #19
 8101e42:	2130      	movs	r1, #48	; 0x30
 8101e44:	6878      	ldr	r0, [r7, #4]
 8101e46:	f002 ff71 	bl	8104d2c <ai_platform_network_set_error>
  return false;
 8101e4a:	2300      	movs	r3, #0
}
 8101e4c:	4618      	mov	r0, r3
 8101e4e:	3708      	adds	r7, #8
 8101e50:	46bd      	mov	sp, r7
 8101e52:	bd80      	pop	{r7, pc}
 8101e54:	1003f910 	.word	0x1003f910
 8101e58:	10000bf0 	.word	0x10000bf0
 8101e5c:	10000c20 	.word	0x10000c20
 8101e60:	10000c50 	.word	0x10000c50
 8101e64:	10000c70 	.word	0x10000c70
 8101e68:	10000c80 	.word	0x10000c80
 8101e6c:	10000cb0 	.word	0x10000cb0
 8101e70:	10000cd0 	.word	0x10000cd0
 8101e74:	10000ce0 	.word	0x10000ce0
 8101e78:	10000d00 	.word	0x10000d00
 8101e7c:	10000d10 	.word	0x10000d10
 8101e80:	10000d60 	.word	0x10000d60
 8101e84:	10000d90 	.word	0x10000d90
 8101e88:	10000dc0 	.word	0x10000dc0
 8101e8c:	10000df0 	.word	0x10000df0
 8101e90:	10000e20 	.word	0x10000e20
 8101e94:	10000e50 	.word	0x10000e50

08101e98 <face_recognition_configure_weights>:

/******************************************************************************/
AI_DECLARE_STATIC
ai_bool face_recognition_configure_weights(
  ai_network* net_ctx, const ai_network_params* params)
{
 8101e98:	b580      	push	{r7, lr}
 8101e9a:	b082      	sub	sp, #8
 8101e9c:	af00      	add	r7, sp, #0
 8101e9e:	6078      	str	r0, [r7, #4]
 8101ea0:	6039      	str	r1, [r7, #0]
  AI_ASSERT(net_ctx)

  if (ai_platform_get_weights_map(g_face_recognition_weights_map, 1, params)) {
 8101ea2:	683a      	ldr	r2, [r7, #0]
 8101ea4:	2101      	movs	r1, #1
 8101ea6:	4898      	ldr	r0, [pc, #608]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101ea8:	f002 fe6a 	bl	8104b80 <ai_platform_get_weights_map>
 8101eac:	4603      	mov	r3, r0
 8101eae:	2b00      	cmp	r3, #0
 8101eb0:	f001 8120 	beq.w	81030f4 <face_recognition_configure_weights+0x125c>
    /* Updating weights (byte) offsets */
    
    conv2d_1_weights_array.format |= AI_FMT_FLAG_CONST;
 8101eb4:	4b95      	ldr	r3, [pc, #596]	; (810210c <face_recognition_configure_weights+0x274>)
 8101eb6:	681b      	ldr	r3, [r3, #0]
 8101eb8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8101ebc:	4a93      	ldr	r2, [pc, #588]	; (810210c <face_recognition_configure_weights+0x274>)
 8101ebe:	6013      	str	r3, [r2, #0]
    conv2d_1_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 0);
 8101ec0:	4b91      	ldr	r3, [pc, #580]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101ec2:	681b      	ldr	r3, [r3, #0]
 8101ec4:	4a91      	ldr	r2, [pc, #580]	; (810210c <face_recognition_configure_weights+0x274>)
 8101ec6:	6093      	str	r3, [r2, #8]
    conv2d_1_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 0);
 8101ec8:	4b8f      	ldr	r3, [pc, #572]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101eca:	681b      	ldr	r3, [r3, #0]
 8101ecc:	4a8f      	ldr	r2, [pc, #572]	; (810210c <face_recognition_configure_weights+0x274>)
 8101ece:	60d3      	str	r3, [r2, #12]
    conv2d_1_bias_array.format |= AI_FMT_FLAG_CONST;
 8101ed0:	4b8f      	ldr	r3, [pc, #572]	; (8102110 <face_recognition_configure_weights+0x278>)
 8101ed2:	681b      	ldr	r3, [r3, #0]
 8101ed4:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8101ed8:	4a8d      	ldr	r2, [pc, #564]	; (8102110 <face_recognition_configure_weights+0x278>)
 8101eda:	6013      	str	r3, [r2, #0]
    conv2d_1_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 432);
 8101edc:	4b8a      	ldr	r3, [pc, #552]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101ede:	681b      	ldr	r3, [r3, #0]
 8101ee0:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 8101ee4:	4a8a      	ldr	r2, [pc, #552]	; (8102110 <face_recognition_configure_weights+0x278>)
 8101ee6:	6093      	str	r3, [r2, #8]
    conv2d_1_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 432);
 8101ee8:	4b87      	ldr	r3, [pc, #540]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101eea:	681b      	ldr	r3, [r3, #0]
 8101eec:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 8101ef0:	4a87      	ldr	r2, [pc, #540]	; (8102110 <face_recognition_configure_weights+0x278>)
 8101ef2:	60d3      	str	r3, [r2, #12]
    conv2d_2_weights_array.format |= AI_FMT_FLAG_CONST;
 8101ef4:	4b87      	ldr	r3, [pc, #540]	; (8102114 <face_recognition_configure_weights+0x27c>)
 8101ef6:	681b      	ldr	r3, [r3, #0]
 8101ef8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8101efc:	4a85      	ldr	r2, [pc, #532]	; (8102114 <face_recognition_configure_weights+0x27c>)
 8101efe:	6013      	str	r3, [r2, #0]
    conv2d_2_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 496);
 8101f00:	4b81      	ldr	r3, [pc, #516]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101f02:	681b      	ldr	r3, [r3, #0]
 8101f04:	f503 73f8 	add.w	r3, r3, #496	; 0x1f0
 8101f08:	4a82      	ldr	r2, [pc, #520]	; (8102114 <face_recognition_configure_weights+0x27c>)
 8101f0a:	6093      	str	r3, [r2, #8]
    conv2d_2_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 496);
 8101f0c:	4b7e      	ldr	r3, [pc, #504]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101f0e:	681b      	ldr	r3, [r3, #0]
 8101f10:	f503 73f8 	add.w	r3, r3, #496	; 0x1f0
 8101f14:	4a7f      	ldr	r2, [pc, #508]	; (8102114 <face_recognition_configure_weights+0x27c>)
 8101f16:	60d3      	str	r3, [r2, #12]
    conv2d_2_bias_array.format |= AI_FMT_FLAG_CONST;
 8101f18:	4b7f      	ldr	r3, [pc, #508]	; (8102118 <face_recognition_configure_weights+0x280>)
 8101f1a:	681b      	ldr	r3, [r3, #0]
 8101f1c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8101f20:	4a7d      	ldr	r2, [pc, #500]	; (8102118 <face_recognition_configure_weights+0x280>)
 8101f22:	6013      	str	r3, [r2, #0]
    conv2d_2_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 640);
 8101f24:	4b78      	ldr	r3, [pc, #480]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101f26:	681b      	ldr	r3, [r3, #0]
 8101f28:	f503 7320 	add.w	r3, r3, #640	; 0x280
 8101f2c:	4a7a      	ldr	r2, [pc, #488]	; (8102118 <face_recognition_configure_weights+0x280>)
 8101f2e:	6093      	str	r3, [r2, #8]
    conv2d_2_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 640);
 8101f30:	4b75      	ldr	r3, [pc, #468]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101f32:	681b      	ldr	r3, [r3, #0]
 8101f34:	f503 7320 	add.w	r3, r3, #640	; 0x280
 8101f38:	4a77      	ldr	r2, [pc, #476]	; (8102118 <face_recognition_configure_weights+0x280>)
 8101f3a:	60d3      	str	r3, [r2, #12]
    conv2d_3_weights_array.format |= AI_FMT_FLAG_CONST;
 8101f3c:	4b77      	ldr	r3, [pc, #476]	; (810211c <face_recognition_configure_weights+0x284>)
 8101f3e:	681b      	ldr	r3, [r3, #0]
 8101f40:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8101f44:	4a75      	ldr	r2, [pc, #468]	; (810211c <face_recognition_configure_weights+0x284>)
 8101f46:	6013      	str	r3, [r2, #0]
    conv2d_3_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 704);
 8101f48:	4b6f      	ldr	r3, [pc, #444]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101f4a:	681b      	ldr	r3, [r3, #0]
 8101f4c:	f503 7330 	add.w	r3, r3, #704	; 0x2c0
 8101f50:	4a72      	ldr	r2, [pc, #456]	; (810211c <face_recognition_configure_weights+0x284>)
 8101f52:	6093      	str	r3, [r2, #8]
    conv2d_3_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 704);
 8101f54:	4b6c      	ldr	r3, [pc, #432]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101f56:	681b      	ldr	r3, [r3, #0]
 8101f58:	f503 7330 	add.w	r3, r3, #704	; 0x2c0
 8101f5c:	4a6f      	ldr	r2, [pc, #444]	; (810211c <face_recognition_configure_weights+0x284>)
 8101f5e:	60d3      	str	r3, [r2, #12]
    conv2d_3_bias_array.format |= AI_FMT_FLAG_CONST;
 8101f60:	4b6f      	ldr	r3, [pc, #444]	; (8102120 <face_recognition_configure_weights+0x288>)
 8101f62:	681b      	ldr	r3, [r3, #0]
 8101f64:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8101f68:	4a6d      	ldr	r2, [pc, #436]	; (8102120 <face_recognition_configure_weights+0x288>)
 8101f6a:	6013      	str	r3, [r2, #0]
    conv2d_3_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 832);
 8101f6c:	4b66      	ldr	r3, [pc, #408]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101f6e:	681b      	ldr	r3, [r3, #0]
 8101f70:	f503 7350 	add.w	r3, r3, #832	; 0x340
 8101f74:	4a6a      	ldr	r2, [pc, #424]	; (8102120 <face_recognition_configure_weights+0x288>)
 8101f76:	6093      	str	r3, [r2, #8]
    conv2d_3_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 832);
 8101f78:	4b63      	ldr	r3, [pc, #396]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101f7a:	681b      	ldr	r3, [r3, #0]
 8101f7c:	f503 7350 	add.w	r3, r3, #832	; 0x340
 8101f80:	4a67      	ldr	r2, [pc, #412]	; (8102120 <face_recognition_configure_weights+0x288>)
 8101f82:	60d3      	str	r3, [r2, #12]
    conv2d_4_weights_array.format |= AI_FMT_FLAG_CONST;
 8101f84:	4b67      	ldr	r3, [pc, #412]	; (8102124 <face_recognition_configure_weights+0x28c>)
 8101f86:	681b      	ldr	r3, [r3, #0]
 8101f88:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8101f8c:	4a65      	ldr	r2, [pc, #404]	; (8102124 <face_recognition_configure_weights+0x28c>)
 8101f8e:	6013      	str	r3, [r2, #0]
    conv2d_4_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 864);
 8101f90:	4b5d      	ldr	r3, [pc, #372]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101f92:	681b      	ldr	r3, [r3, #0]
 8101f94:	f503 7358 	add.w	r3, r3, #864	; 0x360
 8101f98:	4a62      	ldr	r2, [pc, #392]	; (8102124 <face_recognition_configure_weights+0x28c>)
 8101f9a:	6093      	str	r3, [r2, #8]
    conv2d_4_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 864);
 8101f9c:	4b5a      	ldr	r3, [pc, #360]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101f9e:	681b      	ldr	r3, [r3, #0]
 8101fa0:	f503 7358 	add.w	r3, r3, #864	; 0x360
 8101fa4:	4a5f      	ldr	r2, [pc, #380]	; (8102124 <face_recognition_configure_weights+0x28c>)
 8101fa6:	60d3      	str	r3, [r2, #12]
    conv2d_4_bias_array.format |= AI_FMT_FLAG_CONST;
 8101fa8:	4b5f      	ldr	r3, [pc, #380]	; (8102128 <face_recognition_configure_weights+0x290>)
 8101faa:	681b      	ldr	r3, [r3, #0]
 8101fac:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8101fb0:	4a5d      	ldr	r2, [pc, #372]	; (8102128 <face_recognition_configure_weights+0x290>)
 8101fb2:	6013      	str	r3, [r2, #0]
    conv2d_4_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 1248);
 8101fb4:	4b54      	ldr	r3, [pc, #336]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101fb6:	681b      	ldr	r3, [r3, #0]
 8101fb8:	f503 639c 	add.w	r3, r3, #1248	; 0x4e0
 8101fbc:	4a5a      	ldr	r2, [pc, #360]	; (8102128 <face_recognition_configure_weights+0x290>)
 8101fbe:	6093      	str	r3, [r2, #8]
    conv2d_4_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 1248);
 8101fc0:	4b51      	ldr	r3, [pc, #324]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101fc2:	681b      	ldr	r3, [r3, #0]
 8101fc4:	f503 639c 	add.w	r3, r3, #1248	; 0x4e0
 8101fc8:	4a57      	ldr	r2, [pc, #348]	; (8102128 <face_recognition_configure_weights+0x290>)
 8101fca:	60d3      	str	r3, [r2, #12]
    conv2d_6_weights_array.format |= AI_FMT_FLAG_CONST;
 8101fcc:	4b57      	ldr	r3, [pc, #348]	; (810212c <face_recognition_configure_weights+0x294>)
 8101fce:	681b      	ldr	r3, [r3, #0]
 8101fd0:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8101fd4:	4a55      	ldr	r2, [pc, #340]	; (810212c <face_recognition_configure_weights+0x294>)
 8101fd6:	6013      	str	r3, [r2, #0]
    conv2d_6_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 1440);
 8101fd8:	4b4b      	ldr	r3, [pc, #300]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101fda:	681b      	ldr	r3, [r3, #0]
 8101fdc:	f503 63b4 	add.w	r3, r3, #1440	; 0x5a0
 8101fe0:	4a52      	ldr	r2, [pc, #328]	; (810212c <face_recognition_configure_weights+0x294>)
 8101fe2:	6093      	str	r3, [r2, #8]
    conv2d_6_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 1440);
 8101fe4:	4b48      	ldr	r3, [pc, #288]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101fe6:	681b      	ldr	r3, [r3, #0]
 8101fe8:	f503 63b4 	add.w	r3, r3, #1440	; 0x5a0
 8101fec:	4a4f      	ldr	r2, [pc, #316]	; (810212c <face_recognition_configure_weights+0x294>)
 8101fee:	60d3      	str	r3, [r2, #12]
    conv2d_6_bias_array.format |= AI_FMT_FLAG_CONST;
 8101ff0:	4b4f      	ldr	r3, [pc, #316]	; (8102130 <face_recognition_configure_weights+0x298>)
 8101ff2:	681b      	ldr	r3, [r3, #0]
 8101ff4:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8101ff8:	4a4d      	ldr	r2, [pc, #308]	; (8102130 <face_recognition_configure_weights+0x298>)
 8101ffa:	6013      	str	r3, [r2, #0]
    conv2d_6_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 1872);
 8101ffc:	4b42      	ldr	r3, [pc, #264]	; (8102108 <face_recognition_configure_weights+0x270>)
 8101ffe:	681b      	ldr	r3, [r3, #0]
 8102000:	f503 63ea 	add.w	r3, r3, #1872	; 0x750
 8102004:	4a4a      	ldr	r2, [pc, #296]	; (8102130 <face_recognition_configure_weights+0x298>)
 8102006:	6093      	str	r3, [r2, #8]
    conv2d_6_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 1872);
 8102008:	4b3f      	ldr	r3, [pc, #252]	; (8102108 <face_recognition_configure_weights+0x270>)
 810200a:	681b      	ldr	r3, [r3, #0]
 810200c:	f503 63ea 	add.w	r3, r3, #1872	; 0x750
 8102010:	4a47      	ldr	r2, [pc, #284]	; (8102130 <face_recognition_configure_weights+0x298>)
 8102012:	60d3      	str	r3, [r2, #12]
    conv2d_7_weights_array.format |= AI_FMT_FLAG_CONST;
 8102014:	4b47      	ldr	r3, [pc, #284]	; (8102134 <face_recognition_configure_weights+0x29c>)
 8102016:	681b      	ldr	r3, [r3, #0]
 8102018:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 810201c:	4a45      	ldr	r2, [pc, #276]	; (8102134 <face_recognition_configure_weights+0x29c>)
 810201e:	6013      	str	r3, [r2, #0]
    conv2d_7_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 2064);
 8102020:	4b39      	ldr	r3, [pc, #228]	; (8102108 <face_recognition_configure_weights+0x270>)
 8102022:	681b      	ldr	r3, [r3, #0]
 8102024:	f503 6301 	add.w	r3, r3, #2064	; 0x810
 8102028:	4a42      	ldr	r2, [pc, #264]	; (8102134 <face_recognition_configure_weights+0x29c>)
 810202a:	6093      	str	r3, [r2, #8]
    conv2d_7_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 2064);
 810202c:	4b36      	ldr	r3, [pc, #216]	; (8102108 <face_recognition_configure_weights+0x270>)
 810202e:	681b      	ldr	r3, [r3, #0]
 8102030:	f503 6301 	add.w	r3, r3, #2064	; 0x810
 8102034:	4a3f      	ldr	r2, [pc, #252]	; (8102134 <face_recognition_configure_weights+0x29c>)
 8102036:	60d3      	str	r3, [r2, #12]
    conv2d_7_bias_array.format |= AI_FMT_FLAG_CONST;
 8102038:	4b3f      	ldr	r3, [pc, #252]	; (8102138 <face_recognition_configure_weights+0x2a0>)
 810203a:	681b      	ldr	r3, [r3, #0]
 810203c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102040:	4a3d      	ldr	r2, [pc, #244]	; (8102138 <face_recognition_configure_weights+0x2a0>)
 8102042:	6013      	str	r3, [r2, #0]
    conv2d_7_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 2448);
 8102044:	4b30      	ldr	r3, [pc, #192]	; (8102108 <face_recognition_configure_weights+0x270>)
 8102046:	681b      	ldr	r3, [r3, #0]
 8102048:	f503 6319 	add.w	r3, r3, #2448	; 0x990
 810204c:	4a3a      	ldr	r2, [pc, #232]	; (8102138 <face_recognition_configure_weights+0x2a0>)
 810204e:	6093      	str	r3, [r2, #8]
    conv2d_7_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 2448);
 8102050:	4b2d      	ldr	r3, [pc, #180]	; (8102108 <face_recognition_configure_weights+0x270>)
 8102052:	681b      	ldr	r3, [r3, #0]
 8102054:	f503 6319 	add.w	r3, r3, #2448	; 0x990
 8102058:	4a37      	ldr	r2, [pc, #220]	; (8102138 <face_recognition_configure_weights+0x2a0>)
 810205a:	60d3      	str	r3, [r2, #12]
    conv2d_8_weights_array.format |= AI_FMT_FLAG_CONST;
 810205c:	4b37      	ldr	r3, [pc, #220]	; (810213c <face_recognition_configure_weights+0x2a4>)
 810205e:	681b      	ldr	r3, [r3, #0]
 8102060:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102064:	4a35      	ldr	r2, [pc, #212]	; (810213c <face_recognition_configure_weights+0x2a4>)
 8102066:	6013      	str	r3, [r2, #0]
    conv2d_8_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 2480);
 8102068:	4b27      	ldr	r3, [pc, #156]	; (8102108 <face_recognition_configure_weights+0x270>)
 810206a:	681b      	ldr	r3, [r3, #0]
 810206c:	f503 631b 	add.w	r3, r3, #2480	; 0x9b0
 8102070:	4a32      	ldr	r2, [pc, #200]	; (810213c <face_recognition_configure_weights+0x2a4>)
 8102072:	6093      	str	r3, [r2, #8]
    conv2d_8_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 2480);
 8102074:	4b24      	ldr	r3, [pc, #144]	; (8102108 <face_recognition_configure_weights+0x270>)
 8102076:	681b      	ldr	r3, [r3, #0]
 8102078:	f503 631b 	add.w	r3, r3, #2480	; 0x9b0
 810207c:	4a2f      	ldr	r2, [pc, #188]	; (810213c <face_recognition_configure_weights+0x2a4>)
 810207e:	60d3      	str	r3, [r2, #12]
    conv2d_8_bias_array.format |= AI_FMT_FLAG_CONST;
 8102080:	4b2f      	ldr	r3, [pc, #188]	; (8102140 <face_recognition_configure_weights+0x2a8>)
 8102082:	681b      	ldr	r3, [r3, #0]
 8102084:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102088:	4a2d      	ldr	r2, [pc, #180]	; (8102140 <face_recognition_configure_weights+0x2a8>)
 810208a:	6013      	str	r3, [r2, #0]
    conv2d_8_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 2864);
 810208c:	4b1e      	ldr	r3, [pc, #120]	; (8102108 <face_recognition_configure_weights+0x270>)
 810208e:	681b      	ldr	r3, [r3, #0]
 8102090:	f503 6333 	add.w	r3, r3, #2864	; 0xb30
 8102094:	4a2a      	ldr	r2, [pc, #168]	; (8102140 <face_recognition_configure_weights+0x2a8>)
 8102096:	6093      	str	r3, [r2, #8]
    conv2d_8_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 2864);
 8102098:	4b1b      	ldr	r3, [pc, #108]	; (8102108 <face_recognition_configure_weights+0x270>)
 810209a:	681b      	ldr	r3, [r3, #0]
 810209c:	f503 6333 	add.w	r3, r3, #2864	; 0xb30
 81020a0:	4a27      	ldr	r2, [pc, #156]	; (8102140 <face_recognition_configure_weights+0x2a8>)
 81020a2:	60d3      	str	r3, [r2, #12]
    conv2d_9_weights_array.format |= AI_FMT_FLAG_CONST;
 81020a4:	4b27      	ldr	r3, [pc, #156]	; (8102144 <face_recognition_configure_weights+0x2ac>)
 81020a6:	681b      	ldr	r3, [r3, #0]
 81020a8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81020ac:	4a25      	ldr	r2, [pc, #148]	; (8102144 <face_recognition_configure_weights+0x2ac>)
 81020ae:	6013      	str	r3, [r2, #0]
    conv2d_9_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 3056);
 81020b0:	4b15      	ldr	r3, [pc, #84]	; (8102108 <face_recognition_configure_weights+0x270>)
 81020b2:	681b      	ldr	r3, [r3, #0]
 81020b4:	f503 633f 	add.w	r3, r3, #3056	; 0xbf0
 81020b8:	4a22      	ldr	r2, [pc, #136]	; (8102144 <face_recognition_configure_weights+0x2ac>)
 81020ba:	6093      	str	r3, [r2, #8]
    conv2d_9_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 3056);
 81020bc:	4b12      	ldr	r3, [pc, #72]	; (8102108 <face_recognition_configure_weights+0x270>)
 81020be:	681b      	ldr	r3, [r3, #0]
 81020c0:	f503 633f 	add.w	r3, r3, #3056	; 0xbf0
 81020c4:	4a1f      	ldr	r2, [pc, #124]	; (8102144 <face_recognition_configure_weights+0x2ac>)
 81020c6:	60d3      	str	r3, [r2, #12]
    conv2d_9_bias_array.format |= AI_FMT_FLAG_CONST;
 81020c8:	4b1f      	ldr	r3, [pc, #124]	; (8102148 <face_recognition_configure_weights+0x2b0>)
 81020ca:	681b      	ldr	r3, [r3, #0]
 81020cc:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81020d0:	4a1d      	ldr	r2, [pc, #116]	; (8102148 <face_recognition_configure_weights+0x2b0>)
 81020d2:	6013      	str	r3, [r2, #0]
    conv2d_9_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 3488);
 81020d4:	4b0c      	ldr	r3, [pc, #48]	; (8102108 <face_recognition_configure_weights+0x270>)
 81020d6:	681b      	ldr	r3, [r3, #0]
 81020d8:	f503 635a 	add.w	r3, r3, #3488	; 0xda0
 81020dc:	4a1a      	ldr	r2, [pc, #104]	; (8102148 <face_recognition_configure_weights+0x2b0>)
 81020de:	6093      	str	r3, [r2, #8]
    conv2d_9_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 3488);
 81020e0:	4b09      	ldr	r3, [pc, #36]	; (8102108 <face_recognition_configure_weights+0x270>)
 81020e2:	681b      	ldr	r3, [r3, #0]
 81020e4:	f503 635a 	add.w	r3, r3, #3488	; 0xda0
 81020e8:	4a17      	ldr	r2, [pc, #92]	; (8102148 <face_recognition_configure_weights+0x2b0>)
 81020ea:	60d3      	str	r3, [r2, #12]
    conv2d_10_weights_array.format |= AI_FMT_FLAG_CONST;
 81020ec:	4b17      	ldr	r3, [pc, #92]	; (810214c <face_recognition_configure_weights+0x2b4>)
 81020ee:	681b      	ldr	r3, [r3, #0]
 81020f0:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81020f4:	4a15      	ldr	r2, [pc, #84]	; (810214c <face_recognition_configure_weights+0x2b4>)
 81020f6:	6013      	str	r3, [r2, #0]
    conv2d_10_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 3680);
 81020f8:	4b03      	ldr	r3, [pc, #12]	; (8102108 <face_recognition_configure_weights+0x270>)
 81020fa:	681b      	ldr	r3, [r3, #0]
 81020fc:	f503 6366 	add.w	r3, r3, #3680	; 0xe60
 8102100:	4a12      	ldr	r2, [pc, #72]	; (810214c <face_recognition_configure_weights+0x2b4>)
 8102102:	6093      	str	r3, [r2, #8]
 8102104:	e024      	b.n	8102150 <face_recognition_configure_weights+0x2b8>
 8102106:	bf00      	nop
 8102108:	1003f914 	.word	0x1003f914
 810210c:	10000550 	.word	0x10000550
 8102110:	10000560 	.word	0x10000560
 8102114:	10000570 	.word	0x10000570
 8102118:	10000580 	.word	0x10000580
 810211c:	10000590 	.word	0x10000590
 8102120:	100005a0 	.word	0x100005a0
 8102124:	100005b0 	.word	0x100005b0
 8102128:	100005c0 	.word	0x100005c0
 810212c:	100005d0 	.word	0x100005d0
 8102130:	100005e0 	.word	0x100005e0
 8102134:	100005f0 	.word	0x100005f0
 8102138:	10000600 	.word	0x10000600
 810213c:	10000610 	.word	0x10000610
 8102140:	10000620 	.word	0x10000620
 8102144:	10000630 	.word	0x10000630
 8102148:	10000640 	.word	0x10000640
 810214c:	10000650 	.word	0x10000650
    conv2d_10_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 3680);
 8102150:	4b9c      	ldr	r3, [pc, #624]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 8102152:	681b      	ldr	r3, [r3, #0]
 8102154:	f503 6366 	add.w	r3, r3, #3680	; 0xe60
 8102158:	4a9b      	ldr	r2, [pc, #620]	; (81023c8 <face_recognition_configure_weights+0x530>)
 810215a:	60d3      	str	r3, [r2, #12]
    conv2d_10_bias_array.format |= AI_FMT_FLAG_CONST;
 810215c:	4b9b      	ldr	r3, [pc, #620]	; (81023cc <face_recognition_configure_weights+0x534>)
 810215e:	681b      	ldr	r3, [r3, #0]
 8102160:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102164:	4a99      	ldr	r2, [pc, #612]	; (81023cc <face_recognition_configure_weights+0x534>)
 8102166:	6013      	str	r3, [r2, #0]
    conv2d_10_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 4064);
 8102168:	4b96      	ldr	r3, [pc, #600]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 810216a:	681b      	ldr	r3, [r3, #0]
 810216c:	f503 637e 	add.w	r3, r3, #4064	; 0xfe0
 8102170:	4a96      	ldr	r2, [pc, #600]	; (81023cc <face_recognition_configure_weights+0x534>)
 8102172:	6093      	str	r3, [r2, #8]
    conv2d_10_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 4064);
 8102174:	4b93      	ldr	r3, [pc, #588]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 8102176:	681b      	ldr	r3, [r3, #0]
 8102178:	f503 637e 	add.w	r3, r3, #4064	; 0xfe0
 810217c:	4a93      	ldr	r2, [pc, #588]	; (81023cc <face_recognition_configure_weights+0x534>)
 810217e:	60d3      	str	r3, [r2, #12]
    conv2d_12_weights_array.format |= AI_FMT_FLAG_CONST;
 8102180:	4b93      	ldr	r3, [pc, #588]	; (81023d0 <face_recognition_configure_weights+0x538>)
 8102182:	681b      	ldr	r3, [r3, #0]
 8102184:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102188:	4a91      	ldr	r2, [pc, #580]	; (81023d0 <face_recognition_configure_weights+0x538>)
 810218a:	6013      	str	r3, [r2, #0]
    conv2d_12_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 4096);
 810218c:	4b8d      	ldr	r3, [pc, #564]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 810218e:	681b      	ldr	r3, [r3, #0]
 8102190:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8102194:	4a8e      	ldr	r2, [pc, #568]	; (81023d0 <face_recognition_configure_weights+0x538>)
 8102196:	6093      	str	r3, [r2, #8]
    conv2d_12_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 4096);
 8102198:	4b8a      	ldr	r3, [pc, #552]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 810219a:	681b      	ldr	r3, [r3, #0]
 810219c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 81021a0:	4a8b      	ldr	r2, [pc, #556]	; (81023d0 <face_recognition_configure_weights+0x538>)
 81021a2:	60d3      	str	r3, [r2, #12]
    conv2d_12_bias_array.format |= AI_FMT_FLAG_CONST;
 81021a4:	4b8b      	ldr	r3, [pc, #556]	; (81023d4 <face_recognition_configure_weights+0x53c>)
 81021a6:	681b      	ldr	r3, [r3, #0]
 81021a8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81021ac:	4a89      	ldr	r2, [pc, #548]	; (81023d4 <face_recognition_configure_weights+0x53c>)
 81021ae:	6013      	str	r3, [r2, #0]
    conv2d_12_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 4480);
 81021b0:	4b84      	ldr	r3, [pc, #528]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 81021b2:	681b      	ldr	r3, [r3, #0]
 81021b4:	f503 538c 	add.w	r3, r3, #4480	; 0x1180
 81021b8:	4a86      	ldr	r2, [pc, #536]	; (81023d4 <face_recognition_configure_weights+0x53c>)
 81021ba:	6093      	str	r3, [r2, #8]
    conv2d_12_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 4480);
 81021bc:	4b81      	ldr	r3, [pc, #516]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 81021be:	681b      	ldr	r3, [r3, #0]
 81021c0:	f503 538c 	add.w	r3, r3, #4480	; 0x1180
 81021c4:	4a83      	ldr	r2, [pc, #524]	; (81023d4 <face_recognition_configure_weights+0x53c>)
 81021c6:	60d3      	str	r3, [r2, #12]
    conv2d_14_weights_array.format |= AI_FMT_FLAG_CONST;
 81021c8:	4b83      	ldr	r3, [pc, #524]	; (81023d8 <face_recognition_configure_weights+0x540>)
 81021ca:	681b      	ldr	r3, [r3, #0]
 81021cc:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81021d0:	4a81      	ldr	r2, [pc, #516]	; (81023d8 <face_recognition_configure_weights+0x540>)
 81021d2:	6013      	str	r3, [r2, #0]
    conv2d_14_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 4672);
 81021d4:	4b7b      	ldr	r3, [pc, #492]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 81021d6:	681b      	ldr	r3, [r3, #0]
 81021d8:	f503 5392 	add.w	r3, r3, #4672	; 0x1240
 81021dc:	4a7e      	ldr	r2, [pc, #504]	; (81023d8 <face_recognition_configure_weights+0x540>)
 81021de:	6093      	str	r3, [r2, #8]
    conv2d_14_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 4672);
 81021e0:	4b78      	ldr	r3, [pc, #480]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 81021e2:	681b      	ldr	r3, [r3, #0]
 81021e4:	f503 5392 	add.w	r3, r3, #4672	; 0x1240
 81021e8:	4a7b      	ldr	r2, [pc, #492]	; (81023d8 <face_recognition_configure_weights+0x540>)
 81021ea:	60d3      	str	r3, [r2, #12]
    conv2d_14_bias_array.format |= AI_FMT_FLAG_CONST;
 81021ec:	4b7b      	ldr	r3, [pc, #492]	; (81023dc <face_recognition_configure_weights+0x544>)
 81021ee:	681b      	ldr	r3, [r3, #0]
 81021f0:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81021f4:	4a79      	ldr	r2, [pc, #484]	; (81023dc <face_recognition_configure_weights+0x544>)
 81021f6:	6013      	str	r3, [r2, #0]
    conv2d_14_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 5104);
 81021f8:	4b72      	ldr	r3, [pc, #456]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 81021fa:	681b      	ldr	r3, [r3, #0]
 81021fc:	f503 539f 	add.w	r3, r3, #5088	; 0x13e0
 8102200:	3310      	adds	r3, #16
 8102202:	4a76      	ldr	r2, [pc, #472]	; (81023dc <face_recognition_configure_weights+0x544>)
 8102204:	6093      	str	r3, [r2, #8]
    conv2d_14_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 5104);
 8102206:	4b6f      	ldr	r3, [pc, #444]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 8102208:	681b      	ldr	r3, [r3, #0]
 810220a:	f503 539f 	add.w	r3, r3, #5088	; 0x13e0
 810220e:	3310      	adds	r3, #16
 8102210:	4a72      	ldr	r2, [pc, #456]	; (81023dc <face_recognition_configure_weights+0x544>)
 8102212:	60d3      	str	r3, [r2, #12]
    conv2d_15_weights_array.format |= AI_FMT_FLAG_CONST;
 8102214:	4b72      	ldr	r3, [pc, #456]	; (81023e0 <face_recognition_configure_weights+0x548>)
 8102216:	681b      	ldr	r3, [r3, #0]
 8102218:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 810221c:	4a70      	ldr	r2, [pc, #448]	; (81023e0 <face_recognition_configure_weights+0x548>)
 810221e:	6013      	str	r3, [r2, #0]
    conv2d_15_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 5296);
 8102220:	4b68      	ldr	r3, [pc, #416]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 8102222:	681b      	ldr	r3, [r3, #0]
 8102224:	f503 53a5 	add.w	r3, r3, #5280	; 0x14a0
 8102228:	3310      	adds	r3, #16
 810222a:	4a6d      	ldr	r2, [pc, #436]	; (81023e0 <face_recognition_configure_weights+0x548>)
 810222c:	6093      	str	r3, [r2, #8]
    conv2d_15_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 5296);
 810222e:	4b65      	ldr	r3, [pc, #404]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 8102230:	681b      	ldr	r3, [r3, #0]
 8102232:	f503 53a5 	add.w	r3, r3, #5280	; 0x14a0
 8102236:	3310      	adds	r3, #16
 8102238:	4a69      	ldr	r2, [pc, #420]	; (81023e0 <face_recognition_configure_weights+0x548>)
 810223a:	60d3      	str	r3, [r2, #12]
    conv2d_15_bias_array.format |= AI_FMT_FLAG_CONST;
 810223c:	4b69      	ldr	r3, [pc, #420]	; (81023e4 <face_recognition_configure_weights+0x54c>)
 810223e:	681b      	ldr	r3, [r3, #0]
 8102240:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102244:	4a67      	ldr	r2, [pc, #412]	; (81023e4 <face_recognition_configure_weights+0x54c>)
 8102246:	6013      	str	r3, [r2, #0]
    conv2d_15_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 6064);
 8102248:	4b5e      	ldr	r3, [pc, #376]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 810224a:	681b      	ldr	r3, [r3, #0]
 810224c:	f503 53bd 	add.w	r3, r3, #6048	; 0x17a0
 8102250:	3310      	adds	r3, #16
 8102252:	4a64      	ldr	r2, [pc, #400]	; (81023e4 <face_recognition_configure_weights+0x54c>)
 8102254:	6093      	str	r3, [r2, #8]
    conv2d_15_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 6064);
 8102256:	4b5b      	ldr	r3, [pc, #364]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 8102258:	681b      	ldr	r3, [r3, #0]
 810225a:	f503 53bd 	add.w	r3, r3, #6048	; 0x17a0
 810225e:	3310      	adds	r3, #16
 8102260:	4a60      	ldr	r2, [pc, #384]	; (81023e4 <face_recognition_configure_weights+0x54c>)
 8102262:	60d3      	str	r3, [r2, #12]
    conv2d_16_weights_array.format |= AI_FMT_FLAG_CONST;
 8102264:	4b60      	ldr	r3, [pc, #384]	; (81023e8 <face_recognition_configure_weights+0x550>)
 8102266:	681b      	ldr	r3, [r3, #0]
 8102268:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 810226c:	4a5e      	ldr	r2, [pc, #376]	; (81023e8 <face_recognition_configure_weights+0x550>)
 810226e:	6013      	str	r3, [r2, #0]
    conv2d_16_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 6128);
 8102270:	4b54      	ldr	r3, [pc, #336]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 8102272:	681b      	ldr	r3, [r3, #0]
 8102274:	f503 53bf 	add.w	r3, r3, #6112	; 0x17e0
 8102278:	3310      	adds	r3, #16
 810227a:	4a5b      	ldr	r2, [pc, #364]	; (81023e8 <face_recognition_configure_weights+0x550>)
 810227c:	6093      	str	r3, [r2, #8]
    conv2d_16_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 6128);
 810227e:	4b51      	ldr	r3, [pc, #324]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 8102280:	681b      	ldr	r3, [r3, #0]
 8102282:	f503 53bf 	add.w	r3, r3, #6112	; 0x17e0
 8102286:	3310      	adds	r3, #16
 8102288:	4a57      	ldr	r2, [pc, #348]	; (81023e8 <face_recognition_configure_weights+0x550>)
 810228a:	60d3      	str	r3, [r2, #12]
    conv2d_16_bias_array.format |= AI_FMT_FLAG_CONST;
 810228c:	4b57      	ldr	r3, [pc, #348]	; (81023ec <face_recognition_configure_weights+0x554>)
 810228e:	681b      	ldr	r3, [r3, #0]
 8102290:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102294:	4a55      	ldr	r2, [pc, #340]	; (81023ec <face_recognition_configure_weights+0x554>)
 8102296:	6013      	str	r3, [r2, #0]
    conv2d_16_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 7664);
 8102298:	4b4a      	ldr	r3, [pc, #296]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 810229a:	681b      	ldr	r3, [r3, #0]
 810229c:	f503 53ef 	add.w	r3, r3, #7648	; 0x1de0
 81022a0:	3310      	adds	r3, #16
 81022a2:	4a52      	ldr	r2, [pc, #328]	; (81023ec <face_recognition_configure_weights+0x554>)
 81022a4:	6093      	str	r3, [r2, #8]
    conv2d_16_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 7664);
 81022a6:	4b47      	ldr	r3, [pc, #284]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 81022a8:	681b      	ldr	r3, [r3, #0]
 81022aa:	f503 53ef 	add.w	r3, r3, #7648	; 0x1de0
 81022ae:	3310      	adds	r3, #16
 81022b0:	4a4e      	ldr	r2, [pc, #312]	; (81023ec <face_recognition_configure_weights+0x554>)
 81022b2:	60d3      	str	r3, [r2, #12]
    conv2d_17_weights_array.format |= AI_FMT_FLAG_CONST;
 81022b4:	4b4e      	ldr	r3, [pc, #312]	; (81023f0 <face_recognition_configure_weights+0x558>)
 81022b6:	681b      	ldr	r3, [r3, #0]
 81022b8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81022bc:	4a4c      	ldr	r2, [pc, #304]	; (81023f0 <face_recognition_configure_weights+0x558>)
 81022be:	6013      	str	r3, [r2, #0]
    conv2d_17_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 8048);
 81022c0:	4b40      	ldr	r3, [pc, #256]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 81022c2:	681b      	ldr	r3, [r3, #0]
 81022c4:	f503 53fb 	add.w	r3, r3, #8032	; 0x1f60
 81022c8:	3310      	adds	r3, #16
 81022ca:	4a49      	ldr	r2, [pc, #292]	; (81023f0 <face_recognition_configure_weights+0x558>)
 81022cc:	6093      	str	r3, [r2, #8]
    conv2d_17_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 8048);
 81022ce:	4b3d      	ldr	r3, [pc, #244]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 81022d0:	681b      	ldr	r3, [r3, #0]
 81022d2:	f503 53fb 	add.w	r3, r3, #8032	; 0x1f60
 81022d6:	3310      	adds	r3, #16
 81022d8:	4a45      	ldr	r2, [pc, #276]	; (81023f0 <face_recognition_configure_weights+0x558>)
 81022da:	60d3      	str	r3, [r2, #12]
    conv2d_17_bias_array.format |= AI_FMT_FLAG_CONST;
 81022dc:	4b45      	ldr	r3, [pc, #276]	; (81023f4 <face_recognition_configure_weights+0x55c>)
 81022de:	681b      	ldr	r3, [r3, #0]
 81022e0:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81022e4:	4a43      	ldr	r2, [pc, #268]	; (81023f4 <face_recognition_configure_weights+0x55c>)
 81022e6:	6013      	str	r3, [r2, #0]
    conv2d_17_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 8912);
 81022e8:	4b36      	ldr	r3, [pc, #216]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 81022ea:	681b      	ldr	r3, [r3, #0]
 81022ec:	f503 530b 	add.w	r3, r3, #8896	; 0x22c0
 81022f0:	3310      	adds	r3, #16
 81022f2:	4a40      	ldr	r2, [pc, #256]	; (81023f4 <face_recognition_configure_weights+0x55c>)
 81022f4:	6093      	str	r3, [r2, #8]
    conv2d_17_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 8912);
 81022f6:	4b33      	ldr	r3, [pc, #204]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 81022f8:	681b      	ldr	r3, [r3, #0]
 81022fa:	f503 530b 	add.w	r3, r3, #8896	; 0x22c0
 81022fe:	3310      	adds	r3, #16
 8102300:	4a3c      	ldr	r2, [pc, #240]	; (81023f4 <face_recognition_configure_weights+0x55c>)
 8102302:	60d3      	str	r3, [r2, #12]
    conv2d_18_weights_array.format |= AI_FMT_FLAG_CONST;
 8102304:	4b3c      	ldr	r3, [pc, #240]	; (81023f8 <face_recognition_configure_weights+0x560>)
 8102306:	681b      	ldr	r3, [r3, #0]
 8102308:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 810230c:	4a3a      	ldr	r2, [pc, #232]	; (81023f8 <face_recognition_configure_weights+0x560>)
 810230e:	6013      	str	r3, [r2, #0]
    conv2d_18_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 9296);
 8102310:	4b2c      	ldr	r3, [pc, #176]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 8102312:	681b      	ldr	r3, [r3, #0]
 8102314:	f503 5311 	add.w	r3, r3, #9280	; 0x2440
 8102318:	3310      	adds	r3, #16
 810231a:	4a37      	ldr	r2, [pc, #220]	; (81023f8 <face_recognition_configure_weights+0x560>)
 810231c:	6093      	str	r3, [r2, #8]
    conv2d_18_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 9296);
 810231e:	4b29      	ldr	r3, [pc, #164]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 8102320:	681b      	ldr	r3, [r3, #0]
 8102322:	f503 5311 	add.w	r3, r3, #9280	; 0x2440
 8102326:	3310      	adds	r3, #16
 8102328:	4a33      	ldr	r2, [pc, #204]	; (81023f8 <face_recognition_configure_weights+0x560>)
 810232a:	60d3      	str	r3, [r2, #12]
    conv2d_18_bias_array.format |= AI_FMT_FLAG_CONST;
 810232c:	4b33      	ldr	r3, [pc, #204]	; (81023fc <face_recognition_configure_weights+0x564>)
 810232e:	681b      	ldr	r3, [r3, #0]
 8102330:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102334:	4a31      	ldr	r2, [pc, #196]	; (81023fc <face_recognition_configure_weights+0x564>)
 8102336:	6013      	str	r3, [r2, #0]
    conv2d_18_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 10832);
 8102338:	4b22      	ldr	r3, [pc, #136]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 810233a:	681b      	ldr	r3, [r3, #0]
 810233c:	f503 5329 	add.w	r3, r3, #10816	; 0x2a40
 8102340:	3310      	adds	r3, #16
 8102342:	4a2e      	ldr	r2, [pc, #184]	; (81023fc <face_recognition_configure_weights+0x564>)
 8102344:	6093      	str	r3, [r2, #8]
    conv2d_18_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 10832);
 8102346:	4b1f      	ldr	r3, [pc, #124]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 8102348:	681b      	ldr	r3, [r3, #0]
 810234a:	f503 5329 	add.w	r3, r3, #10816	; 0x2a40
 810234e:	3310      	adds	r3, #16
 8102350:	4a2a      	ldr	r2, [pc, #168]	; (81023fc <face_recognition_configure_weights+0x564>)
 8102352:	60d3      	str	r3, [r2, #12]
    conv2d_20_weights_array.format |= AI_FMT_FLAG_CONST;
 8102354:	4b2a      	ldr	r3, [pc, #168]	; (8102400 <face_recognition_configure_weights+0x568>)
 8102356:	681b      	ldr	r3, [r3, #0]
 8102358:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 810235c:	4a28      	ldr	r2, [pc, #160]	; (8102400 <face_recognition_configure_weights+0x568>)
 810235e:	6013      	str	r3, [r2, #0]
    conv2d_20_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 10896);
 8102360:	4b18      	ldr	r3, [pc, #96]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 8102362:	681b      	ldr	r3, [r3, #0]
 8102364:	f503 532a 	add.w	r3, r3, #10880	; 0x2a80
 8102368:	3310      	adds	r3, #16
 810236a:	4a25      	ldr	r2, [pc, #148]	; (8102400 <face_recognition_configure_weights+0x568>)
 810236c:	6093      	str	r3, [r2, #8]
    conv2d_20_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 10896);
 810236e:	4b15      	ldr	r3, [pc, #84]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 8102370:	681b      	ldr	r3, [r3, #0]
 8102372:	f503 532a 	add.w	r3, r3, #10880	; 0x2a80
 8102376:	3310      	adds	r3, #16
 8102378:	4a21      	ldr	r2, [pc, #132]	; (8102400 <face_recognition_configure_weights+0x568>)
 810237a:	60d3      	str	r3, [r2, #12]
    conv2d_20_bias_array.format |= AI_FMT_FLAG_CONST;
 810237c:	4b21      	ldr	r3, [pc, #132]	; (8102404 <face_recognition_configure_weights+0x56c>)
 810237e:	681b      	ldr	r3, [r3, #0]
 8102380:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102384:	4a1f      	ldr	r2, [pc, #124]	; (8102404 <face_recognition_configure_weights+0x56c>)
 8102386:	6013      	str	r3, [r2, #0]
    conv2d_20_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 12432);
 8102388:	4b0e      	ldr	r3, [pc, #56]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 810238a:	681b      	ldr	r3, [r3, #0]
 810238c:	f503 5342 	add.w	r3, r3, #12416	; 0x3080
 8102390:	3310      	adds	r3, #16
 8102392:	4a1c      	ldr	r2, [pc, #112]	; (8102404 <face_recognition_configure_weights+0x56c>)
 8102394:	6093      	str	r3, [r2, #8]
    conv2d_20_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 12432);
 8102396:	4b0b      	ldr	r3, [pc, #44]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 8102398:	681b      	ldr	r3, [r3, #0]
 810239a:	f503 5342 	add.w	r3, r3, #12416	; 0x3080
 810239e:	3310      	adds	r3, #16
 81023a0:	4a18      	ldr	r2, [pc, #96]	; (8102404 <face_recognition_configure_weights+0x56c>)
 81023a2:	60d3      	str	r3, [r2, #12]
    conv2d_21_weights_array.format |= AI_FMT_FLAG_CONST;
 81023a4:	4b18      	ldr	r3, [pc, #96]	; (8102408 <face_recognition_configure_weights+0x570>)
 81023a6:	681b      	ldr	r3, [r3, #0]
 81023a8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81023ac:	4a16      	ldr	r2, [pc, #88]	; (8102408 <face_recognition_configure_weights+0x570>)
 81023ae:	6013      	str	r3, [r2, #0]
    conv2d_21_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 12816);
 81023b0:	4b04      	ldr	r3, [pc, #16]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 81023b2:	681b      	ldr	r3, [r3, #0]
 81023b4:	f503 5348 	add.w	r3, r3, #12800	; 0x3200
 81023b8:	3310      	adds	r3, #16
 81023ba:	4a13      	ldr	r2, [pc, #76]	; (8102408 <face_recognition_configure_weights+0x570>)
 81023bc:	6093      	str	r3, [r2, #8]
    conv2d_21_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 12816);
 81023be:	4b01      	ldr	r3, [pc, #4]	; (81023c4 <face_recognition_configure_weights+0x52c>)
 81023c0:	681b      	ldr	r3, [r3, #0]
 81023c2:	e023      	b.n	810240c <face_recognition_configure_weights+0x574>
 81023c4:	1003f914 	.word	0x1003f914
 81023c8:	10000650 	.word	0x10000650
 81023cc:	10000660 	.word	0x10000660
 81023d0:	10000670 	.word	0x10000670
 81023d4:	10000680 	.word	0x10000680
 81023d8:	10000690 	.word	0x10000690
 81023dc:	100006a0 	.word	0x100006a0
 81023e0:	100006b0 	.word	0x100006b0
 81023e4:	100006c0 	.word	0x100006c0
 81023e8:	100006d0 	.word	0x100006d0
 81023ec:	100006e0 	.word	0x100006e0
 81023f0:	100006f0 	.word	0x100006f0
 81023f4:	10000700 	.word	0x10000700
 81023f8:	10000710 	.word	0x10000710
 81023fc:	10000720 	.word	0x10000720
 8102400:	10000730 	.word	0x10000730
 8102404:	10000740 	.word	0x10000740
 8102408:	10000750 	.word	0x10000750
 810240c:	f503 5348 	add.w	r3, r3, #12800	; 0x3200
 8102410:	3310      	adds	r3, #16
 8102412:	4a9e      	ldr	r2, [pc, #632]	; (810268c <face_recognition_configure_weights+0x7f4>)
 8102414:	60d3      	str	r3, [r2, #12]
    conv2d_21_bias_array.format |= AI_FMT_FLAG_CONST;
 8102416:	4b9e      	ldr	r3, [pc, #632]	; (8102690 <face_recognition_configure_weights+0x7f8>)
 8102418:	681b      	ldr	r3, [r3, #0]
 810241a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 810241e:	4a9c      	ldr	r2, [pc, #624]	; (8102690 <face_recognition_configure_weights+0x7f8>)
 8102420:	6013      	str	r3, [r2, #0]
    conv2d_21_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 13680);
 8102422:	4b9c      	ldr	r3, [pc, #624]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 8102424:	681b      	ldr	r3, [r3, #0]
 8102426:	f503 5355 	add.w	r3, r3, #13632	; 0x3540
 810242a:	3330      	adds	r3, #48	; 0x30
 810242c:	4a98      	ldr	r2, [pc, #608]	; (8102690 <face_recognition_configure_weights+0x7f8>)
 810242e:	6093      	str	r3, [r2, #8]
    conv2d_21_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 13680);
 8102430:	4b98      	ldr	r3, [pc, #608]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 8102432:	681b      	ldr	r3, [r3, #0]
 8102434:	f503 5355 	add.w	r3, r3, #13632	; 0x3540
 8102438:	3330      	adds	r3, #48	; 0x30
 810243a:	4a95      	ldr	r2, [pc, #596]	; (8102690 <face_recognition_configure_weights+0x7f8>)
 810243c:	60d3      	str	r3, [r2, #12]
    conv2d_22_weights_array.format |= AI_FMT_FLAG_CONST;
 810243e:	4b96      	ldr	r3, [pc, #600]	; (8102698 <face_recognition_configure_weights+0x800>)
 8102440:	681b      	ldr	r3, [r3, #0]
 8102442:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102446:	4a94      	ldr	r2, [pc, #592]	; (8102698 <face_recognition_configure_weights+0x800>)
 8102448:	6013      	str	r3, [r2, #0]
    conv2d_22_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 14064);
 810244a:	4b92      	ldr	r3, [pc, #584]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 810244c:	681b      	ldr	r3, [r3, #0]
 810244e:	f503 535b 	add.w	r3, r3, #14016	; 0x36c0
 8102452:	3330      	adds	r3, #48	; 0x30
 8102454:	4a90      	ldr	r2, [pc, #576]	; (8102698 <face_recognition_configure_weights+0x800>)
 8102456:	6093      	str	r3, [r2, #8]
    conv2d_22_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 14064);
 8102458:	4b8e      	ldr	r3, [pc, #568]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 810245a:	681b      	ldr	r3, [r3, #0]
 810245c:	f503 535b 	add.w	r3, r3, #14016	; 0x36c0
 8102460:	3330      	adds	r3, #48	; 0x30
 8102462:	4a8d      	ldr	r2, [pc, #564]	; (8102698 <face_recognition_configure_weights+0x800>)
 8102464:	60d3      	str	r3, [r2, #12]
    conv2d_22_bias_array.format |= AI_FMT_FLAG_CONST;
 8102466:	4b8d      	ldr	r3, [pc, #564]	; (810269c <face_recognition_configure_weights+0x804>)
 8102468:	681b      	ldr	r3, [r3, #0]
 810246a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 810246e:	4a8b      	ldr	r2, [pc, #556]	; (810269c <face_recognition_configure_weights+0x804>)
 8102470:	6013      	str	r3, [r2, #0]
    conv2d_22_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 15600);
 8102472:	4b88      	ldr	r3, [pc, #544]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 8102474:	681b      	ldr	r3, [r3, #0]
 8102476:	f503 5373 	add.w	r3, r3, #15552	; 0x3cc0
 810247a:	3330      	adds	r3, #48	; 0x30
 810247c:	4a87      	ldr	r2, [pc, #540]	; (810269c <face_recognition_configure_weights+0x804>)
 810247e:	6093      	str	r3, [r2, #8]
    conv2d_22_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 15600);
 8102480:	4b84      	ldr	r3, [pc, #528]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 8102482:	681b      	ldr	r3, [r3, #0]
 8102484:	f503 5373 	add.w	r3, r3, #15552	; 0x3cc0
 8102488:	3330      	adds	r3, #48	; 0x30
 810248a:	4a84      	ldr	r2, [pc, #528]	; (810269c <face_recognition_configure_weights+0x804>)
 810248c:	60d3      	str	r3, [r2, #12]
    conv2d_24_weights_array.format |= AI_FMT_FLAG_CONST;
 810248e:	4b84      	ldr	r3, [pc, #528]	; (81026a0 <face_recognition_configure_weights+0x808>)
 8102490:	681b      	ldr	r3, [r3, #0]
 8102492:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102496:	4a82      	ldr	r2, [pc, #520]	; (81026a0 <face_recognition_configure_weights+0x808>)
 8102498:	6013      	str	r3, [r2, #0]
    conv2d_24_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 15664);
 810249a:	4b7e      	ldr	r3, [pc, #504]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 810249c:	681b      	ldr	r3, [r3, #0]
 810249e:	f503 5374 	add.w	r3, r3, #15616	; 0x3d00
 81024a2:	3330      	adds	r3, #48	; 0x30
 81024a4:	4a7e      	ldr	r2, [pc, #504]	; (81026a0 <face_recognition_configure_weights+0x808>)
 81024a6:	6093      	str	r3, [r2, #8]
    conv2d_24_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 15664);
 81024a8:	4b7a      	ldr	r3, [pc, #488]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 81024aa:	681b      	ldr	r3, [r3, #0]
 81024ac:	f503 5374 	add.w	r3, r3, #15616	; 0x3d00
 81024b0:	3330      	adds	r3, #48	; 0x30
 81024b2:	4a7b      	ldr	r2, [pc, #492]	; (81026a0 <face_recognition_configure_weights+0x808>)
 81024b4:	60d3      	str	r3, [r2, #12]
    conv2d_24_bias_array.format |= AI_FMT_FLAG_CONST;
 81024b6:	4b7b      	ldr	r3, [pc, #492]	; (81026a4 <face_recognition_configure_weights+0x80c>)
 81024b8:	681b      	ldr	r3, [r3, #0]
 81024ba:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81024be:	4a79      	ldr	r2, [pc, #484]	; (81026a4 <face_recognition_configure_weights+0x80c>)
 81024c0:	6013      	str	r3, [r2, #0]
    conv2d_24_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 17200);
 81024c2:	4b74      	ldr	r3, [pc, #464]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 81024c4:	681b      	ldr	r3, [r3, #0]
 81024c6:	f503 4386 	add.w	r3, r3, #17152	; 0x4300
 81024ca:	3330      	adds	r3, #48	; 0x30
 81024cc:	4a75      	ldr	r2, [pc, #468]	; (81026a4 <face_recognition_configure_weights+0x80c>)
 81024ce:	6093      	str	r3, [r2, #8]
    conv2d_24_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 17200);
 81024d0:	4b70      	ldr	r3, [pc, #448]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 81024d2:	681b      	ldr	r3, [r3, #0]
 81024d4:	f503 4386 	add.w	r3, r3, #17152	; 0x4300
 81024d8:	3330      	adds	r3, #48	; 0x30
 81024da:	4a72      	ldr	r2, [pc, #456]	; (81026a4 <face_recognition_configure_weights+0x80c>)
 81024dc:	60d3      	str	r3, [r2, #12]
    conv2d_26_weights_array.format |= AI_FMT_FLAG_CONST;
 81024de:	4b72      	ldr	r3, [pc, #456]	; (81026a8 <face_recognition_configure_weights+0x810>)
 81024e0:	681b      	ldr	r3, [r3, #0]
 81024e2:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81024e6:	4a70      	ldr	r2, [pc, #448]	; (81026a8 <face_recognition_configure_weights+0x810>)
 81024e8:	6013      	str	r3, [r2, #0]
    conv2d_26_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 17584);
 81024ea:	4b6a      	ldr	r3, [pc, #424]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 81024ec:	681b      	ldr	r3, [r3, #0]
 81024ee:	f503 4389 	add.w	r3, r3, #17536	; 0x4480
 81024f2:	3330      	adds	r3, #48	; 0x30
 81024f4:	4a6c      	ldr	r2, [pc, #432]	; (81026a8 <face_recognition_configure_weights+0x810>)
 81024f6:	6093      	str	r3, [r2, #8]
    conv2d_26_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 17584);
 81024f8:	4b66      	ldr	r3, [pc, #408]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 81024fa:	681b      	ldr	r3, [r3, #0]
 81024fc:	f503 4389 	add.w	r3, r3, #17536	; 0x4480
 8102500:	3330      	adds	r3, #48	; 0x30
 8102502:	4a69      	ldr	r2, [pc, #420]	; (81026a8 <face_recognition_configure_weights+0x810>)
 8102504:	60d3      	str	r3, [r2, #12]
    conv2d_26_bias_array.format |= AI_FMT_FLAG_CONST;
 8102506:	4b69      	ldr	r3, [pc, #420]	; (81026ac <face_recognition_configure_weights+0x814>)
 8102508:	681b      	ldr	r3, [r3, #0]
 810250a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 810250e:	4a67      	ldr	r2, [pc, #412]	; (81026ac <face_recognition_configure_weights+0x814>)
 8102510:	6013      	str	r3, [r2, #0]
    conv2d_26_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 18448);
 8102512:	4b60      	ldr	r3, [pc, #384]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 8102514:	681b      	ldr	r3, [r3, #0]
 8102516:	f503 4390 	add.w	r3, r3, #18432	; 0x4800
 810251a:	3310      	adds	r3, #16
 810251c:	4a63      	ldr	r2, [pc, #396]	; (81026ac <face_recognition_configure_weights+0x814>)
 810251e:	6093      	str	r3, [r2, #8]
    conv2d_26_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 18448);
 8102520:	4b5c      	ldr	r3, [pc, #368]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 8102522:	681b      	ldr	r3, [r3, #0]
 8102524:	f503 4390 	add.w	r3, r3, #18432	; 0x4800
 8102528:	3310      	adds	r3, #16
 810252a:	4a60      	ldr	r2, [pc, #384]	; (81026ac <face_recognition_configure_weights+0x814>)
 810252c:	60d3      	str	r3, [r2, #12]
    conv2d_27_weights_array.format |= AI_FMT_FLAG_CONST;
 810252e:	4b60      	ldr	r3, [pc, #384]	; (81026b0 <face_recognition_configure_weights+0x818>)
 8102530:	681b      	ldr	r3, [r3, #0]
 8102532:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102536:	4a5e      	ldr	r2, [pc, #376]	; (81026b0 <face_recognition_configure_weights+0x818>)
 8102538:	6013      	str	r3, [r2, #0]
    conv2d_27_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 18832);
 810253a:	4b56      	ldr	r3, [pc, #344]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 810253c:	681b      	ldr	r3, [r3, #0]
 810253e:	f503 4393 	add.w	r3, r3, #18816	; 0x4980
 8102542:	3310      	adds	r3, #16
 8102544:	4a5a      	ldr	r2, [pc, #360]	; (81026b0 <face_recognition_configure_weights+0x818>)
 8102546:	6093      	str	r3, [r2, #8]
    conv2d_27_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 18832);
 8102548:	4b52      	ldr	r3, [pc, #328]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 810254a:	681b      	ldr	r3, [r3, #0]
 810254c:	f503 4393 	add.w	r3, r3, #18816	; 0x4980
 8102550:	3310      	adds	r3, #16
 8102552:	4a57      	ldr	r2, [pc, #348]	; (81026b0 <face_recognition_configure_weights+0x818>)
 8102554:	60d3      	str	r3, [r2, #12]
    conv2d_27_bias_array.format |= AI_FMT_FLAG_CONST;
 8102556:	4b57      	ldr	r3, [pc, #348]	; (81026b4 <face_recognition_configure_weights+0x81c>)
 8102558:	681b      	ldr	r3, [r3, #0]
 810255a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 810255e:	4a55      	ldr	r2, [pc, #340]	; (81026b4 <face_recognition_configure_weights+0x81c>)
 8102560:	6013      	str	r3, [r2, #0]
    conv2d_27_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 21136);
 8102562:	4b4c      	ldr	r3, [pc, #304]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 8102564:	681b      	ldr	r3, [r3, #0]
 8102566:	f503 43a5 	add.w	r3, r3, #21120	; 0x5280
 810256a:	3310      	adds	r3, #16
 810256c:	4a51      	ldr	r2, [pc, #324]	; (81026b4 <face_recognition_configure_weights+0x81c>)
 810256e:	6093      	str	r3, [r2, #8]
    conv2d_27_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 21136);
 8102570:	4b48      	ldr	r3, [pc, #288]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 8102572:	681b      	ldr	r3, [r3, #0]
 8102574:	f503 43a5 	add.w	r3, r3, #21120	; 0x5280
 8102578:	3310      	adds	r3, #16
 810257a:	4a4e      	ldr	r2, [pc, #312]	; (81026b4 <face_recognition_configure_weights+0x81c>)
 810257c:	60d3      	str	r3, [r2, #12]
    conv2d_28_weights_array.format |= AI_FMT_FLAG_CONST;
 810257e:	4b4e      	ldr	r3, [pc, #312]	; (81026b8 <face_recognition_configure_weights+0x820>)
 8102580:	681b      	ldr	r3, [r3, #0]
 8102582:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102586:	4a4c      	ldr	r2, [pc, #304]	; (81026b8 <face_recognition_configure_weights+0x820>)
 8102588:	6013      	str	r3, [r2, #0]
    conv2d_28_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 21232);
 810258a:	4b42      	ldr	r3, [pc, #264]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 810258c:	681b      	ldr	r3, [r3, #0]
 810258e:	f503 43a5 	add.w	r3, r3, #21120	; 0x5280
 8102592:	3370      	adds	r3, #112	; 0x70
 8102594:	4a48      	ldr	r2, [pc, #288]	; (81026b8 <face_recognition_configure_weights+0x820>)
 8102596:	6093      	str	r3, [r2, #8]
    conv2d_28_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 21232);
 8102598:	4b3e      	ldr	r3, [pc, #248]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 810259a:	681b      	ldr	r3, [r3, #0]
 810259c:	f503 43a5 	add.w	r3, r3, #21120	; 0x5280
 81025a0:	3370      	adds	r3, #112	; 0x70
 81025a2:	4a45      	ldr	r2, [pc, #276]	; (81026b8 <face_recognition_configure_weights+0x820>)
 81025a4:	60d3      	str	r3, [r2, #12]
    conv2d_28_bias_array.format |= AI_FMT_FLAG_CONST;
 81025a6:	4b45      	ldr	r3, [pc, #276]	; (81026bc <face_recognition_configure_weights+0x824>)
 81025a8:	681b      	ldr	r3, [r3, #0]
 81025aa:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81025ae:	4a43      	ldr	r2, [pc, #268]	; (81026bc <face_recognition_configure_weights+0x824>)
 81025b0:	6013      	str	r3, [r2, #0]
    conv2d_28_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 24688);
 81025b2:	4b38      	ldr	r3, [pc, #224]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 81025b4:	681b      	ldr	r3, [r3, #0]
 81025b6:	f503 43c0 	add.w	r3, r3, #24576	; 0x6000
 81025ba:	3370      	adds	r3, #112	; 0x70
 81025bc:	4a3f      	ldr	r2, [pc, #252]	; (81026bc <face_recognition_configure_weights+0x824>)
 81025be:	6093      	str	r3, [r2, #8]
    conv2d_28_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 24688);
 81025c0:	4b34      	ldr	r3, [pc, #208]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 81025c2:	681b      	ldr	r3, [r3, #0]
 81025c4:	f503 43c0 	add.w	r3, r3, #24576	; 0x6000
 81025c8:	3370      	adds	r3, #112	; 0x70
 81025ca:	4a3c      	ldr	r2, [pc, #240]	; (81026bc <face_recognition_configure_weights+0x824>)
 81025cc:	60d3      	str	r3, [r2, #12]
    conv2d_29_weights_array.format |= AI_FMT_FLAG_CONST;
 81025ce:	4b3c      	ldr	r3, [pc, #240]	; (81026c0 <face_recognition_configure_weights+0x828>)
 81025d0:	681b      	ldr	r3, [r3, #0]
 81025d2:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81025d6:	4a3a      	ldr	r2, [pc, #232]	; (81026c0 <face_recognition_configure_weights+0x828>)
 81025d8:	6013      	str	r3, [r2, #0]
    conv2d_29_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 25264);
 81025da:	4b2e      	ldr	r3, [pc, #184]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 81025dc:	681b      	ldr	r3, [r3, #0]
 81025de:	f503 43c5 	add.w	r3, r3, #25216	; 0x6280
 81025e2:	3330      	adds	r3, #48	; 0x30
 81025e4:	4a36      	ldr	r2, [pc, #216]	; (81026c0 <face_recognition_configure_weights+0x828>)
 81025e6:	6093      	str	r3, [r2, #8]
    conv2d_29_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 25264);
 81025e8:	4b2a      	ldr	r3, [pc, #168]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 81025ea:	681b      	ldr	r3, [r3, #0]
 81025ec:	f503 43c5 	add.w	r3, r3, #25216	; 0x6280
 81025f0:	3330      	adds	r3, #48	; 0x30
 81025f2:	4a33      	ldr	r2, [pc, #204]	; (81026c0 <face_recognition_configure_weights+0x828>)
 81025f4:	60d3      	str	r3, [r2, #12]
    conv2d_29_bias_array.format |= AI_FMT_FLAG_CONST;
 81025f6:	4b33      	ldr	r3, [pc, #204]	; (81026c4 <face_recognition_configure_weights+0x82c>)
 81025f8:	681b      	ldr	r3, [r3, #0]
 81025fa:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81025fe:	4a31      	ldr	r2, [pc, #196]	; (81026c4 <face_recognition_configure_weights+0x82c>)
 8102600:	6013      	str	r3, [r2, #0]
    conv2d_29_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 26560);
 8102602:	4b24      	ldr	r3, [pc, #144]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 8102604:	681b      	ldr	r3, [r3, #0]
 8102606:	f503 43cf 	add.w	r3, r3, #26496	; 0x6780
 810260a:	3340      	adds	r3, #64	; 0x40
 810260c:	4a2d      	ldr	r2, [pc, #180]	; (81026c4 <face_recognition_configure_weights+0x82c>)
 810260e:	6093      	str	r3, [r2, #8]
    conv2d_29_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 26560);
 8102610:	4b20      	ldr	r3, [pc, #128]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 8102612:	681b      	ldr	r3, [r3, #0]
 8102614:	f503 43cf 	add.w	r3, r3, #26496	; 0x6780
 8102618:	3340      	adds	r3, #64	; 0x40
 810261a:	4a2a      	ldr	r2, [pc, #168]	; (81026c4 <face_recognition_configure_weights+0x82c>)
 810261c:	60d3      	str	r3, [r2, #12]
    conv2d_30_weights_array.format |= AI_FMT_FLAG_CONST;
 810261e:	4b2a      	ldr	r3, [pc, #168]	; (81026c8 <face_recognition_configure_weights+0x830>)
 8102620:	681b      	ldr	r3, [r3, #0]
 8102622:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102626:	4a28      	ldr	r2, [pc, #160]	; (81026c8 <face_recognition_configure_weights+0x830>)
 8102628:	6013      	str	r3, [r2, #0]
    conv2d_30_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 27136);
 810262a:	4b1a      	ldr	r3, [pc, #104]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 810262c:	681b      	ldr	r3, [r3, #0]
 810262e:	f503 43d4 	add.w	r3, r3, #27136	; 0x6a00
 8102632:	4a25      	ldr	r2, [pc, #148]	; (81026c8 <face_recognition_configure_weights+0x830>)
 8102634:	6093      	str	r3, [r2, #8]
    conv2d_30_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 27136);
 8102636:	4b17      	ldr	r3, [pc, #92]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 8102638:	681b      	ldr	r3, [r3, #0]
 810263a:	f503 43d4 	add.w	r3, r3, #27136	; 0x6a00
 810263e:	4a22      	ldr	r2, [pc, #136]	; (81026c8 <face_recognition_configure_weights+0x830>)
 8102640:	60d3      	str	r3, [r2, #12]
    conv2d_30_bias_array.format |= AI_FMT_FLAG_CONST;
 8102642:	4b22      	ldr	r3, [pc, #136]	; (81026cc <face_recognition_configure_weights+0x834>)
 8102644:	681b      	ldr	r3, [r3, #0]
 8102646:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 810264a:	4a20      	ldr	r2, [pc, #128]	; (81026cc <face_recognition_configure_weights+0x834>)
 810264c:	6013      	str	r3, [r2, #0]
    conv2d_30_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 30592);
 810264e:	4b11      	ldr	r3, [pc, #68]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 8102650:	681b      	ldr	r3, [r3, #0]
 8102652:	f503 43ef 	add.w	r3, r3, #30592	; 0x7780
 8102656:	4a1d      	ldr	r2, [pc, #116]	; (81026cc <face_recognition_configure_weights+0x834>)
 8102658:	6093      	str	r3, [r2, #8]
    conv2d_30_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 30592);
 810265a:	4b0e      	ldr	r3, [pc, #56]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 810265c:	681b      	ldr	r3, [r3, #0]
 810265e:	f503 43ef 	add.w	r3, r3, #30592	; 0x7780
 8102662:	4a1a      	ldr	r2, [pc, #104]	; (81026cc <face_recognition_configure_weights+0x834>)
 8102664:	60d3      	str	r3, [r2, #12]
    conv2d_32_weights_array.format |= AI_FMT_FLAG_CONST;
 8102666:	4b1a      	ldr	r3, [pc, #104]	; (81026d0 <face_recognition_configure_weights+0x838>)
 8102668:	681b      	ldr	r3, [r3, #0]
 810266a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 810266e:	4a18      	ldr	r2, [pc, #96]	; (81026d0 <face_recognition_configure_weights+0x838>)
 8102670:	6013      	str	r3, [r2, #0]
    conv2d_32_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 30688);
 8102672:	4b08      	ldr	r3, [pc, #32]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 8102674:	681b      	ldr	r3, [r3, #0]
 8102676:	f503 43ef 	add.w	r3, r3, #30592	; 0x7780
 810267a:	3360      	adds	r3, #96	; 0x60
 810267c:	4a14      	ldr	r2, [pc, #80]	; (81026d0 <face_recognition_configure_weights+0x838>)
 810267e:	6093      	str	r3, [r2, #8]
    conv2d_32_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 30688);
 8102680:	4b04      	ldr	r3, [pc, #16]	; (8102694 <face_recognition_configure_weights+0x7fc>)
 8102682:	681b      	ldr	r3, [r3, #0]
 8102684:	f503 43ef 	add.w	r3, r3, #30592	; 0x7780
 8102688:	3360      	adds	r3, #96	; 0x60
 810268a:	e023      	b.n	81026d4 <face_recognition_configure_weights+0x83c>
 810268c:	10000750 	.word	0x10000750
 8102690:	10000760 	.word	0x10000760
 8102694:	1003f914 	.word	0x1003f914
 8102698:	10000770 	.word	0x10000770
 810269c:	10000780 	.word	0x10000780
 81026a0:	10000790 	.word	0x10000790
 81026a4:	100007a0 	.word	0x100007a0
 81026a8:	100007b0 	.word	0x100007b0
 81026ac:	100007c0 	.word	0x100007c0
 81026b0:	100007d0 	.word	0x100007d0
 81026b4:	100007e0 	.word	0x100007e0
 81026b8:	100007f0 	.word	0x100007f0
 81026bc:	10000800 	.word	0x10000800
 81026c0:	10000810 	.word	0x10000810
 81026c4:	10000820 	.word	0x10000820
 81026c8:	10000830 	.word	0x10000830
 81026cc:	10000840 	.word	0x10000840
 81026d0:	10000850 	.word	0x10000850
 81026d4:	4a9d      	ldr	r2, [pc, #628]	; (810294c <face_recognition_configure_weights+0xab4>)
 81026d6:	60d3      	str	r3, [r2, #12]
    conv2d_32_bias_array.format |= AI_FMT_FLAG_CONST;
 81026d8:	4b9d      	ldr	r3, [pc, #628]	; (8102950 <face_recognition_configure_weights+0xab8>)
 81026da:	681b      	ldr	r3, [r3, #0]
 81026dc:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81026e0:	4a9b      	ldr	r2, [pc, #620]	; (8102950 <face_recognition_configure_weights+0xab8>)
 81026e2:	6013      	str	r3, [r2, #0]
    conv2d_32_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 34144);
 81026e4:	4b9b      	ldr	r3, [pc, #620]	; (8102954 <face_recognition_configure_weights+0xabc>)
 81026e6:	681b      	ldr	r3, [r3, #0]
 81026e8:	f503 4305 	add.w	r3, r3, #34048	; 0x8500
 81026ec:	3360      	adds	r3, #96	; 0x60
 81026ee:	4a98      	ldr	r2, [pc, #608]	; (8102950 <face_recognition_configure_weights+0xab8>)
 81026f0:	6093      	str	r3, [r2, #8]
    conv2d_32_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 34144);
 81026f2:	4b98      	ldr	r3, [pc, #608]	; (8102954 <face_recognition_configure_weights+0xabc>)
 81026f4:	681b      	ldr	r3, [r3, #0]
 81026f6:	f503 4305 	add.w	r3, r3, #34048	; 0x8500
 81026fa:	3360      	adds	r3, #96	; 0x60
 81026fc:	4a94      	ldr	r2, [pc, #592]	; (8102950 <face_recognition_configure_weights+0xab8>)
 81026fe:	60d3      	str	r3, [r2, #12]
    conv2d_33_weights_array.format |= AI_FMT_FLAG_CONST;
 8102700:	4b95      	ldr	r3, [pc, #596]	; (8102958 <face_recognition_configure_weights+0xac0>)
 8102702:	681b      	ldr	r3, [r3, #0]
 8102704:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102708:	4a93      	ldr	r2, [pc, #588]	; (8102958 <face_recognition_configure_weights+0xac0>)
 810270a:	6013      	str	r3, [r2, #0]
    conv2d_33_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 34720);
 810270c:	4b91      	ldr	r3, [pc, #580]	; (8102954 <face_recognition_configure_weights+0xabc>)
 810270e:	681b      	ldr	r3, [r3, #0]
 8102710:	f503 4307 	add.w	r3, r3, #34560	; 0x8700
 8102714:	33a0      	adds	r3, #160	; 0xa0
 8102716:	4a90      	ldr	r2, [pc, #576]	; (8102958 <face_recognition_configure_weights+0xac0>)
 8102718:	6093      	str	r3, [r2, #8]
    conv2d_33_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 34720);
 810271a:	4b8e      	ldr	r3, [pc, #568]	; (8102954 <face_recognition_configure_weights+0xabc>)
 810271c:	681b      	ldr	r3, [r3, #0]
 810271e:	f503 4307 	add.w	r3, r3, #34560	; 0x8700
 8102722:	33a0      	adds	r3, #160	; 0xa0
 8102724:	4a8c      	ldr	r2, [pc, #560]	; (8102958 <face_recognition_configure_weights+0xac0>)
 8102726:	60d3      	str	r3, [r2, #12]
    conv2d_33_bias_array.format |= AI_FMT_FLAG_CONST;
 8102728:	4b8c      	ldr	r3, [pc, #560]	; (810295c <face_recognition_configure_weights+0xac4>)
 810272a:	681b      	ldr	r3, [r3, #0]
 810272c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102730:	4a8a      	ldr	r2, [pc, #552]	; (810295c <face_recognition_configure_weights+0xac4>)
 8102732:	6013      	str	r3, [r2, #0]
    conv2d_33_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 36016);
 8102734:	4b87      	ldr	r3, [pc, #540]	; (8102954 <face_recognition_configure_weights+0xabc>)
 8102736:	681b      	ldr	r3, [r3, #0]
 8102738:	f503 430c 	add.w	r3, r3, #35840	; 0x8c00
 810273c:	33b0      	adds	r3, #176	; 0xb0
 810273e:	4a87      	ldr	r2, [pc, #540]	; (810295c <face_recognition_configure_weights+0xac4>)
 8102740:	6093      	str	r3, [r2, #8]
    conv2d_33_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 36016);
 8102742:	4b84      	ldr	r3, [pc, #528]	; (8102954 <face_recognition_configure_weights+0xabc>)
 8102744:	681b      	ldr	r3, [r3, #0]
 8102746:	f503 430c 	add.w	r3, r3, #35840	; 0x8c00
 810274a:	33b0      	adds	r3, #176	; 0xb0
 810274c:	4a83      	ldr	r2, [pc, #524]	; (810295c <face_recognition_configure_weights+0xac4>)
 810274e:	60d3      	str	r3, [r2, #12]
    conv2d_34_weights_array.format |= AI_FMT_FLAG_CONST;
 8102750:	4b83      	ldr	r3, [pc, #524]	; (8102960 <face_recognition_configure_weights+0xac8>)
 8102752:	681b      	ldr	r3, [r3, #0]
 8102754:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102758:	4a81      	ldr	r2, [pc, #516]	; (8102960 <face_recognition_configure_weights+0xac8>)
 810275a:	6013      	str	r3, [r2, #0]
    conv2d_34_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 36592);
 810275c:	4b7d      	ldr	r3, [pc, #500]	; (8102954 <face_recognition_configure_weights+0xabc>)
 810275e:	681b      	ldr	r3, [r3, #0]
 8102760:	f503 430e 	add.w	r3, r3, #36352	; 0x8e00
 8102764:	33f0      	adds	r3, #240	; 0xf0
 8102766:	4a7e      	ldr	r2, [pc, #504]	; (8102960 <face_recognition_configure_weights+0xac8>)
 8102768:	6093      	str	r3, [r2, #8]
    conv2d_34_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 36592);
 810276a:	4b7a      	ldr	r3, [pc, #488]	; (8102954 <face_recognition_configure_weights+0xabc>)
 810276c:	681b      	ldr	r3, [r3, #0]
 810276e:	f503 430e 	add.w	r3, r3, #36352	; 0x8e00
 8102772:	33f0      	adds	r3, #240	; 0xf0
 8102774:	4a7a      	ldr	r2, [pc, #488]	; (8102960 <face_recognition_configure_weights+0xac8>)
 8102776:	60d3      	str	r3, [r2, #12]
    conv2d_34_bias_array.format |= AI_FMT_FLAG_CONST;
 8102778:	4b7a      	ldr	r3, [pc, #488]	; (8102964 <face_recognition_configure_weights+0xacc>)
 810277a:	681b      	ldr	r3, [r3, #0]
 810277c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102780:	4a78      	ldr	r2, [pc, #480]	; (8102964 <face_recognition_configure_weights+0xacc>)
 8102782:	6013      	str	r3, [r2, #0]
    conv2d_34_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 40048);
 8102784:	4b73      	ldr	r3, [pc, #460]	; (8102954 <face_recognition_configure_weights+0xabc>)
 8102786:	681b      	ldr	r3, [r3, #0]
 8102788:	f503 431c 	add.w	r3, r3, #39936	; 0x9c00
 810278c:	3370      	adds	r3, #112	; 0x70
 810278e:	4a75      	ldr	r2, [pc, #468]	; (8102964 <face_recognition_configure_weights+0xacc>)
 8102790:	6093      	str	r3, [r2, #8]
    conv2d_34_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 40048);
 8102792:	4b70      	ldr	r3, [pc, #448]	; (8102954 <face_recognition_configure_weights+0xabc>)
 8102794:	681b      	ldr	r3, [r3, #0]
 8102796:	f503 431c 	add.w	r3, r3, #39936	; 0x9c00
 810279a:	3370      	adds	r3, #112	; 0x70
 810279c:	4a71      	ldr	r2, [pc, #452]	; (8102964 <face_recognition_configure_weights+0xacc>)
 810279e:	60d3      	str	r3, [r2, #12]
    conv2d_36_weights_array.format |= AI_FMT_FLAG_CONST;
 81027a0:	4b71      	ldr	r3, [pc, #452]	; (8102968 <face_recognition_configure_weights+0xad0>)
 81027a2:	681b      	ldr	r3, [r3, #0]
 81027a4:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81027a8:	4a6f      	ldr	r2, [pc, #444]	; (8102968 <face_recognition_configure_weights+0xad0>)
 81027aa:	6013      	str	r3, [r2, #0]
    conv2d_36_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 40144);
 81027ac:	4b69      	ldr	r3, [pc, #420]	; (8102954 <face_recognition_configure_weights+0xabc>)
 81027ae:	681b      	ldr	r3, [r3, #0]
 81027b0:	f503 431c 	add.w	r3, r3, #39936	; 0x9c00
 81027b4:	33d0      	adds	r3, #208	; 0xd0
 81027b6:	4a6c      	ldr	r2, [pc, #432]	; (8102968 <face_recognition_configure_weights+0xad0>)
 81027b8:	6093      	str	r3, [r2, #8]
    conv2d_36_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 40144);
 81027ba:	4b66      	ldr	r3, [pc, #408]	; (8102954 <face_recognition_configure_weights+0xabc>)
 81027bc:	681b      	ldr	r3, [r3, #0]
 81027be:	f503 431c 	add.w	r3, r3, #39936	; 0x9c00
 81027c2:	33d0      	adds	r3, #208	; 0xd0
 81027c4:	4a68      	ldr	r2, [pc, #416]	; (8102968 <face_recognition_configure_weights+0xad0>)
 81027c6:	60d3      	str	r3, [r2, #12]
    conv2d_36_bias_array.format |= AI_FMT_FLAG_CONST;
 81027c8:	4b68      	ldr	r3, [pc, #416]	; (810296c <face_recognition_configure_weights+0xad4>)
 81027ca:	681b      	ldr	r3, [r3, #0]
 81027cc:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81027d0:	4a66      	ldr	r2, [pc, #408]	; (810296c <face_recognition_configure_weights+0xad4>)
 81027d2:	6013      	str	r3, [r2, #0]
    conv2d_36_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 43600);
 81027d4:	4b5f      	ldr	r3, [pc, #380]	; (8102954 <face_recognition_configure_weights+0xabc>)
 81027d6:	681b      	ldr	r3, [r3, #0]
 81027d8:	f503 432a 	add.w	r3, r3, #43520	; 0xaa00
 81027dc:	3350      	adds	r3, #80	; 0x50
 81027de:	4a63      	ldr	r2, [pc, #396]	; (810296c <face_recognition_configure_weights+0xad4>)
 81027e0:	6093      	str	r3, [r2, #8]
    conv2d_36_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 43600);
 81027e2:	4b5c      	ldr	r3, [pc, #368]	; (8102954 <face_recognition_configure_weights+0xabc>)
 81027e4:	681b      	ldr	r3, [r3, #0]
 81027e6:	f503 432a 	add.w	r3, r3, #43520	; 0xaa00
 81027ea:	3350      	adds	r3, #80	; 0x50
 81027ec:	4a5f      	ldr	r2, [pc, #380]	; (810296c <face_recognition_configure_weights+0xad4>)
 81027ee:	60d3      	str	r3, [r2, #12]
    conv2d_37_weights_array.format |= AI_FMT_FLAG_CONST;
 81027f0:	4b5f      	ldr	r3, [pc, #380]	; (8102970 <face_recognition_configure_weights+0xad8>)
 81027f2:	681b      	ldr	r3, [r3, #0]
 81027f4:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81027f8:	4a5d      	ldr	r2, [pc, #372]	; (8102970 <face_recognition_configure_weights+0xad8>)
 81027fa:	6013      	str	r3, [r2, #0]
    conv2d_37_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 44176);
 81027fc:	4b55      	ldr	r3, [pc, #340]	; (8102954 <face_recognition_configure_weights+0xabc>)
 81027fe:	681b      	ldr	r3, [r3, #0]
 8102800:	f503 432c 	add.w	r3, r3, #44032	; 0xac00
 8102804:	3390      	adds	r3, #144	; 0x90
 8102806:	4a5a      	ldr	r2, [pc, #360]	; (8102970 <face_recognition_configure_weights+0xad8>)
 8102808:	6093      	str	r3, [r2, #8]
    conv2d_37_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 44176);
 810280a:	4b52      	ldr	r3, [pc, #328]	; (8102954 <face_recognition_configure_weights+0xabc>)
 810280c:	681b      	ldr	r3, [r3, #0]
 810280e:	f503 432c 	add.w	r3, r3, #44032	; 0xac00
 8102812:	3390      	adds	r3, #144	; 0x90
 8102814:	4a56      	ldr	r2, [pc, #344]	; (8102970 <face_recognition_configure_weights+0xad8>)
 8102816:	60d3      	str	r3, [r2, #12]
    conv2d_37_bias_array.format |= AI_FMT_FLAG_CONST;
 8102818:	4b56      	ldr	r3, [pc, #344]	; (8102974 <face_recognition_configure_weights+0xadc>)
 810281a:	681b      	ldr	r3, [r3, #0]
 810281c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102820:	4a54      	ldr	r2, [pc, #336]	; (8102974 <face_recognition_configure_weights+0xadc>)
 8102822:	6013      	str	r3, [r2, #0]
    conv2d_37_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 45472);
 8102824:	4b4b      	ldr	r3, [pc, #300]	; (8102954 <face_recognition_configure_weights+0xabc>)
 8102826:	681b      	ldr	r3, [r3, #0]
 8102828:	f503 4331 	add.w	r3, r3, #45312	; 0xb100
 810282c:	33a0      	adds	r3, #160	; 0xa0
 810282e:	4a51      	ldr	r2, [pc, #324]	; (8102974 <face_recognition_configure_weights+0xadc>)
 8102830:	6093      	str	r3, [r2, #8]
    conv2d_37_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 45472);
 8102832:	4b48      	ldr	r3, [pc, #288]	; (8102954 <face_recognition_configure_weights+0xabc>)
 8102834:	681b      	ldr	r3, [r3, #0]
 8102836:	f503 4331 	add.w	r3, r3, #45312	; 0xb100
 810283a:	33a0      	adds	r3, #160	; 0xa0
 810283c:	4a4d      	ldr	r2, [pc, #308]	; (8102974 <face_recognition_configure_weights+0xadc>)
 810283e:	60d3      	str	r3, [r2, #12]
    conv2d_38_weights_array.format |= AI_FMT_FLAG_CONST;
 8102840:	4b4d      	ldr	r3, [pc, #308]	; (8102978 <face_recognition_configure_weights+0xae0>)
 8102842:	681b      	ldr	r3, [r3, #0]
 8102844:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102848:	4a4b      	ldr	r2, [pc, #300]	; (8102978 <face_recognition_configure_weights+0xae0>)
 810284a:	6013      	str	r3, [r2, #0]
    conv2d_38_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 46048);
 810284c:	4b41      	ldr	r3, [pc, #260]	; (8102954 <face_recognition_configure_weights+0xabc>)
 810284e:	681b      	ldr	r3, [r3, #0]
 8102850:	f503 4333 	add.w	r3, r3, #45824	; 0xb300
 8102854:	33e0      	adds	r3, #224	; 0xe0
 8102856:	4a48      	ldr	r2, [pc, #288]	; (8102978 <face_recognition_configure_weights+0xae0>)
 8102858:	6093      	str	r3, [r2, #8]
    conv2d_38_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 46048);
 810285a:	4b3e      	ldr	r3, [pc, #248]	; (8102954 <face_recognition_configure_weights+0xabc>)
 810285c:	681b      	ldr	r3, [r3, #0]
 810285e:	f503 4333 	add.w	r3, r3, #45824	; 0xb300
 8102862:	33e0      	adds	r3, #224	; 0xe0
 8102864:	4a44      	ldr	r2, [pc, #272]	; (8102978 <face_recognition_configure_weights+0xae0>)
 8102866:	60d3      	str	r3, [r2, #12]
    conv2d_38_bias_array.format |= AI_FMT_FLAG_CONST;
 8102868:	4b44      	ldr	r3, [pc, #272]	; (810297c <face_recognition_configure_weights+0xae4>)
 810286a:	681b      	ldr	r3, [r3, #0]
 810286c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102870:	4a42      	ldr	r2, [pc, #264]	; (810297c <face_recognition_configure_weights+0xae4>)
 8102872:	6013      	str	r3, [r2, #0]
    conv2d_38_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 49504);
 8102874:	4b37      	ldr	r3, [pc, #220]	; (8102954 <face_recognition_configure_weights+0xabc>)
 8102876:	681b      	ldr	r3, [r3, #0]
 8102878:	f503 4341 	add.w	r3, r3, #49408	; 0xc100
 810287c:	3360      	adds	r3, #96	; 0x60
 810287e:	4a3f      	ldr	r2, [pc, #252]	; (810297c <face_recognition_configure_weights+0xae4>)
 8102880:	6093      	str	r3, [r2, #8]
    conv2d_38_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 49504);
 8102882:	4b34      	ldr	r3, [pc, #208]	; (8102954 <face_recognition_configure_weights+0xabc>)
 8102884:	681b      	ldr	r3, [r3, #0]
 8102886:	f503 4341 	add.w	r3, r3, #49408	; 0xc100
 810288a:	3360      	adds	r3, #96	; 0x60
 810288c:	4a3b      	ldr	r2, [pc, #236]	; (810297c <face_recognition_configure_weights+0xae4>)
 810288e:	60d3      	str	r3, [r2, #12]
    conv2d_40_weights_array.format |= AI_FMT_FLAG_CONST;
 8102890:	4b3b      	ldr	r3, [pc, #236]	; (8102980 <face_recognition_configure_weights+0xae8>)
 8102892:	681b      	ldr	r3, [r3, #0]
 8102894:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102898:	4a39      	ldr	r2, [pc, #228]	; (8102980 <face_recognition_configure_weights+0xae8>)
 810289a:	6013      	str	r3, [r2, #0]
    conv2d_40_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 49600);
 810289c:	4b2d      	ldr	r3, [pc, #180]	; (8102954 <face_recognition_configure_weights+0xabc>)
 810289e:	681b      	ldr	r3, [r3, #0]
 81028a0:	f503 4341 	add.w	r3, r3, #49408	; 0xc100
 81028a4:	33c0      	adds	r3, #192	; 0xc0
 81028a6:	4a36      	ldr	r2, [pc, #216]	; (8102980 <face_recognition_configure_weights+0xae8>)
 81028a8:	6093      	str	r3, [r2, #8]
    conv2d_40_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 49600);
 81028aa:	4b2a      	ldr	r3, [pc, #168]	; (8102954 <face_recognition_configure_weights+0xabc>)
 81028ac:	681b      	ldr	r3, [r3, #0]
 81028ae:	f503 4341 	add.w	r3, r3, #49408	; 0xc100
 81028b2:	33c0      	adds	r3, #192	; 0xc0
 81028b4:	4a32      	ldr	r2, [pc, #200]	; (8102980 <face_recognition_configure_weights+0xae8>)
 81028b6:	60d3      	str	r3, [r2, #12]
    conv2d_40_bias_array.format |= AI_FMT_FLAG_CONST;
 81028b8:	4b32      	ldr	r3, [pc, #200]	; (8102984 <face_recognition_configure_weights+0xaec>)
 81028ba:	681b      	ldr	r3, [r3, #0]
 81028bc:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81028c0:	4a30      	ldr	r2, [pc, #192]	; (8102984 <face_recognition_configure_weights+0xaec>)
 81028c2:	6013      	str	r3, [r2, #0]
    conv2d_40_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 53056);
 81028c4:	4b23      	ldr	r3, [pc, #140]	; (8102954 <face_recognition_configure_weights+0xabc>)
 81028c6:	681b      	ldr	r3, [r3, #0]
 81028c8:	f503 434f 	add.w	r3, r3, #52992	; 0xcf00
 81028cc:	3340      	adds	r3, #64	; 0x40
 81028ce:	4a2d      	ldr	r2, [pc, #180]	; (8102984 <face_recognition_configure_weights+0xaec>)
 81028d0:	6093      	str	r3, [r2, #8]
    conv2d_40_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 53056);
 81028d2:	4b20      	ldr	r3, [pc, #128]	; (8102954 <face_recognition_configure_weights+0xabc>)
 81028d4:	681b      	ldr	r3, [r3, #0]
 81028d6:	f503 434f 	add.w	r3, r3, #52992	; 0xcf00
 81028da:	3340      	adds	r3, #64	; 0x40
 81028dc:	4a29      	ldr	r2, [pc, #164]	; (8102984 <face_recognition_configure_weights+0xaec>)
 81028de:	60d3      	str	r3, [r2, #12]
    conv2d_41_weights_array.format |= AI_FMT_FLAG_CONST;
 81028e0:	4b29      	ldr	r3, [pc, #164]	; (8102988 <face_recognition_configure_weights+0xaf0>)
 81028e2:	681b      	ldr	r3, [r3, #0]
 81028e4:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81028e8:	4a27      	ldr	r2, [pc, #156]	; (8102988 <face_recognition_configure_weights+0xaf0>)
 81028ea:	6013      	str	r3, [r2, #0]
    conv2d_41_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 53632);
 81028ec:	4b19      	ldr	r3, [pc, #100]	; (8102954 <face_recognition_configure_weights+0xabc>)
 81028ee:	681b      	ldr	r3, [r3, #0]
 81028f0:	f503 4351 	add.w	r3, r3, #53504	; 0xd100
 81028f4:	3380      	adds	r3, #128	; 0x80
 81028f6:	4a24      	ldr	r2, [pc, #144]	; (8102988 <face_recognition_configure_weights+0xaf0>)
 81028f8:	6093      	str	r3, [r2, #8]
    conv2d_41_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 53632);
 81028fa:	4b16      	ldr	r3, [pc, #88]	; (8102954 <face_recognition_configure_weights+0xabc>)
 81028fc:	681b      	ldr	r3, [r3, #0]
 81028fe:	f503 4351 	add.w	r3, r3, #53504	; 0xd100
 8102902:	3380      	adds	r3, #128	; 0x80
 8102904:	4a20      	ldr	r2, [pc, #128]	; (8102988 <face_recognition_configure_weights+0xaf0>)
 8102906:	60d3      	str	r3, [r2, #12]
    conv2d_41_bias_array.format |= AI_FMT_FLAG_CONST;
 8102908:	4b20      	ldr	r3, [pc, #128]	; (810298c <face_recognition_configure_weights+0xaf4>)
 810290a:	681b      	ldr	r3, [r3, #0]
 810290c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102910:	4a1e      	ldr	r2, [pc, #120]	; (810298c <face_recognition_configure_weights+0xaf4>)
 8102912:	6013      	str	r3, [r2, #0]
    conv2d_41_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 54928);
 8102914:	4b0f      	ldr	r3, [pc, #60]	; (8102954 <face_recognition_configure_weights+0xabc>)
 8102916:	681b      	ldr	r3, [r3, #0]
 8102918:	f503 4356 	add.w	r3, r3, #54784	; 0xd600
 810291c:	3390      	adds	r3, #144	; 0x90
 810291e:	4a1b      	ldr	r2, [pc, #108]	; (810298c <face_recognition_configure_weights+0xaf4>)
 8102920:	6093      	str	r3, [r2, #8]
    conv2d_41_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 54928);
 8102922:	4b0c      	ldr	r3, [pc, #48]	; (8102954 <face_recognition_configure_weights+0xabc>)
 8102924:	681b      	ldr	r3, [r3, #0]
 8102926:	f503 4356 	add.w	r3, r3, #54784	; 0xd600
 810292a:	3390      	adds	r3, #144	; 0x90
 810292c:	4a17      	ldr	r2, [pc, #92]	; (810298c <face_recognition_configure_weights+0xaf4>)
 810292e:	60d3      	str	r3, [r2, #12]
    conv2d_42_weights_array.format |= AI_FMT_FLAG_CONST;
 8102930:	4b17      	ldr	r3, [pc, #92]	; (8102990 <face_recognition_configure_weights+0xaf8>)
 8102932:	681b      	ldr	r3, [r3, #0]
 8102934:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102938:	4a15      	ldr	r2, [pc, #84]	; (8102990 <face_recognition_configure_weights+0xaf8>)
 810293a:	6013      	str	r3, [r2, #0]
    conv2d_42_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 55504);
 810293c:	4b05      	ldr	r3, [pc, #20]	; (8102954 <face_recognition_configure_weights+0xabc>)
 810293e:	681b      	ldr	r3, [r3, #0]
 8102940:	f503 4358 	add.w	r3, r3, #55296	; 0xd800
 8102944:	33d0      	adds	r3, #208	; 0xd0
 8102946:	4a12      	ldr	r2, [pc, #72]	; (8102990 <face_recognition_configure_weights+0xaf8>)
 8102948:	6093      	str	r3, [r2, #8]
 810294a:	e023      	b.n	8102994 <face_recognition_configure_weights+0xafc>
 810294c:	10000850 	.word	0x10000850
 8102950:	10000860 	.word	0x10000860
 8102954:	1003f914 	.word	0x1003f914
 8102958:	10000870 	.word	0x10000870
 810295c:	10000880 	.word	0x10000880
 8102960:	10000890 	.word	0x10000890
 8102964:	100008a0 	.word	0x100008a0
 8102968:	100008b0 	.word	0x100008b0
 810296c:	100008c0 	.word	0x100008c0
 8102970:	100008d0 	.word	0x100008d0
 8102974:	100008e0 	.word	0x100008e0
 8102978:	100008f0 	.word	0x100008f0
 810297c:	10000900 	.word	0x10000900
 8102980:	10000910 	.word	0x10000910
 8102984:	10000920 	.word	0x10000920
 8102988:	10000930 	.word	0x10000930
 810298c:	10000940 	.word	0x10000940
 8102990:	10000950 	.word	0x10000950
    conv2d_42_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 55504);
 8102994:	4ba0      	ldr	r3, [pc, #640]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102996:	681b      	ldr	r3, [r3, #0]
 8102998:	f503 4358 	add.w	r3, r3, #55296	; 0xd800
 810299c:	33d0      	adds	r3, #208	; 0xd0
 810299e:	4a9f      	ldr	r2, [pc, #636]	; (8102c1c <face_recognition_configure_weights+0xd84>)
 81029a0:	60d3      	str	r3, [r2, #12]
    conv2d_42_bias_array.format |= AI_FMT_FLAG_CONST;
 81029a2:	4b9f      	ldr	r3, [pc, #636]	; (8102c20 <face_recognition_configure_weights+0xd88>)
 81029a4:	681b      	ldr	r3, [r3, #0]
 81029a6:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81029aa:	4a9d      	ldr	r2, [pc, #628]	; (8102c20 <face_recognition_configure_weights+0xd88>)
 81029ac:	6013      	str	r3, [r2, #0]
    conv2d_42_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 60112);
 81029ae:	4b9a      	ldr	r3, [pc, #616]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 81029b0:	681b      	ldr	r3, [r3, #0]
 81029b2:	f503 436a 	add.w	r3, r3, #59904	; 0xea00
 81029b6:	33d0      	adds	r3, #208	; 0xd0
 81029b8:	4a99      	ldr	r2, [pc, #612]	; (8102c20 <face_recognition_configure_weights+0xd88>)
 81029ba:	6093      	str	r3, [r2, #8]
    conv2d_42_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 60112);
 81029bc:	4b96      	ldr	r3, [pc, #600]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 81029be:	681b      	ldr	r3, [r3, #0]
 81029c0:	f503 436a 	add.w	r3, r3, #59904	; 0xea00
 81029c4:	33d0      	adds	r3, #208	; 0xd0
 81029c6:	4a96      	ldr	r2, [pc, #600]	; (8102c20 <face_recognition_configure_weights+0xd88>)
 81029c8:	60d3      	str	r3, [r2, #12]
    conv2d_43_weights_array.format |= AI_FMT_FLAG_CONST;
 81029ca:	4b96      	ldr	r3, [pc, #600]	; (8102c24 <face_recognition_configure_weights+0xd8c>)
 81029cc:	681b      	ldr	r3, [r3, #0]
 81029ce:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81029d2:	4a94      	ldr	r2, [pc, #592]	; (8102c24 <face_recognition_configure_weights+0xd8c>)
 81029d4:	6013      	str	r3, [r2, #0]
    conv2d_43_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 60240);
 81029d6:	4b90      	ldr	r3, [pc, #576]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 81029d8:	681b      	ldr	r3, [r3, #0]
 81029da:	f503 436b 	add.w	r3, r3, #60160	; 0xeb00
 81029de:	3350      	adds	r3, #80	; 0x50
 81029e0:	4a90      	ldr	r2, [pc, #576]	; (8102c24 <face_recognition_configure_weights+0xd8c>)
 81029e2:	6093      	str	r3, [r2, #8]
    conv2d_43_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 60240);
 81029e4:	4b8c      	ldr	r3, [pc, #560]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 81029e6:	681b      	ldr	r3, [r3, #0]
 81029e8:	f503 436b 	add.w	r3, r3, #60160	; 0xeb00
 81029ec:	3350      	adds	r3, #80	; 0x50
 81029ee:	4a8d      	ldr	r2, [pc, #564]	; (8102c24 <face_recognition_configure_weights+0xd8c>)
 81029f0:	60d3      	str	r3, [r2, #12]
    conv2d_43_bias_array.format |= AI_FMT_FLAG_CONST;
 81029f2:	4b8d      	ldr	r3, [pc, #564]	; (8102c28 <face_recognition_configure_weights+0xd90>)
 81029f4:	681b      	ldr	r3, [r3, #0]
 81029f6:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81029fa:	4a8b      	ldr	r2, [pc, #556]	; (8102c28 <face_recognition_configure_weights+0xd90>)
 81029fc:	6013      	str	r3, [r2, #0]
    conv2d_43_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 66384);
 81029fe:	4b86      	ldr	r3, [pc, #536]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102a00:	681b      	ldr	r3, [r3, #0]
 8102a02:	f503 3381 	add.w	r3, r3, #66048	; 0x10200
 8102a06:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 8102a0a:	4a87      	ldr	r2, [pc, #540]	; (8102c28 <face_recognition_configure_weights+0xd90>)
 8102a0c:	6093      	str	r3, [r2, #8]
    conv2d_43_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 66384);
 8102a0e:	4b82      	ldr	r3, [pc, #520]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102a10:	681b      	ldr	r3, [r3, #0]
 8102a12:	f503 3381 	add.w	r3, r3, #66048	; 0x10200
 8102a16:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 8102a1a:	4a83      	ldr	r2, [pc, #524]	; (8102c28 <face_recognition_configure_weights+0xd90>)
 8102a1c:	60d3      	str	r3, [r2, #12]
    conv2d_44_weights_array.format |= AI_FMT_FLAG_CONST;
 8102a1e:	4b83      	ldr	r3, [pc, #524]	; (8102c2c <face_recognition_configure_weights+0xd94>)
 8102a20:	681b      	ldr	r3, [r3, #0]
 8102a22:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102a26:	4a81      	ldr	r2, [pc, #516]	; (8102c2c <face_recognition_configure_weights+0xd94>)
 8102a28:	6013      	str	r3, [r2, #0]
    conv2d_44_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 67152);
 8102a2a:	4b7b      	ldr	r3, [pc, #492]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102a2c:	681b      	ldr	r3, [r3, #0]
 8102a2e:	f503 3383 	add.w	r3, r3, #67072	; 0x10600
 8102a32:	3350      	adds	r3, #80	; 0x50
 8102a34:	4a7d      	ldr	r2, [pc, #500]	; (8102c2c <face_recognition_configure_weights+0xd94>)
 8102a36:	6093      	str	r3, [r2, #8]
    conv2d_44_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 67152);
 8102a38:	4b77      	ldr	r3, [pc, #476]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102a3a:	681b      	ldr	r3, [r3, #0]
 8102a3c:	f503 3383 	add.w	r3, r3, #67072	; 0x10600
 8102a40:	3350      	adds	r3, #80	; 0x50
 8102a42:	4a7a      	ldr	r2, [pc, #488]	; (8102c2c <face_recognition_configure_weights+0xd94>)
 8102a44:	60d3      	str	r3, [r2, #12]
    conv2d_44_bias_array.format |= AI_FMT_FLAG_CONST;
 8102a46:	4b7a      	ldr	r3, [pc, #488]	; (8102c30 <face_recognition_configure_weights+0xd98>)
 8102a48:	681b      	ldr	r3, [r3, #0]
 8102a4a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102a4e:	4a78      	ldr	r2, [pc, #480]	; (8102c30 <face_recognition_configure_weights+0xd98>)
 8102a50:	6013      	str	r3, [r2, #0]
    conv2d_44_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 68880);
 8102a52:	4b71      	ldr	r3, [pc, #452]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102a54:	681b      	ldr	r3, [r3, #0]
 8102a56:	f503 3386 	add.w	r3, r3, #68608	; 0x10c00
 8102a5a:	f503 7388 	add.w	r3, r3, #272	; 0x110
 8102a5e:	4a74      	ldr	r2, [pc, #464]	; (8102c30 <face_recognition_configure_weights+0xd98>)
 8102a60:	6093      	str	r3, [r2, #8]
    conv2d_44_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 68880);
 8102a62:	4b6d      	ldr	r3, [pc, #436]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102a64:	681b      	ldr	r3, [r3, #0]
 8102a66:	f503 3386 	add.w	r3, r3, #68608	; 0x10c00
 8102a6a:	f503 7388 	add.w	r3, r3, #272	; 0x110
 8102a6e:	4a70      	ldr	r2, [pc, #448]	; (8102c30 <face_recognition_configure_weights+0xd98>)
 8102a70:	60d3      	str	r3, [r2, #12]
    conv2d_45_weights_array.format |= AI_FMT_FLAG_CONST;
 8102a72:	4b70      	ldr	r3, [pc, #448]	; (8102c34 <face_recognition_configure_weights+0xd9c>)
 8102a74:	681b      	ldr	r3, [r3, #0]
 8102a76:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102a7a:	4a6e      	ldr	r2, [pc, #440]	; (8102c34 <face_recognition_configure_weights+0xd9c>)
 8102a7c:	6013      	str	r3, [r2, #0]
    conv2d_45_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 69648);
 8102a7e:	4b66      	ldr	r3, [pc, #408]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102a80:	681b      	ldr	r3, [r3, #0]
 8102a82:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8102a86:	3310      	adds	r3, #16
 8102a88:	4a6a      	ldr	r2, [pc, #424]	; (8102c34 <face_recognition_configure_weights+0xd9c>)
 8102a8a:	6093      	str	r3, [r2, #8]
    conv2d_45_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 69648);
 8102a8c:	4b62      	ldr	r3, [pc, #392]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102a8e:	681b      	ldr	r3, [r3, #0]
 8102a90:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8102a94:	3310      	adds	r3, #16
 8102a96:	4a67      	ldr	r2, [pc, #412]	; (8102c34 <face_recognition_configure_weights+0xd9c>)
 8102a98:	60d3      	str	r3, [r2, #12]
    conv2d_45_bias_array.format |= AI_FMT_FLAG_CONST;
 8102a9a:	4b67      	ldr	r3, [pc, #412]	; (8102c38 <face_recognition_configure_weights+0xda0>)
 8102a9c:	681b      	ldr	r3, [r3, #0]
 8102a9e:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102aa2:	4a65      	ldr	r2, [pc, #404]	; (8102c38 <face_recognition_configure_weights+0xda0>)
 8102aa4:	6013      	str	r3, [r2, #0]
    conv2d_45_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 75792);
 8102aa6:	4b5c      	ldr	r3, [pc, #368]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102aa8:	681b      	ldr	r3, [r3, #0]
 8102aaa:	f503 3394 	add.w	r3, r3, #75776	; 0x12800
 8102aae:	3310      	adds	r3, #16
 8102ab0:	4a61      	ldr	r2, [pc, #388]	; (8102c38 <face_recognition_configure_weights+0xda0>)
 8102ab2:	6093      	str	r3, [r2, #8]
    conv2d_45_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 75792);
 8102ab4:	4b58      	ldr	r3, [pc, #352]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102ab6:	681b      	ldr	r3, [r3, #0]
 8102ab8:	f503 3394 	add.w	r3, r3, #75776	; 0x12800
 8102abc:	3310      	adds	r3, #16
 8102abe:	4a5e      	ldr	r2, [pc, #376]	; (8102c38 <face_recognition_configure_weights+0xda0>)
 8102ac0:	60d3      	str	r3, [r2, #12]
    conv2d_47_weights_array.format |= AI_FMT_FLAG_CONST;
 8102ac2:	4b5e      	ldr	r3, [pc, #376]	; (8102c3c <face_recognition_configure_weights+0xda4>)
 8102ac4:	681b      	ldr	r3, [r3, #0]
 8102ac6:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102aca:	4a5c      	ldr	r2, [pc, #368]	; (8102c3c <face_recognition_configure_weights+0xda4>)
 8102acc:	6013      	str	r3, [r2, #0]
    conv2d_47_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 75920);
 8102ace:	4b52      	ldr	r3, [pc, #328]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102ad0:	681b      	ldr	r3, [r3, #0]
 8102ad2:	f503 3394 	add.w	r3, r3, #75776	; 0x12800
 8102ad6:	3390      	adds	r3, #144	; 0x90
 8102ad8:	4a58      	ldr	r2, [pc, #352]	; (8102c3c <face_recognition_configure_weights+0xda4>)
 8102ada:	6093      	str	r3, [r2, #8]
    conv2d_47_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 75920);
 8102adc:	4b4e      	ldr	r3, [pc, #312]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102ade:	681b      	ldr	r3, [r3, #0]
 8102ae0:	f503 3394 	add.w	r3, r3, #75776	; 0x12800
 8102ae4:	3390      	adds	r3, #144	; 0x90
 8102ae6:	4a55      	ldr	r2, [pc, #340]	; (8102c3c <face_recognition_configure_weights+0xda4>)
 8102ae8:	60d3      	str	r3, [r2, #12]
    conv2d_47_bias_array.format |= AI_FMT_FLAG_CONST;
 8102aea:	4b55      	ldr	r3, [pc, #340]	; (8102c40 <face_recognition_configure_weights+0xda8>)
 8102aec:	681b      	ldr	r3, [r3, #0]
 8102aee:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102af2:	4a53      	ldr	r2, [pc, #332]	; (8102c40 <face_recognition_configure_weights+0xda8>)
 8102af4:	6013      	str	r3, [r2, #0]
    conv2d_47_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 82064);
 8102af6:	4b48      	ldr	r3, [pc, #288]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102af8:	681b      	ldr	r3, [r3, #0]
 8102afa:	f503 33a0 	add.w	r3, r3, #81920	; 0x14000
 8102afe:	3390      	adds	r3, #144	; 0x90
 8102b00:	4a4f      	ldr	r2, [pc, #316]	; (8102c40 <face_recognition_configure_weights+0xda8>)
 8102b02:	6093      	str	r3, [r2, #8]
    conv2d_47_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 82064);
 8102b04:	4b44      	ldr	r3, [pc, #272]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102b06:	681b      	ldr	r3, [r3, #0]
 8102b08:	f503 33a0 	add.w	r3, r3, #81920	; 0x14000
 8102b0c:	3390      	adds	r3, #144	; 0x90
 8102b0e:	4a4c      	ldr	r2, [pc, #304]	; (8102c40 <face_recognition_configure_weights+0xda8>)
 8102b10:	60d3      	str	r3, [r2, #12]
    conv2d_48_weights_array.format |= AI_FMT_FLAG_CONST;
 8102b12:	4b4c      	ldr	r3, [pc, #304]	; (8102c44 <face_recognition_configure_weights+0xdac>)
 8102b14:	681b      	ldr	r3, [r3, #0]
 8102b16:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102b1a:	4a4a      	ldr	r2, [pc, #296]	; (8102c44 <face_recognition_configure_weights+0xdac>)
 8102b1c:	6013      	str	r3, [r2, #0]
    conv2d_48_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 82832);
 8102b1e:	4b3e      	ldr	r3, [pc, #248]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102b20:	681b      	ldr	r3, [r3, #0]
 8102b22:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
 8102b26:	f503 73c8 	add.w	r3, r3, #400	; 0x190
 8102b2a:	4a46      	ldr	r2, [pc, #280]	; (8102c44 <face_recognition_configure_weights+0xdac>)
 8102b2c:	6093      	str	r3, [r2, #8]
    conv2d_48_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 82832);
 8102b2e:	4b3a      	ldr	r3, [pc, #232]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102b30:	681b      	ldr	r3, [r3, #0]
 8102b32:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
 8102b36:	f503 73c8 	add.w	r3, r3, #400	; 0x190
 8102b3a:	4a42      	ldr	r2, [pc, #264]	; (8102c44 <face_recognition_configure_weights+0xdac>)
 8102b3c:	60d3      	str	r3, [r2, #12]
    conv2d_48_bias_array.format |= AI_FMT_FLAG_CONST;
 8102b3e:	4b42      	ldr	r3, [pc, #264]	; (8102c48 <face_recognition_configure_weights+0xdb0>)
 8102b40:	681b      	ldr	r3, [r3, #0]
 8102b42:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102b46:	4a40      	ldr	r2, [pc, #256]	; (8102c48 <face_recognition_configure_weights+0xdb0>)
 8102b48:	6013      	str	r3, [r2, #0]
    conv2d_48_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 84560);
 8102b4a:	4b33      	ldr	r3, [pc, #204]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102b4c:	681b      	ldr	r3, [r3, #0]
 8102b4e:	f503 33a5 	add.w	r3, r3, #84480	; 0x14a00
 8102b52:	3350      	adds	r3, #80	; 0x50
 8102b54:	4a3c      	ldr	r2, [pc, #240]	; (8102c48 <face_recognition_configure_weights+0xdb0>)
 8102b56:	6093      	str	r3, [r2, #8]
    conv2d_48_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 84560);
 8102b58:	4b2f      	ldr	r3, [pc, #188]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102b5a:	681b      	ldr	r3, [r3, #0]
 8102b5c:	f503 33a5 	add.w	r3, r3, #84480	; 0x14a00
 8102b60:	3350      	adds	r3, #80	; 0x50
 8102b62:	4a39      	ldr	r2, [pc, #228]	; (8102c48 <face_recognition_configure_weights+0xdb0>)
 8102b64:	60d3      	str	r3, [r2, #12]
    conv2d_49_weights_array.format |= AI_FMT_FLAG_CONST;
 8102b66:	4b39      	ldr	r3, [pc, #228]	; (8102c4c <face_recognition_configure_weights+0xdb4>)
 8102b68:	681b      	ldr	r3, [r3, #0]
 8102b6a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102b6e:	4a37      	ldr	r2, [pc, #220]	; (8102c4c <face_recognition_configure_weights+0xdb4>)
 8102b70:	6013      	str	r3, [r2, #0]
    conv2d_49_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 85328);
 8102b72:	4b29      	ldr	r3, [pc, #164]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102b74:	681b      	ldr	r3, [r3, #0]
 8102b76:	f503 33a6 	add.w	r3, r3, #84992	; 0x14c00
 8102b7a:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 8102b7e:	4a33      	ldr	r2, [pc, #204]	; (8102c4c <face_recognition_configure_weights+0xdb4>)
 8102b80:	6093      	str	r3, [r2, #8]
    conv2d_49_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 85328);
 8102b82:	4b25      	ldr	r3, [pc, #148]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102b84:	681b      	ldr	r3, [r3, #0]
 8102b86:	f503 33a6 	add.w	r3, r3, #84992	; 0x14c00
 8102b8a:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 8102b8e:	4a2f      	ldr	r2, [pc, #188]	; (8102c4c <face_recognition_configure_weights+0xdb4>)
 8102b90:	60d3      	str	r3, [r2, #12]
    conv2d_49_bias_array.format |= AI_FMT_FLAG_CONST;
 8102b92:	4b2f      	ldr	r3, [pc, #188]	; (8102c50 <face_recognition_configure_weights+0xdb8>)
 8102b94:	681b      	ldr	r3, [r3, #0]
 8102b96:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102b9a:	4a2d      	ldr	r2, [pc, #180]	; (8102c50 <face_recognition_configure_weights+0xdb8>)
 8102b9c:	6013      	str	r3, [r2, #0]
    conv2d_49_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 91472);
 8102b9e:	4b1e      	ldr	r3, [pc, #120]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102ba0:	681b      	ldr	r3, [r3, #0]
 8102ba2:	f503 33b2 	add.w	r3, r3, #91136	; 0x16400
 8102ba6:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 8102baa:	4a29      	ldr	r2, [pc, #164]	; (8102c50 <face_recognition_configure_weights+0xdb8>)
 8102bac:	6093      	str	r3, [r2, #8]
    conv2d_49_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 91472);
 8102bae:	4b1a      	ldr	r3, [pc, #104]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102bb0:	681b      	ldr	r3, [r3, #0]
 8102bb2:	f503 33b2 	add.w	r3, r3, #91136	; 0x16400
 8102bb6:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 8102bba:	4a25      	ldr	r2, [pc, #148]	; (8102c50 <face_recognition_configure_weights+0xdb8>)
 8102bbc:	60d3      	str	r3, [r2, #12]
    conv2d_51_weights_array.format |= AI_FMT_FLAG_CONST;
 8102bbe:	4b25      	ldr	r3, [pc, #148]	; (8102c54 <face_recognition_configure_weights+0xdbc>)
 8102bc0:	681b      	ldr	r3, [r3, #0]
 8102bc2:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102bc6:	4a23      	ldr	r2, [pc, #140]	; (8102c54 <face_recognition_configure_weights+0xdbc>)
 8102bc8:	6013      	str	r3, [r2, #0]
    conv2d_51_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 91600);
 8102bca:	4b13      	ldr	r3, [pc, #76]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102bcc:	681b      	ldr	r3, [r3, #0]
 8102bce:	f503 33b2 	add.w	r3, r3, #91136	; 0x16400
 8102bd2:	f503 73e8 	add.w	r3, r3, #464	; 0x1d0
 8102bd6:	4a1f      	ldr	r2, [pc, #124]	; (8102c54 <face_recognition_configure_weights+0xdbc>)
 8102bd8:	6093      	str	r3, [r2, #8]
    conv2d_51_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 91600);
 8102bda:	4b0f      	ldr	r3, [pc, #60]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102bdc:	681b      	ldr	r3, [r3, #0]
 8102bde:	f503 33b2 	add.w	r3, r3, #91136	; 0x16400
 8102be2:	f503 73e8 	add.w	r3, r3, #464	; 0x1d0
 8102be6:	4a1b      	ldr	r2, [pc, #108]	; (8102c54 <face_recognition_configure_weights+0xdbc>)
 8102be8:	60d3      	str	r3, [r2, #12]
    conv2d_51_bias_array.format |= AI_FMT_FLAG_CONST;
 8102bea:	4b1b      	ldr	r3, [pc, #108]	; (8102c58 <face_recognition_configure_weights+0xdc0>)
 8102bec:	681b      	ldr	r3, [r3, #0]
 8102bee:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102bf2:	4a19      	ldr	r2, [pc, #100]	; (8102c58 <face_recognition_configure_weights+0xdc0>)
 8102bf4:	6013      	str	r3, [r2, #0]
    conv2d_51_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 97744);
 8102bf6:	4b08      	ldr	r3, [pc, #32]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102bf8:	681b      	ldr	r3, [r3, #0]
 8102bfa:	f503 33be 	add.w	r3, r3, #97280	; 0x17c00
 8102bfe:	f503 73e8 	add.w	r3, r3, #464	; 0x1d0
 8102c02:	4a15      	ldr	r2, [pc, #84]	; (8102c58 <face_recognition_configure_weights+0xdc0>)
 8102c04:	6093      	str	r3, [r2, #8]
    conv2d_51_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 97744);
 8102c06:	4b04      	ldr	r3, [pc, #16]	; (8102c18 <face_recognition_configure_weights+0xd80>)
 8102c08:	681b      	ldr	r3, [r3, #0]
 8102c0a:	f503 33be 	add.w	r3, r3, #97280	; 0x17c00
 8102c0e:	f503 73e8 	add.w	r3, r3, #464	; 0x1d0
 8102c12:	4a11      	ldr	r2, [pc, #68]	; (8102c58 <face_recognition_configure_weights+0xdc0>)
 8102c14:	60d3      	str	r3, [r2, #12]
 8102c16:	e021      	b.n	8102c5c <face_recognition_configure_weights+0xdc4>
 8102c18:	1003f914 	.word	0x1003f914
 8102c1c:	10000950 	.word	0x10000950
 8102c20:	10000960 	.word	0x10000960
 8102c24:	10000970 	.word	0x10000970
 8102c28:	10000980 	.word	0x10000980
 8102c2c:	10000990 	.word	0x10000990
 8102c30:	100009a0 	.word	0x100009a0
 8102c34:	100009b0 	.word	0x100009b0
 8102c38:	100009c0 	.word	0x100009c0
 8102c3c:	100009d0 	.word	0x100009d0
 8102c40:	100009e0 	.word	0x100009e0
 8102c44:	100009f0 	.word	0x100009f0
 8102c48:	10000a00 	.word	0x10000a00
 8102c4c:	10000a10 	.word	0x10000a10
 8102c50:	10000a20 	.word	0x10000a20
 8102c54:	10000a30 	.word	0x10000a30
 8102c58:	10000a40 	.word	0x10000a40
    conv2d_53_weights_array.format |= AI_FMT_FLAG_CONST;
 8102c5c:	4ba1      	ldr	r3, [pc, #644]	; (8102ee4 <face_recognition_configure_weights+0x104c>)
 8102c5e:	681b      	ldr	r3, [r3, #0]
 8102c60:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102c64:	4a9f      	ldr	r2, [pc, #636]	; (8102ee4 <face_recognition_configure_weights+0x104c>)
 8102c66:	6013      	str	r3, [r2, #0]
    conv2d_53_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 98512);
 8102c68:	4b9f      	ldr	r3, [pc, #636]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102c6a:	681b      	ldr	r3, [r3, #0]
 8102c6c:	f503 33c0 	add.w	r3, r3, #98304	; 0x18000
 8102c70:	33d0      	adds	r3, #208	; 0xd0
 8102c72:	4a9c      	ldr	r2, [pc, #624]	; (8102ee4 <face_recognition_configure_weights+0x104c>)
 8102c74:	6093      	str	r3, [r2, #8]
    conv2d_53_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 98512);
 8102c76:	4b9c      	ldr	r3, [pc, #624]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102c78:	681b      	ldr	r3, [r3, #0]
 8102c7a:	f503 33c0 	add.w	r3, r3, #98304	; 0x18000
 8102c7e:	33d0      	adds	r3, #208	; 0xd0
 8102c80:	4a98      	ldr	r2, [pc, #608]	; (8102ee4 <face_recognition_configure_weights+0x104c>)
 8102c82:	60d3      	str	r3, [r2, #12]
    conv2d_53_bias_array.format |= AI_FMT_FLAG_CONST;
 8102c84:	4b99      	ldr	r3, [pc, #612]	; (8102eec <face_recognition_configure_weights+0x1054>)
 8102c86:	681b      	ldr	r3, [r3, #0]
 8102c88:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102c8c:	4a97      	ldr	r2, [pc, #604]	; (8102eec <face_recognition_configure_weights+0x1054>)
 8102c8e:	6013      	str	r3, [r2, #0]
    conv2d_53_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 100240);
 8102c90:	4b95      	ldr	r3, [pc, #596]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102c92:	681b      	ldr	r3, [r3, #0]
 8102c94:	f503 33c3 	add.w	r3, r3, #99840	; 0x18600
 8102c98:	f503 73c8 	add.w	r3, r3, #400	; 0x190
 8102c9c:	4a93      	ldr	r2, [pc, #588]	; (8102eec <face_recognition_configure_weights+0x1054>)
 8102c9e:	6093      	str	r3, [r2, #8]
    conv2d_53_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 100240);
 8102ca0:	4b91      	ldr	r3, [pc, #580]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102ca2:	681b      	ldr	r3, [r3, #0]
 8102ca4:	f503 33c3 	add.w	r3, r3, #99840	; 0x18600
 8102ca8:	f503 73c8 	add.w	r3, r3, #400	; 0x190
 8102cac:	4a8f      	ldr	r2, [pc, #572]	; (8102eec <face_recognition_configure_weights+0x1054>)
 8102cae:	60d3      	str	r3, [r2, #12]
    conv2d_54_weights_array.format |= AI_FMT_FLAG_CONST;
 8102cb0:	4b8f      	ldr	r3, [pc, #572]	; (8102ef0 <face_recognition_configure_weights+0x1058>)
 8102cb2:	681b      	ldr	r3, [r3, #0]
 8102cb4:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102cb8:	4a8d      	ldr	r2, [pc, #564]	; (8102ef0 <face_recognition_configure_weights+0x1058>)
 8102cba:	6013      	str	r3, [r2, #0]
    conv2d_54_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 101008);
 8102cbc:	4b8a      	ldr	r3, [pc, #552]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102cbe:	681b      	ldr	r3, [r3, #0]
 8102cc0:	f503 33c5 	add.w	r3, r3, #100864	; 0x18a00
 8102cc4:	3390      	adds	r3, #144	; 0x90
 8102cc6:	4a8a      	ldr	r2, [pc, #552]	; (8102ef0 <face_recognition_configure_weights+0x1058>)
 8102cc8:	6093      	str	r3, [r2, #8]
    conv2d_54_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 101008);
 8102cca:	4b87      	ldr	r3, [pc, #540]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102ccc:	681b      	ldr	r3, [r3, #0]
 8102cce:	f503 33c5 	add.w	r3, r3, #100864	; 0x18a00
 8102cd2:	3390      	adds	r3, #144	; 0x90
 8102cd4:	4a86      	ldr	r2, [pc, #536]	; (8102ef0 <face_recognition_configure_weights+0x1058>)
 8102cd6:	60d3      	str	r3, [r2, #12]
    conv2d_54_bias_array.format |= AI_FMT_FLAG_CONST;
 8102cd8:	4b86      	ldr	r3, [pc, #536]	; (8102ef4 <face_recognition_configure_weights+0x105c>)
 8102cda:	681b      	ldr	r3, [r3, #0]
 8102cdc:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102ce0:	4a84      	ldr	r2, [pc, #528]	; (8102ef4 <face_recognition_configure_weights+0x105c>)
 8102ce2:	6013      	str	r3, [r2, #0]
    conv2d_54_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 111760);
 8102ce4:	4b80      	ldr	r3, [pc, #512]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102ce6:	681b      	ldr	r3, [r3, #0]
 8102ce8:	f503 33da 	add.w	r3, r3, #111616	; 0x1b400
 8102cec:	3390      	adds	r3, #144	; 0x90
 8102cee:	4a81      	ldr	r2, [pc, #516]	; (8102ef4 <face_recognition_configure_weights+0x105c>)
 8102cf0:	6093      	str	r3, [r2, #8]
    conv2d_54_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 111760);
 8102cf2:	4b7d      	ldr	r3, [pc, #500]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102cf4:	681b      	ldr	r3, [r3, #0]
 8102cf6:	f503 33da 	add.w	r3, r3, #111616	; 0x1b400
 8102cfa:	3390      	adds	r3, #144	; 0x90
 8102cfc:	4a7d      	ldr	r2, [pc, #500]	; (8102ef4 <face_recognition_configure_weights+0x105c>)
 8102cfe:	60d3      	str	r3, [r2, #12]
    conv2d_55_weights_array.format |= AI_FMT_FLAG_CONST;
 8102d00:	4b7d      	ldr	r3, [pc, #500]	; (8102ef8 <face_recognition_configure_weights+0x1060>)
 8102d02:	681b      	ldr	r3, [r3, #0]
 8102d04:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102d08:	4a7b      	ldr	r2, [pc, #492]	; (8102ef8 <face_recognition_configure_weights+0x1060>)
 8102d0a:	6013      	str	r3, [r2, #0]
    conv2d_55_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 111984);
 8102d0c:	4b76      	ldr	r3, [pc, #472]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102d0e:	681b      	ldr	r3, [r3, #0]
 8102d10:	f503 33da 	add.w	r3, r3, #111616	; 0x1b400
 8102d14:	f503 73b8 	add.w	r3, r3, #368	; 0x170
 8102d18:	4a77      	ldr	r2, [pc, #476]	; (8102ef8 <face_recognition_configure_weights+0x1060>)
 8102d1a:	6093      	str	r3, [r2, #8]
    conv2d_55_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 111984);
 8102d1c:	4b72      	ldr	r3, [pc, #456]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102d1e:	681b      	ldr	r3, [r3, #0]
 8102d20:	f503 33da 	add.w	r3, r3, #111616	; 0x1b400
 8102d24:	f503 73b8 	add.w	r3, r3, #368	; 0x170
 8102d28:	4a73      	ldr	r2, [pc, #460]	; (8102ef8 <face_recognition_configure_weights+0x1060>)
 8102d2a:	60d3      	str	r3, [r2, #12]
    conv2d_55_bias_array.format |= AI_FMT_FLAG_CONST;
 8102d2c:	4b73      	ldr	r3, [pc, #460]	; (8102efc <face_recognition_configure_weights+0x1064>)
 8102d2e:	681b      	ldr	r3, [r3, #0]
 8102d30:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102d34:	4a71      	ldr	r2, [pc, #452]	; (8102efc <face_recognition_configure_weights+0x1064>)
 8102d36:	6013      	str	r3, [r2, #0]
    conv2d_55_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 130800);
 8102d38:	4b6b      	ldr	r3, [pc, #428]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102d3a:	681b      	ldr	r3, [r3, #0]
 8102d3c:	f503 33ff 	add.w	r3, r3, #130560	; 0x1fe00
 8102d40:	33f0      	adds	r3, #240	; 0xf0
 8102d42:	4a6e      	ldr	r2, [pc, #440]	; (8102efc <face_recognition_configure_weights+0x1064>)
 8102d44:	6093      	str	r3, [r2, #8]
    conv2d_55_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 130800);
 8102d46:	4b68      	ldr	r3, [pc, #416]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102d48:	681b      	ldr	r3, [r3, #0]
 8102d4a:	f503 33ff 	add.w	r3, r3, #130560	; 0x1fe00
 8102d4e:	33f0      	adds	r3, #240	; 0xf0
 8102d50:	4a6a      	ldr	r2, [pc, #424]	; (8102efc <face_recognition_configure_weights+0x1064>)
 8102d52:	60d3      	str	r3, [r2, #12]
    conv2d_56_weights_array.format |= AI_FMT_FLAG_CONST;
 8102d54:	4b6a      	ldr	r3, [pc, #424]	; (8102f00 <face_recognition_configure_weights+0x1068>)
 8102d56:	681b      	ldr	r3, [r3, #0]
 8102d58:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102d5c:	4a68      	ldr	r2, [pc, #416]	; (8102f00 <face_recognition_configure_weights+0x1068>)
 8102d5e:	6013      	str	r3, [r2, #0]
    conv2d_56_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 132144);
 8102d60:	4b61      	ldr	r3, [pc, #388]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102d62:	681b      	ldr	r3, [r3, #0]
 8102d64:	f503 3301 	add.w	r3, r3, #132096	; 0x20400
 8102d68:	3330      	adds	r3, #48	; 0x30
 8102d6a:	4a65      	ldr	r2, [pc, #404]	; (8102f00 <face_recognition_configure_weights+0x1068>)
 8102d6c:	6093      	str	r3, [r2, #8]
    conv2d_56_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 132144);
 8102d6e:	4b5e      	ldr	r3, [pc, #376]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102d70:	681b      	ldr	r3, [r3, #0]
 8102d72:	f503 3301 	add.w	r3, r3, #132096	; 0x20400
 8102d76:	3330      	adds	r3, #48	; 0x30
 8102d78:	4a61      	ldr	r2, [pc, #388]	; (8102f00 <face_recognition_configure_weights+0x1068>)
 8102d7a:	60d3      	str	r3, [r2, #12]
    conv2d_56_bias_array.format |= AI_FMT_FLAG_CONST;
 8102d7c:	4b61      	ldr	r3, [pc, #388]	; (8102f04 <face_recognition_configure_weights+0x106c>)
 8102d7e:	681b      	ldr	r3, [r3, #0]
 8102d80:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102d84:	4a5f      	ldr	r2, [pc, #380]	; (8102f04 <face_recognition_configure_weights+0x106c>)
 8102d86:	6013      	str	r3, [r2, #0]
    conv2d_56_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 135168);
 8102d88:	4b57      	ldr	r3, [pc, #348]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102d8a:	681b      	ldr	r3, [r3, #0]
 8102d8c:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8102d90:	4a5c      	ldr	r2, [pc, #368]	; (8102f04 <face_recognition_configure_weights+0x106c>)
 8102d92:	6093      	str	r3, [r2, #8]
    conv2d_56_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 135168);
 8102d94:	4b54      	ldr	r3, [pc, #336]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102d96:	681b      	ldr	r3, [r3, #0]
 8102d98:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8102d9c:	4a59      	ldr	r2, [pc, #356]	; (8102f04 <face_recognition_configure_weights+0x106c>)
 8102d9e:	60d3      	str	r3, [r2, #12]
    conv2d_57_weights_array.format |= AI_FMT_FLAG_CONST;
 8102da0:	4b59      	ldr	r3, [pc, #356]	; (8102f08 <face_recognition_configure_weights+0x1070>)
 8102da2:	681b      	ldr	r3, [r3, #0]
 8102da4:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102da8:	4a57      	ldr	r2, [pc, #348]	; (8102f08 <face_recognition_configure_weights+0x1070>)
 8102daa:	6013      	str	r3, [r2, #0]
    conv2d_57_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 136512);
 8102dac:	4b4e      	ldr	r3, [pc, #312]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102dae:	681b      	ldr	r3, [r3, #0]
 8102db0:	f503 3305 	add.w	r3, r3, #136192	; 0x21400
 8102db4:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 8102db8:	4a53      	ldr	r2, [pc, #332]	; (8102f08 <face_recognition_configure_weights+0x1070>)
 8102dba:	6093      	str	r3, [r2, #8]
    conv2d_57_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 136512);
 8102dbc:	4b4a      	ldr	r3, [pc, #296]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102dbe:	681b      	ldr	r3, [r3, #0]
 8102dc0:	f503 3305 	add.w	r3, r3, #136192	; 0x21400
 8102dc4:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 8102dc8:	4a4f      	ldr	r2, [pc, #316]	; (8102f08 <face_recognition_configure_weights+0x1070>)
 8102dca:	60d3      	str	r3, [r2, #12]
    conv2d_57_bias_array.format |= AI_FMT_FLAG_CONST;
 8102dcc:	4b4f      	ldr	r3, [pc, #316]	; (8102f0c <face_recognition_configure_weights+0x1074>)
 8102dce:	681b      	ldr	r3, [r3, #0]
 8102dd0:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102dd4:	4a4d      	ldr	r2, [pc, #308]	; (8102f0c <face_recognition_configure_weights+0x1074>)
 8102dd6:	6013      	str	r3, [r2, #0]
    conv2d_57_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 155328);
 8102dd8:	4b43      	ldr	r3, [pc, #268]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102dda:	681b      	ldr	r3, [r3, #0]
 8102ddc:	f503 3317 	add.w	r3, r3, #154624	; 0x25c00
 8102de0:	f503 7330 	add.w	r3, r3, #704	; 0x2c0
 8102de4:	4a49      	ldr	r2, [pc, #292]	; (8102f0c <face_recognition_configure_weights+0x1074>)
 8102de6:	6093      	str	r3, [r2, #8]
    conv2d_57_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 155328);
 8102de8:	4b3f      	ldr	r3, [pc, #252]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102dea:	681b      	ldr	r3, [r3, #0]
 8102dec:	f503 3317 	add.w	r3, r3, #154624	; 0x25c00
 8102df0:	f503 7330 	add.w	r3, r3, #704	; 0x2c0
 8102df4:	4a45      	ldr	r2, [pc, #276]	; (8102f0c <face_recognition_configure_weights+0x1074>)
 8102df6:	60d3      	str	r3, [r2, #12]
    conv2d_59_weights_array.format |= AI_FMT_FLAG_CONST;
 8102df8:	4b45      	ldr	r3, [pc, #276]	; (8102f10 <face_recognition_configure_weights+0x1078>)
 8102dfa:	681b      	ldr	r3, [r3, #0]
 8102dfc:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102e00:	4a43      	ldr	r2, [pc, #268]	; (8102f10 <face_recognition_configure_weights+0x1078>)
 8102e02:	6013      	str	r3, [r2, #0]
    conv2d_59_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 155552);
 8102e04:	4b38      	ldr	r3, [pc, #224]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102e06:	681b      	ldr	r3, [r3, #0]
 8102e08:	f503 3317 	add.w	r3, r3, #154624	; 0x25c00
 8102e0c:	f503 7368 	add.w	r3, r3, #928	; 0x3a0
 8102e10:	4a3f      	ldr	r2, [pc, #252]	; (8102f10 <face_recognition_configure_weights+0x1078>)
 8102e12:	6093      	str	r3, [r2, #8]
    conv2d_59_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 155552);
 8102e14:	4b34      	ldr	r3, [pc, #208]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102e16:	681b      	ldr	r3, [r3, #0]
 8102e18:	f503 3317 	add.w	r3, r3, #154624	; 0x25c00
 8102e1c:	f503 7368 	add.w	r3, r3, #928	; 0x3a0
 8102e20:	4a3b      	ldr	r2, [pc, #236]	; (8102f10 <face_recognition_configure_weights+0x1078>)
 8102e22:	60d3      	str	r3, [r2, #12]
    conv2d_59_bias_array.format |= AI_FMT_FLAG_CONST;
 8102e24:	4b3b      	ldr	r3, [pc, #236]	; (8102f14 <face_recognition_configure_weights+0x107c>)
 8102e26:	681b      	ldr	r3, [r3, #0]
 8102e28:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102e2c:	4a39      	ldr	r2, [pc, #228]	; (8102f14 <face_recognition_configure_weights+0x107c>)
 8102e2e:	6013      	str	r3, [r2, #0]
    conv2d_59_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 174368);
 8102e30:	4b2d      	ldr	r3, [pc, #180]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102e32:	681b      	ldr	r3, [r3, #0]
 8102e34:	f503 332a 	add.w	r3, r3, #174080	; 0x2a800
 8102e38:	f503 7390 	add.w	r3, r3, #288	; 0x120
 8102e3c:	4a35      	ldr	r2, [pc, #212]	; (8102f14 <face_recognition_configure_weights+0x107c>)
 8102e3e:	6093      	str	r3, [r2, #8]
    conv2d_59_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 174368);
 8102e40:	4b29      	ldr	r3, [pc, #164]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102e42:	681b      	ldr	r3, [r3, #0]
 8102e44:	f503 332a 	add.w	r3, r3, #174080	; 0x2a800
 8102e48:	f503 7390 	add.w	r3, r3, #288	; 0x120
 8102e4c:	4a31      	ldr	r2, [pc, #196]	; (8102f14 <face_recognition_configure_weights+0x107c>)
 8102e4e:	60d3      	str	r3, [r2, #12]
    conv2d_60_weights_array.format |= AI_FMT_FLAG_CONST;
 8102e50:	4b31      	ldr	r3, [pc, #196]	; (8102f18 <face_recognition_configure_weights+0x1080>)
 8102e52:	681b      	ldr	r3, [r3, #0]
 8102e54:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102e58:	4a2f      	ldr	r2, [pc, #188]	; (8102f18 <face_recognition_configure_weights+0x1080>)
 8102e5a:	6013      	str	r3, [r2, #0]
    conv2d_60_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 175712);
 8102e5c:	4b22      	ldr	r3, [pc, #136]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102e5e:	681b      	ldr	r3, [r3, #0]
 8102e60:	f503 332b 	add.w	r3, r3, #175104	; 0x2ac00
 8102e64:	f503 7318 	add.w	r3, r3, #608	; 0x260
 8102e68:	4a2b      	ldr	r2, [pc, #172]	; (8102f18 <face_recognition_configure_weights+0x1080>)
 8102e6a:	6093      	str	r3, [r2, #8]
    conv2d_60_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 175712);
 8102e6c:	4b1e      	ldr	r3, [pc, #120]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102e6e:	681b      	ldr	r3, [r3, #0]
 8102e70:	f503 332b 	add.w	r3, r3, #175104	; 0x2ac00
 8102e74:	f503 7318 	add.w	r3, r3, #608	; 0x260
 8102e78:	4a27      	ldr	r2, [pc, #156]	; (8102f18 <face_recognition_configure_weights+0x1080>)
 8102e7a:	60d3      	str	r3, [r2, #12]
    conv2d_60_bias_array.format |= AI_FMT_FLAG_CONST;
 8102e7c:	4b27      	ldr	r3, [pc, #156]	; (8102f1c <face_recognition_configure_weights+0x1084>)
 8102e7e:	681b      	ldr	r3, [r3, #0]
 8102e80:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102e84:	4a25      	ldr	r2, [pc, #148]	; (8102f1c <face_recognition_configure_weights+0x1084>)
 8102e86:	6013      	str	r3, [r2, #0]
    conv2d_60_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 178736);
 8102e88:	4b17      	ldr	r3, [pc, #92]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102e8a:	681b      	ldr	r3, [r3, #0]
 8102e8c:	f503 332e 	add.w	r3, r3, #178176	; 0x2b800
 8102e90:	f503 730c 	add.w	r3, r3, #560	; 0x230
 8102e94:	4a21      	ldr	r2, [pc, #132]	; (8102f1c <face_recognition_configure_weights+0x1084>)
 8102e96:	6093      	str	r3, [r2, #8]
    conv2d_60_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 178736);
 8102e98:	4b13      	ldr	r3, [pc, #76]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102e9a:	681b      	ldr	r3, [r3, #0]
 8102e9c:	f503 332e 	add.w	r3, r3, #178176	; 0x2b800
 8102ea0:	f503 730c 	add.w	r3, r3, #560	; 0x230
 8102ea4:	4a1d      	ldr	r2, [pc, #116]	; (8102f1c <face_recognition_configure_weights+0x1084>)
 8102ea6:	60d3      	str	r3, [r2, #12]
    conv2d_61_weights_array.format |= AI_FMT_FLAG_CONST;
 8102ea8:	4b1d      	ldr	r3, [pc, #116]	; (8102f20 <face_recognition_configure_weights+0x1088>)
 8102eaa:	681b      	ldr	r3, [r3, #0]
 8102eac:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102eb0:	4a1b      	ldr	r2, [pc, #108]	; (8102f20 <face_recognition_configure_weights+0x1088>)
 8102eb2:	6013      	str	r3, [r2, #0]
    conv2d_61_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 180080);
 8102eb4:	4b0c      	ldr	r3, [pc, #48]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102eb6:	681b      	ldr	r3, [r3, #0]
 8102eb8:	f503 332f 	add.w	r3, r3, #179200	; 0x2bc00
 8102ebc:	f503 735c 	add.w	r3, r3, #880	; 0x370
 8102ec0:	4a17      	ldr	r2, [pc, #92]	; (8102f20 <face_recognition_configure_weights+0x1088>)
 8102ec2:	6093      	str	r3, [r2, #8]
    conv2d_61_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 180080);
 8102ec4:	4b08      	ldr	r3, [pc, #32]	; (8102ee8 <face_recognition_configure_weights+0x1050>)
 8102ec6:	681b      	ldr	r3, [r3, #0]
 8102ec8:	f503 332f 	add.w	r3, r3, #179200	; 0x2bc00
 8102ecc:	f503 735c 	add.w	r3, r3, #880	; 0x370
 8102ed0:	4a13      	ldr	r2, [pc, #76]	; (8102f20 <face_recognition_configure_weights+0x1088>)
 8102ed2:	60d3      	str	r3, [r2, #12]
    conv2d_61_bias_array.format |= AI_FMT_FLAG_CONST;
 8102ed4:	4b13      	ldr	r3, [pc, #76]	; (8102f24 <face_recognition_configure_weights+0x108c>)
 8102ed6:	681b      	ldr	r3, [r3, #0]
 8102ed8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102edc:	4a11      	ldr	r2, [pc, #68]	; (8102f24 <face_recognition_configure_weights+0x108c>)
 8102ede:	6013      	str	r3, [r2, #0]
 8102ee0:	e022      	b.n	8102f28 <face_recognition_configure_weights+0x1090>
 8102ee2:	bf00      	nop
 8102ee4:	10000a50 	.word	0x10000a50
 8102ee8:	1003f914 	.word	0x1003f914
 8102eec:	10000a60 	.word	0x10000a60
 8102ef0:	10000a70 	.word	0x10000a70
 8102ef4:	10000a80 	.word	0x10000a80
 8102ef8:	10000a90 	.word	0x10000a90
 8102efc:	10000aa0 	.word	0x10000aa0
 8102f00:	10000ab0 	.word	0x10000ab0
 8102f04:	10000ac0 	.word	0x10000ac0
 8102f08:	10000ad0 	.word	0x10000ad0
 8102f0c:	10000ae0 	.word	0x10000ae0
 8102f10:	10000af0 	.word	0x10000af0
 8102f14:	10000b00 	.word	0x10000b00
 8102f18:	10000b10 	.word	0x10000b10
 8102f1c:	10000b20 	.word	0x10000b20
 8102f20:	10000b30 	.word	0x10000b30
 8102f24:	10000b40 	.word	0x10000b40
    conv2d_61_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 198896);
 8102f28:	4b77      	ldr	r3, [pc, #476]	; (8103108 <face_recognition_configure_weights+0x1270>)
 8102f2a:	681b      	ldr	r3, [r3, #0]
 8102f2c:	f503 3342 	add.w	r3, r3, #198656	; 0x30800
 8102f30:	33f0      	adds	r3, #240	; 0xf0
 8102f32:	4a76      	ldr	r2, [pc, #472]	; (810310c <face_recognition_configure_weights+0x1274>)
 8102f34:	6093      	str	r3, [r2, #8]
    conv2d_61_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 198896);
 8102f36:	4b74      	ldr	r3, [pc, #464]	; (8103108 <face_recognition_configure_weights+0x1270>)
 8102f38:	681b      	ldr	r3, [r3, #0]
 8102f3a:	f503 3342 	add.w	r3, r3, #198656	; 0x30800
 8102f3e:	33f0      	adds	r3, #240	; 0xf0
 8102f40:	4a72      	ldr	r2, [pc, #456]	; (810310c <face_recognition_configure_weights+0x1274>)
 8102f42:	60d3      	str	r3, [r2, #12]
    conv2d_63_weights_array.format |= AI_FMT_FLAG_CONST;
 8102f44:	4b72      	ldr	r3, [pc, #456]	; (8103110 <face_recognition_configure_weights+0x1278>)
 8102f46:	681b      	ldr	r3, [r3, #0]
 8102f48:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102f4c:	4a70      	ldr	r2, [pc, #448]	; (8103110 <face_recognition_configure_weights+0x1278>)
 8102f4e:	6013      	str	r3, [r2, #0]
    conv2d_63_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 199120);
 8102f50:	4b6d      	ldr	r3, [pc, #436]	; (8103108 <face_recognition_configure_weights+0x1270>)
 8102f52:	681b      	ldr	r3, [r3, #0]
 8102f54:	f503 3342 	add.w	r3, r3, #198656	; 0x30800
 8102f58:	f503 73e8 	add.w	r3, r3, #464	; 0x1d0
 8102f5c:	4a6c      	ldr	r2, [pc, #432]	; (8103110 <face_recognition_configure_weights+0x1278>)
 8102f5e:	6093      	str	r3, [r2, #8]
    conv2d_63_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 199120);
 8102f60:	4b69      	ldr	r3, [pc, #420]	; (8103108 <face_recognition_configure_weights+0x1270>)
 8102f62:	681b      	ldr	r3, [r3, #0]
 8102f64:	f503 3342 	add.w	r3, r3, #198656	; 0x30800
 8102f68:	f503 73e8 	add.w	r3, r3, #464	; 0x1d0
 8102f6c:	4a68      	ldr	r2, [pc, #416]	; (8103110 <face_recognition_configure_weights+0x1278>)
 8102f6e:	60d3      	str	r3, [r2, #12]
    conv2d_63_bias_array.format |= AI_FMT_FLAG_CONST;
 8102f70:	4b68      	ldr	r3, [pc, #416]	; (8103114 <face_recognition_configure_weights+0x127c>)
 8102f72:	681b      	ldr	r3, [r3, #0]
 8102f74:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102f78:	4a66      	ldr	r2, [pc, #408]	; (8103114 <face_recognition_configure_weights+0x127c>)
 8102f7a:	6013      	str	r3, [r2, #0]
    conv2d_63_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 217936);
 8102f7c:	4b62      	ldr	r3, [pc, #392]	; (8103108 <face_recognition_configure_weights+0x1270>)
 8102f7e:	681b      	ldr	r3, [r3, #0]
 8102f80:	f503 3354 	add.w	r3, r3, #217088	; 0x35000
 8102f84:	f503 7354 	add.w	r3, r3, #848	; 0x350
 8102f88:	4a62      	ldr	r2, [pc, #392]	; (8103114 <face_recognition_configure_weights+0x127c>)
 8102f8a:	6093      	str	r3, [r2, #8]
    conv2d_63_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 217936);
 8102f8c:	4b5e      	ldr	r3, [pc, #376]	; (8103108 <face_recognition_configure_weights+0x1270>)
 8102f8e:	681b      	ldr	r3, [r3, #0]
 8102f90:	f503 3354 	add.w	r3, r3, #217088	; 0x35000
 8102f94:	f503 7354 	add.w	r3, r3, #848	; 0x350
 8102f98:	4a5e      	ldr	r2, [pc, #376]	; (8103114 <face_recognition_configure_weights+0x127c>)
 8102f9a:	60d3      	str	r3, [r2, #12]
    conv2d_64_weights_array.format |= AI_FMT_FLAG_CONST;
 8102f9c:	4b5e      	ldr	r3, [pc, #376]	; (8103118 <face_recognition_configure_weights+0x1280>)
 8102f9e:	681b      	ldr	r3, [r3, #0]
 8102fa0:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102fa4:	4a5c      	ldr	r2, [pc, #368]	; (8103118 <face_recognition_configure_weights+0x1280>)
 8102fa6:	6013      	str	r3, [r2, #0]
    conv2d_64_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 219280);
 8102fa8:	4b57      	ldr	r3, [pc, #348]	; (8103108 <face_recognition_configure_weights+0x1270>)
 8102faa:	681b      	ldr	r3, [r3, #0]
 8102fac:	f503 3356 	add.w	r3, r3, #219136	; 0x35800
 8102fb0:	3390      	adds	r3, #144	; 0x90
 8102fb2:	4a59      	ldr	r2, [pc, #356]	; (8103118 <face_recognition_configure_weights+0x1280>)
 8102fb4:	6093      	str	r3, [r2, #8]
    conv2d_64_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 219280);
 8102fb6:	4b54      	ldr	r3, [pc, #336]	; (8103108 <face_recognition_configure_weights+0x1270>)
 8102fb8:	681b      	ldr	r3, [r3, #0]
 8102fba:	f503 3356 	add.w	r3, r3, #219136	; 0x35800
 8102fbe:	3390      	adds	r3, #144	; 0x90
 8102fc0:	4a55      	ldr	r2, [pc, #340]	; (8103118 <face_recognition_configure_weights+0x1280>)
 8102fc2:	60d3      	str	r3, [r2, #12]
    conv2d_64_bias_array.format |= AI_FMT_FLAG_CONST;
 8102fc4:	4b55      	ldr	r3, [pc, #340]	; (810311c <face_recognition_configure_weights+0x1284>)
 8102fc6:	681b      	ldr	r3, [r3, #0]
 8102fc8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102fcc:	4a53      	ldr	r2, [pc, #332]	; (810311c <face_recognition_configure_weights+0x1284>)
 8102fce:	6013      	str	r3, [r2, #0]
    conv2d_64_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 222304);
 8102fd0:	4b4d      	ldr	r3, [pc, #308]	; (8103108 <face_recognition_configure_weights+0x1270>)
 8102fd2:	681b      	ldr	r3, [r3, #0]
 8102fd4:	f503 3359 	add.w	r3, r3, #222208	; 0x36400
 8102fd8:	3360      	adds	r3, #96	; 0x60
 8102fda:	4a50      	ldr	r2, [pc, #320]	; (810311c <face_recognition_configure_weights+0x1284>)
 8102fdc:	6093      	str	r3, [r2, #8]
    conv2d_64_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 222304);
 8102fde:	4b4a      	ldr	r3, [pc, #296]	; (8103108 <face_recognition_configure_weights+0x1270>)
 8102fe0:	681b      	ldr	r3, [r3, #0]
 8102fe2:	f503 3359 	add.w	r3, r3, #222208	; 0x36400
 8102fe6:	3360      	adds	r3, #96	; 0x60
 8102fe8:	4a4c      	ldr	r2, [pc, #304]	; (810311c <face_recognition_configure_weights+0x1284>)
 8102fea:	60d3      	str	r3, [r2, #12]
    conv2d_65_weights_array.format |= AI_FMT_FLAG_CONST;
 8102fec:	4b4c      	ldr	r3, [pc, #304]	; (8103120 <face_recognition_configure_weights+0x1288>)
 8102fee:	681b      	ldr	r3, [r3, #0]
 8102ff0:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8102ff4:	4a4a      	ldr	r2, [pc, #296]	; (8103120 <face_recognition_configure_weights+0x1288>)
 8102ff6:	6013      	str	r3, [r2, #0]
    conv2d_65_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 223648);
 8102ff8:	4b43      	ldr	r3, [pc, #268]	; (8103108 <face_recognition_configure_weights+0x1270>)
 8102ffa:	681b      	ldr	r3, [r3, #0]
 8102ffc:	f503 335a 	add.w	r3, r3, #223232	; 0x36800
 8103000:	f503 73d0 	add.w	r3, r3, #416	; 0x1a0
 8103004:	4a46      	ldr	r2, [pc, #280]	; (8103120 <face_recognition_configure_weights+0x1288>)
 8103006:	6093      	str	r3, [r2, #8]
    conv2d_65_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 223648);
 8103008:	4b3f      	ldr	r3, [pc, #252]	; (8103108 <face_recognition_configure_weights+0x1270>)
 810300a:	681b      	ldr	r3, [r3, #0]
 810300c:	f503 335a 	add.w	r3, r3, #223232	; 0x36800
 8103010:	f503 73d0 	add.w	r3, r3, #416	; 0x1a0
 8103014:	4a42      	ldr	r2, [pc, #264]	; (8103120 <face_recognition_configure_weights+0x1288>)
 8103016:	60d3      	str	r3, [r2, #12]
    conv2d_65_bias_array.format |= AI_FMT_FLAG_CONST;
 8103018:	4b42      	ldr	r3, [pc, #264]	; (8103124 <face_recognition_configure_weights+0x128c>)
 810301a:	681b      	ldr	r3, [r3, #0]
 810301c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8103020:	4a40      	ldr	r2, [pc, #256]	; (8103124 <face_recognition_configure_weights+0x128c>)
 8103022:	6013      	str	r3, [r2, #0]
    conv2d_65_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 261280);
 8103024:	4b38      	ldr	r3, [pc, #224]	; (8103108 <face_recognition_configure_weights+0x1270>)
 8103026:	681b      	ldr	r3, [r3, #0]
 8103028:	f503 337f 	add.w	r3, r3, #261120	; 0x3fc00
 810302c:	33a0      	adds	r3, #160	; 0xa0
 810302e:	4a3d      	ldr	r2, [pc, #244]	; (8103124 <face_recognition_configure_weights+0x128c>)
 8103030:	6093      	str	r3, [r2, #8]
    conv2d_65_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 261280);
 8103032:	4b35      	ldr	r3, [pc, #212]	; (8103108 <face_recognition_configure_weights+0x1270>)
 8103034:	681b      	ldr	r3, [r3, #0]
 8103036:	f503 337f 	add.w	r3, r3, #261120	; 0x3fc00
 810303a:	33a0      	adds	r3, #160	; 0xa0
 810303c:	4a39      	ldr	r2, [pc, #228]	; (8103124 <face_recognition_configure_weights+0x128c>)
 810303e:	60d3      	str	r3, [r2, #12]
    conv2d_66_weights_array.format |= AI_FMT_FLAG_CONST;
 8103040:	4b39      	ldr	r3, [pc, #228]	; (8103128 <face_recognition_configure_weights+0x1290>)
 8103042:	681b      	ldr	r3, [r3, #0]
 8103044:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8103048:	4a37      	ldr	r2, [pc, #220]	; (8103128 <face_recognition_configure_weights+0x1290>)
 810304a:	6013      	str	r3, [r2, #0]
    conv2d_66_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 261728);
 810304c:	4b2e      	ldr	r3, [pc, #184]	; (8103108 <face_recognition_configure_weights+0x1270>)
 810304e:	681b      	ldr	r3, [r3, #0]
 8103050:	f503 337f 	add.w	r3, r3, #261120	; 0x3fc00
 8103054:	f503 7318 	add.w	r3, r3, #608	; 0x260
 8103058:	4a33      	ldr	r2, [pc, #204]	; (8103128 <face_recognition_configure_weights+0x1290>)
 810305a:	6093      	str	r3, [r2, #8]
    conv2d_66_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 261728);
 810305c:	4b2a      	ldr	r3, [pc, #168]	; (8103108 <face_recognition_configure_weights+0x1270>)
 810305e:	681b      	ldr	r3, [r3, #0]
 8103060:	f503 337f 	add.w	r3, r3, #261120	; 0x3fc00
 8103064:	f503 7318 	add.w	r3, r3, #608	; 0x260
 8103068:	4a2f      	ldr	r2, [pc, #188]	; (8103128 <face_recognition_configure_weights+0x1290>)
 810306a:	60d3      	str	r3, [r2, #12]
    conv2d_66_bias_array.format |= AI_FMT_FLAG_CONST;
 810306c:	4b2f      	ldr	r3, [pc, #188]	; (810312c <face_recognition_configure_weights+0x1294>)
 810306e:	681b      	ldr	r3, [r3, #0]
 8103070:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8103074:	4a2d      	ldr	r2, [pc, #180]	; (810312c <face_recognition_configure_weights+0x1294>)
 8103076:	6013      	str	r3, [r2, #0]
    conv2d_66_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 405088);
 8103078:	4b23      	ldr	r3, [pc, #140]	; (8103108 <face_recognition_configure_weights+0x1270>)
 810307a:	681b      	ldr	r3, [r3, #0]
 810307c:	f503 23c5 	add.w	r3, r3, #403456	; 0x62800
 8103080:	f503 63cc 	add.w	r3, r3, #1632	; 0x660
 8103084:	4a29      	ldr	r2, [pc, #164]	; (810312c <face_recognition_configure_weights+0x1294>)
 8103086:	6093      	str	r3, [r2, #8]
    conv2d_66_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 405088);
 8103088:	4b1f      	ldr	r3, [pc, #124]	; (8103108 <face_recognition_configure_weights+0x1270>)
 810308a:	681b      	ldr	r3, [r3, #0]
 810308c:	f503 23c5 	add.w	r3, r3, #403456	; 0x62800
 8103090:	f503 63cc 	add.w	r3, r3, #1632	; 0x660
 8103094:	4a25      	ldr	r2, [pc, #148]	; (810312c <face_recognition_configure_weights+0x1294>)
 8103096:	60d3      	str	r3, [r2, #12]
    gemm_68_weights_array.format |= AI_FMT_FLAG_CONST;
 8103098:	4b25      	ldr	r3, [pc, #148]	; (8103130 <face_recognition_configure_weights+0x1298>)
 810309a:	681b      	ldr	r3, [r3, #0]
 810309c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81030a0:	4a23      	ldr	r2, [pc, #140]	; (8103130 <face_recognition_configure_weights+0x1298>)
 81030a2:	6013      	str	r3, [r2, #0]
    gemm_68_weights_array.data = AI_PTR(g_face_recognition_weights_map[0] + 410208);
 81030a4:	4b18      	ldr	r3, [pc, #96]	; (8103108 <face_recognition_configure_weights+0x1270>)
 81030a6:	681b      	ldr	r3, [r3, #0]
 81030a8:	f503 23c8 	add.w	r3, r3, #409600	; 0x64000
 81030ac:	f503 7318 	add.w	r3, r3, #608	; 0x260
 81030b0:	4a1f      	ldr	r2, [pc, #124]	; (8103130 <face_recognition_configure_weights+0x1298>)
 81030b2:	6093      	str	r3, [r2, #8]
    gemm_68_weights_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 410208);
 81030b4:	4b14      	ldr	r3, [pc, #80]	; (8103108 <face_recognition_configure_weights+0x1270>)
 81030b6:	681b      	ldr	r3, [r3, #0]
 81030b8:	f503 23c8 	add.w	r3, r3, #409600	; 0x64000
 81030bc:	f503 7318 	add.w	r3, r3, #608	; 0x260
 81030c0:	4a1b      	ldr	r2, [pc, #108]	; (8103130 <face_recognition_configure_weights+0x1298>)
 81030c2:	60d3      	str	r3, [r2, #12]
    gemm_68_bias_array.format |= AI_FMT_FLAG_CONST;
 81030c4:	4b1b      	ldr	r3, [pc, #108]	; (8103134 <face_recognition_configure_weights+0x129c>)
 81030c6:	681b      	ldr	r3, [r3, #0]
 81030c8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 81030cc:	4a19      	ldr	r2, [pc, #100]	; (8103134 <face_recognition_configure_weights+0x129c>)
 81030ce:	6013      	str	r3, [r2, #0]
    gemm_68_bias_array.data = AI_PTR(g_face_recognition_weights_map[0] + 411488);
 81030d0:	4b0d      	ldr	r3, [pc, #52]	; (8103108 <face_recognition_configure_weights+0x1270>)
 81030d2:	681b      	ldr	r3, [r3, #0]
 81030d4:	f503 23c8 	add.w	r3, r3, #409600	; 0x64000
 81030d8:	f503 63ec 	add.w	r3, r3, #1888	; 0x760
 81030dc:	4a15      	ldr	r2, [pc, #84]	; (8103134 <face_recognition_configure_weights+0x129c>)
 81030de:	6093      	str	r3, [r2, #8]
    gemm_68_bias_array.data_start = AI_PTR(g_face_recognition_weights_map[0] + 411488);
 81030e0:	4b09      	ldr	r3, [pc, #36]	; (8103108 <face_recognition_configure_weights+0x1270>)
 81030e2:	681b      	ldr	r3, [r3, #0]
 81030e4:	f503 23c8 	add.w	r3, r3, #409600	; 0x64000
 81030e8:	f503 63ec 	add.w	r3, r3, #1888	; 0x760
 81030ec:	4a11      	ldr	r2, [pc, #68]	; (8103134 <face_recognition_configure_weights+0x129c>)
 81030ee:	60d3      	str	r3, [r2, #12]
    return true;
 81030f0:	2301      	movs	r3, #1
 81030f2:	e005      	b.n	8103100 <face_recognition_configure_weights+0x1268>
  }
  AI_ERROR_TRAP(net_ctx, INIT_FAILED, NETWORK_WEIGHTS);
 81030f4:	2212      	movs	r2, #18
 81030f6:	2130      	movs	r1, #48	; 0x30
 81030f8:	6878      	ldr	r0, [r7, #4]
 81030fa:	f001 fe17 	bl	8104d2c <ai_platform_network_set_error>
  return false;
 81030fe:	2300      	movs	r3, #0
}
 8103100:	4618      	mov	r0, r3
 8103102:	3708      	adds	r7, #8
 8103104:	46bd      	mov	sp, r7
 8103106:	bd80      	pop	{r7, pc}
 8103108:	1003f914 	.word	0x1003f914
 810310c:	10000b40 	.word	0x10000b40
 8103110:	10000b50 	.word	0x10000b50
 8103114:	10000b60 	.word	0x10000b60
 8103118:	10000b70 	.word	0x10000b70
 810311c:	10000b80 	.word	0x10000b80
 8103120:	10000b90 	.word	0x10000b90
 8103124:	10000ba0 	.word	0x10000ba0
 8103128:	10000bb0 	.word	0x10000bb0
 810312c:	10000bc0 	.word	0x10000bc0
 8103130:	10000bd0 	.word	0x10000bd0
 8103134:	10000be0 	.word	0x10000be0

08103138 <ai_face_recognition_get_error>:
}


AI_API_ENTRY
ai_error ai_face_recognition_get_error(ai_handle network)
{
 8103138:	b580      	push	{r7, lr}
 810313a:	b082      	sub	sp, #8
 810313c:	af00      	add	r7, sp, #0
 810313e:	6078      	str	r0, [r7, #4]
  return ai_platform_network_get_error(network);
 8103140:	6878      	ldr	r0, [r7, #4]
 8103142:	f001 fde7 	bl	8104d14 <ai_platform_network_get_error>
 8103146:	4603      	mov	r3, r0
}
 8103148:	4618      	mov	r0, r3
 810314a:	3708      	adds	r7, #8
 810314c:	46bd      	mov	sp, r7
 810314e:	bd80      	pop	{r7, pc}

08103150 <ai_face_recognition_create>:


AI_API_ENTRY
ai_error ai_face_recognition_create(
  ai_handle* network, const ai_buffer* network_config)
{
 8103150:	b580      	push	{r7, lr}
 8103152:	b084      	sub	sp, #16
 8103154:	af02      	add	r7, sp, #8
 8103156:	6078      	str	r0, [r7, #4]
 8103158:	6039      	str	r1, [r7, #0]
  return ai_platform_network_create(
 810315a:	2300      	movs	r3, #0
 810315c:	9301      	str	r3, [sp, #4]
 810315e:	2305      	movs	r3, #5
 8103160:	9300      	str	r3, [sp, #0]
 8103162:	2301      	movs	r3, #1
 8103164:	4a04      	ldr	r2, [pc, #16]	; (8103178 <ai_face_recognition_create+0x28>)
 8103166:	6839      	ldr	r1, [r7, #0]
 8103168:	6878      	ldr	r0, [r7, #4]
 810316a:	f001 fde5 	bl	8104d38 <ai_platform_network_create>
 810316e:	4603      	mov	r3, r0
    network, network_config, 
    AI_CONTEXT_OBJ(&AI_NET_OBJ_INSTANCE),
    AI_TOOLS_API_VERSION_MAJOR, AI_TOOLS_API_VERSION_MINOR, AI_TOOLS_API_VERSION_MICRO);
}
 8103170:	4618      	mov	r0, r3
 8103172:	3708      	adds	r7, #8
 8103174:	46bd      	mov	sp, r7
 8103176:	bd80      	pop	{r7, pc}
 8103178:	100072cc 	.word	0x100072cc

0810317c <ai_face_recognition_create_and_init>:


AI_API_ENTRY
ai_error ai_face_recognition_create_and_init(
  ai_handle* network, const ai_handle activations[], const ai_handle weights[])
{
 810317c:	b580      	push	{r7, lr}
 810317e:	b094      	sub	sp, #80	; 0x50
 8103180:	af00      	add	r7, sp, #0
 8103182:	60f8      	str	r0, [r7, #12]
 8103184:	60b9      	str	r1, [r7, #8]
 8103186:	607a      	str	r2, [r7, #4]
  ai_error err;
  ai_network_params params;

  err = ai_face_recognition_create(network, AI_FACE_RECOGNITION_DATA_CONFIG);
 8103188:	2100      	movs	r1, #0
 810318a:	68f8      	ldr	r0, [r7, #12]
 810318c:	f7ff ffe0 	bl	8103150 <ai_face_recognition_create>
 8103190:	4603      	mov	r3, r0
 8103192:	64bb      	str	r3, [r7, #72]	; 0x48
  if (err.type != AI_ERROR_NONE) {
 8103194:	f897 3048 	ldrb.w	r3, [r7, #72]	; 0x48
 8103198:	2b00      	cmp	r3, #0
 810319a:	d001      	beq.n	81031a0 <ai_face_recognition_create_and_init+0x24>
    return err;
 810319c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 810319e:	e067      	b.n	8103270 <ai_face_recognition_create_and_init+0xf4>
  }
  
  if (ai_face_recognition_data_params_get(&params) != true) {
 81031a0:	f107 0310 	add.w	r3, r7, #16
 81031a4:	4618      	mov	r0, r3
 81031a6:	f000 f8a3 	bl	81032f0 <ai_face_recognition_data_params_get>
 81031aa:	4603      	mov	r3, r0
 81031ac:	f083 0301 	eor.w	r3, r3, #1
 81031b0:	b2db      	uxtb	r3, r3
 81031b2:	2b00      	cmp	r3, #0
 81031b4:	d008      	beq.n	81031c8 <ai_face_recognition_create_and_init+0x4c>
    err = ai_face_recognition_get_error(*network);
 81031b6:	68fb      	ldr	r3, [r7, #12]
 81031b8:	681b      	ldr	r3, [r3, #0]
 81031ba:	4618      	mov	r0, r3
 81031bc:	f7ff ffbc 	bl	8103138 <ai_face_recognition_get_error>
 81031c0:	4603      	mov	r3, r0
 81031c2:	64bb      	str	r3, [r7, #72]	; 0x48
    return err;
 81031c4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 81031c6:	e053      	b.n	8103270 <ai_face_recognition_create_and_init+0xf4>
  }
#if defined(AI_FACE_RECOGNITION_DATA_ACTIVATIONS_COUNT)
  /* set the addresses of the activations buffers */
  for (ai_u16 idx=0; activations && idx<params.map_activations.size; idx++) {
 81031c8:	2300      	movs	r3, #0
 81031ca:	f8a7 304e 	strh.w	r3, [r7, #78]	; 0x4e
 81031ce:	e012      	b.n	81031f6 <ai_face_recognition_create_and_init+0x7a>
    AI_BUFFER_ARRAY_ITEM_SET_ADDRESS(&params.map_activations, idx, activations[idx]);
 81031d0:	f8b7 104e 	ldrh.w	r1, [r7, #78]	; 0x4e
 81031d4:	f8b7 304e 	ldrh.w	r3, [r7, #78]	; 0x4e
 81031d8:	009b      	lsls	r3, r3, #2
 81031da:	68ba      	ldr	r2, [r7, #8]
 81031dc:	4413      	add	r3, r2
 81031de:	681a      	ldr	r2, [r3, #0]
 81031e0:	f107 0310 	add.w	r3, r7, #16
 81031e4:	330c      	adds	r3, #12
 81031e6:	4618      	mov	r0, r3
 81031e8:	f001 fcba 	bl	8104b60 <ai_buffer_array_item_set_address>
  for (ai_u16 idx=0; activations && idx<params.map_activations.size; idx++) {
 81031ec:	f8b7 304e 	ldrh.w	r3, [r7, #78]	; 0x4e
 81031f0:	3301      	adds	r3, #1
 81031f2:	f8a7 304e 	strh.w	r3, [r7, #78]	; 0x4e
 81031f6:	68bb      	ldr	r3, [r7, #8]
 81031f8:	2b00      	cmp	r3, #0
 81031fa:	d004      	beq.n	8103206 <ai_face_recognition_create_and_init+0x8a>
 81031fc:	8bfb      	ldrh	r3, [r7, #30]
 81031fe:	f8b7 204e 	ldrh.w	r2, [r7, #78]	; 0x4e
 8103202:	429a      	cmp	r2, r3
 8103204:	d3e4      	bcc.n	81031d0 <ai_face_recognition_create_and_init+0x54>
  }
#endif
#if defined(AI_FACE_RECOGNITION_DATA_WEIGHTS_COUNT)
  /* set the addresses of the weight buffers */
  for (ai_u16 idx=0; weights && idx<params.map_weights.size; idx++) {
 8103206:	2300      	movs	r3, #0
 8103208:	f8a7 304c 	strh.w	r3, [r7, #76]	; 0x4c
 810320c:	e012      	b.n	8103234 <ai_face_recognition_create_and_init+0xb8>
    AI_BUFFER_ARRAY_ITEM_SET_ADDRESS(&params.map_weights, idx, weights[idx]);
 810320e:	f8b7 104c 	ldrh.w	r1, [r7, #76]	; 0x4c
 8103212:	f8b7 304c 	ldrh.w	r3, [r7, #76]	; 0x4c
 8103216:	009b      	lsls	r3, r3, #2
 8103218:	687a      	ldr	r2, [r7, #4]
 810321a:	4413      	add	r3, r2
 810321c:	681a      	ldr	r2, [r3, #0]
 810321e:	f107 0310 	add.w	r3, r7, #16
 8103222:	3304      	adds	r3, #4
 8103224:	4618      	mov	r0, r3
 8103226:	f001 fc9b 	bl	8104b60 <ai_buffer_array_item_set_address>
  for (ai_u16 idx=0; weights && idx<params.map_weights.size; idx++) {
 810322a:	f8b7 304c 	ldrh.w	r3, [r7, #76]	; 0x4c
 810322e:	3301      	adds	r3, #1
 8103230:	f8a7 304c 	strh.w	r3, [r7, #76]	; 0x4c
 8103234:	687b      	ldr	r3, [r7, #4]
 8103236:	2b00      	cmp	r3, #0
 8103238:	d004      	beq.n	8103244 <ai_face_recognition_create_and_init+0xc8>
 810323a:	8afb      	ldrh	r3, [r7, #22]
 810323c:	f8b7 204c 	ldrh.w	r2, [r7, #76]	; 0x4c
 8103240:	429a      	cmp	r2, r3
 8103242:	d3e4      	bcc.n	810320e <ai_face_recognition_create_and_init+0x92>
  }
#endif
  if (ai_face_recognition_init(*network, &params) != true) {
 8103244:	68fb      	ldr	r3, [r7, #12]
 8103246:	681b      	ldr	r3, [r3, #0]
 8103248:	f107 0210 	add.w	r2, r7, #16
 810324c:	4611      	mov	r1, r2
 810324e:	4618      	mov	r0, r3
 8103250:	f000 f812 	bl	8103278 <ai_face_recognition_init>
 8103254:	4603      	mov	r3, r0
 8103256:	f083 0301 	eor.w	r3, r3, #1
 810325a:	b2db      	uxtb	r3, r3
 810325c:	2b00      	cmp	r3, #0
 810325e:	d006      	beq.n	810326e <ai_face_recognition_create_and_init+0xf2>
    err = ai_face_recognition_get_error(*network);
 8103260:	68fb      	ldr	r3, [r7, #12]
 8103262:	681b      	ldr	r3, [r3, #0]
 8103264:	4618      	mov	r0, r3
 8103266:	f7ff ff67 	bl	8103138 <ai_face_recognition_get_error>
 810326a:	4603      	mov	r3, r0
 810326c:	64bb      	str	r3, [r7, #72]	; 0x48
  }
  return err;
 810326e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
}
 8103270:	4618      	mov	r0, r3
 8103272:	3750      	adds	r7, #80	; 0x50
 8103274:	46bd      	mov	sp, r7
 8103276:	bd80      	pop	{r7, pc}

08103278 <ai_face_recognition_init>:


AI_API_ENTRY
ai_bool ai_face_recognition_init(
  ai_handle network, const ai_network_params* params)
{
 8103278:	b580      	push	{r7, lr}
 810327a:	b084      	sub	sp, #16
 810327c:	af00      	add	r7, sp, #0
 810327e:	6078      	str	r0, [r7, #4]
 8103280:	6039      	str	r1, [r7, #0]
  ai_network* net_ctx = AI_NETWORK_OBJ(ai_platform_network_init(network, params));
 8103282:	6839      	ldr	r1, [r7, #0]
 8103284:	6878      	ldr	r0, [r7, #4]
 8103286:	f001 fd99 	bl	8104dbc <ai_platform_network_init>
 810328a:	60f8      	str	r0, [r7, #12]
  ai_bool ok = true;
 810328c:	2301      	movs	r3, #1
 810328e:	72fb      	strb	r3, [r7, #11]

  if (!net_ctx) return false;
 8103290:	68fb      	ldr	r3, [r7, #12]
 8103292:	2b00      	cmp	r3, #0
 8103294:	d101      	bne.n	810329a <ai_face_recognition_init+0x22>
 8103296:	2300      	movs	r3, #0
 8103298:	e026      	b.n	81032e8 <ai_face_recognition_init+0x70>
  ok &= face_recognition_configure_weights(net_ctx, params);
 810329a:	6839      	ldr	r1, [r7, #0]
 810329c:	68f8      	ldr	r0, [r7, #12]
 810329e:	f7fe fdfb 	bl	8101e98 <face_recognition_configure_weights>
 81032a2:	4603      	mov	r3, r0
 81032a4:	461a      	mov	r2, r3
 81032a6:	7afb      	ldrb	r3, [r7, #11]
 81032a8:	4013      	ands	r3, r2
 81032aa:	2b00      	cmp	r3, #0
 81032ac:	bf14      	ite	ne
 81032ae:	2301      	movne	r3, #1
 81032b0:	2300      	moveq	r3, #0
 81032b2:	72fb      	strb	r3, [r7, #11]
  ok &= face_recognition_configure_activations(net_ctx, params);
 81032b4:	6839      	ldr	r1, [r7, #0]
 81032b6:	68f8      	ldr	r0, [r7, #12]
 81032b8:	f7fd fdd4 	bl	8100e64 <face_recognition_configure_activations>
 81032bc:	4603      	mov	r3, r0
 81032be:	461a      	mov	r2, r3
 81032c0:	7afb      	ldrb	r3, [r7, #11]
 81032c2:	4013      	ands	r3, r2
 81032c4:	2b00      	cmp	r3, #0
 81032c6:	bf14      	ite	ne
 81032c8:	2301      	movne	r3, #1
 81032ca:	2300      	moveq	r3, #0
 81032cc:	72fb      	strb	r3, [r7, #11]

  ok &= ai_platform_network_post_init(network);
 81032ce:	6878      	ldr	r0, [r7, #4]
 81032d0:	f001 fe42 	bl	8104f58 <ai_platform_network_post_init>
 81032d4:	4603      	mov	r3, r0
 81032d6:	461a      	mov	r2, r3
 81032d8:	7afb      	ldrb	r3, [r7, #11]
 81032da:	4013      	ands	r3, r2
 81032dc:	2b00      	cmp	r3, #0
 81032de:	bf14      	ite	ne
 81032e0:	2301      	movne	r3, #1
 81032e2:	2300      	moveq	r3, #0
 81032e4:	72fb      	strb	r3, [r7, #11]

  return ok;
 81032e6:	7afb      	ldrb	r3, [r7, #11]
}
 81032e8:	4618      	mov	r0, r3
 81032ea:	3710      	adds	r7, #16
 81032ec:	46bd      	mov	sp, r7
 81032ee:	bd80      	pop	{r7, pc}

081032f0 <ai_face_recognition_data_params_get>:
 * @ingroup face_recognition_data
 * @return true if a valid configuration is present, false otherwise
 */
AI_API_ENTRY
ai_bool ai_face_recognition_data_params_get(ai_network_params* params)
{
 81032f0:	b580      	push	{r7, lr}
 81032f2:	b086      	sub	sp, #24
 81032f4:	af00      	add	r7, sp, #0
 81032f6:	6078      	str	r0, [r7, #4]
  if (!params) return false;
 81032f8:	687b      	ldr	r3, [r7, #4]
 81032fa:	2b00      	cmp	r3, #0
 81032fc:	d101      	bne.n	8103302 <ai_face_recognition_data_params_get+0x12>
 81032fe:	2300      	movs	r3, #0
 8103300:	e016      	b.n	8103330 <ai_face_recognition_data_params_get+0x40>
  
  const ai_buffer_array map_activations = 
 8103302:	4a0d      	ldr	r2, [pc, #52]	; (8103338 <ai_face_recognition_data_params_get+0x48>)
 8103304:	f107 0310 	add.w	r3, r7, #16
 8103308:	e892 0003 	ldmia.w	r2, {r0, r1}
 810330c:	e883 0003 	stmia.w	r3, {r0, r1}
    AI_BUFFER_ARRAY_OBJ_INIT(AI_FLAG_NONE, AI_FACE_RECOGNITION_DATA_ACTIVATIONS_COUNT, g_face_recognition_data_map_activations);
  
  const ai_buffer_array map_weights = 
 8103310:	4a0a      	ldr	r2, [pc, #40]	; (810333c <ai_face_recognition_data_params_get+0x4c>)
 8103312:	f107 0308 	add.w	r3, r7, #8
 8103316:	e892 0003 	ldmia.w	r2, {r0, r1}
 810331a:	e883 0003 	stmia.w	r3, {r0, r1}
    AI_BUFFER_ARRAY_OBJ_INIT(AI_FLAG_NONE, AI_FACE_RECOGNITION_DATA_WEIGHTS_COUNT, g_face_recognition_data_map_weights);

  return ai_platform_bind_network_params(params, &map_weights, &map_activations);
 810331e:	f107 0210 	add.w	r2, r7, #16
 8103322:	f107 0308 	add.w	r3, r7, #8
 8103326:	4619      	mov	r1, r3
 8103328:	6878      	ldr	r0, [r7, #4]
 810332a:	f001 fcd1 	bl	8104cd0 <ai_platform_bind_network_params>
 810332e:	4603      	mov	r3, r0
}
 8103330:	4618      	mov	r0, r3
 8103332:	3718      	adds	r7, #24
 8103334:	46bd      	mov	sp, r7
 8103336:	bd80      	pop	{r7, pc}
 8103338:	0810ba00 	.word	0x0810ba00
 810333c:	0810ba08 	.word	0x0810ba08

08103340 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8103340:	b480      	push	{r7}
 8103342:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8103344:	4b0b      	ldr	r3, [pc, #44]	; (8103374 <SystemInit+0x34>)
 8103346:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 810334a:	4a0a      	ldr	r2, [pc, #40]	; (8103374 <SystemInit+0x34>)
 810334c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8103350:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif

    /*SEVONPEND enabled so that an interrupt coming from the CPU(n) interrupt signal is
     detectable by the CPU after a WFI/WFE instruction.*/
 SCB->SCR |= SCB_SCR_SEVONPEND_Msk;
 8103354:	4b07      	ldr	r3, [pc, #28]	; (8103374 <SystemInit+0x34>)
 8103356:	691b      	ldr	r3, [r3, #16]
 8103358:	4a06      	ldr	r2, [pc, #24]	; (8103374 <SystemInit+0x34>)
 810335a:	f043 0310 	orr.w	r3, r3, #16
 810335e:	6113      	str	r3, [r2, #16]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D2_AXISRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8103360:	4b04      	ldr	r3, [pc, #16]	; (8103374 <SystemInit+0x34>)
 8103362:	f04f 6201 	mov.w	r2, #135266304	; 0x8100000
 8103366:	609a      	str	r2, [r3, #8]
#else
#error Please #define CORE_CM4 or CORE_CM7
#endif
#endif

}
 8103368:	bf00      	nop
 810336a:	46bd      	mov	sp, r7
 810336c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103370:	4770      	bx	lr
 8103372:	bf00      	nop
 8103374:	e000ed00 	.word	0xe000ed00

08103378 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8103378:	b580      	push	{r7, lr}
 810337a:	b082      	sub	sp, #8
 810337c:	af00      	add	r7, sp, #0

uint32_t common_system_clock;

#if defined(DUAL_CORE) && defined(CORE_CM4)
   /* Configure Cortex-M4 Instruction cache through ART accelerator */
   __HAL_RCC_ART_CLK_ENABLE();                   /* Enable the Cortex-M4 ART Clock */
 810337e:	4b28      	ldr	r3, [pc, #160]	; (8103420 <HAL_Init+0xa8>)
 8103380:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8103384:	4a26      	ldr	r2, [pc, #152]	; (8103420 <HAL_Init+0xa8>)
 8103386:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 810338a:	f8c2 30d8 	str.w	r3, [r2, #216]	; 0xd8
 810338e:	4b24      	ldr	r3, [pc, #144]	; (8103420 <HAL_Init+0xa8>)
 8103390:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8103394:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8103398:	603b      	str	r3, [r7, #0]
 810339a:	683b      	ldr	r3, [r7, #0]
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
 810339c:	4b21      	ldr	r3, [pc, #132]	; (8103424 <HAL_Init+0xac>)
 810339e:	681b      	ldr	r3, [r3, #0]
 81033a0:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
 81033a4:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 81033a8:	4a1e      	ldr	r2, [pc, #120]	; (8103424 <HAL_Init+0xac>)
 81033aa:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 81033ae:	6013      	str	r3, [r2, #0]
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
 81033b0:	4b1c      	ldr	r3, [pc, #112]	; (8103424 <HAL_Init+0xac>)
 81033b2:	681b      	ldr	r3, [r3, #0]
 81033b4:	4a1b      	ldr	r2, [pc, #108]	; (8103424 <HAL_Init+0xac>)
 81033b6:	f043 0301 	orr.w	r3, r3, #1
 81033ba:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 81033bc:	2003      	movs	r0, #3
 81033be:	f000 f941 	bl	8103644 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 81033c2:	f001 fa15 	bl	81047f0 <HAL_RCC_GetSysClockFreq>
 81033c6:	4602      	mov	r2, r0
 81033c8:	4b15      	ldr	r3, [pc, #84]	; (8103420 <HAL_Init+0xa8>)
 81033ca:	699b      	ldr	r3, [r3, #24]
 81033cc:	0a1b      	lsrs	r3, r3, #8
 81033ce:	f003 030f 	and.w	r3, r3, #15
 81033d2:	4915      	ldr	r1, [pc, #84]	; (8103428 <HAL_Init+0xb0>)
 81033d4:	5ccb      	ldrb	r3, [r1, r3]
 81033d6:	f003 031f 	and.w	r3, r3, #31
 81033da:	fa22 f303 	lsr.w	r3, r2, r3
 81033de:	607b      	str	r3, [r7, #4]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 81033e0:	4b0f      	ldr	r3, [pc, #60]	; (8103420 <HAL_Init+0xa8>)
 81033e2:	699b      	ldr	r3, [r3, #24]
 81033e4:	f003 030f 	and.w	r3, r3, #15
 81033e8:	4a0f      	ldr	r2, [pc, #60]	; (8103428 <HAL_Init+0xb0>)
 81033ea:	5cd3      	ldrb	r3, [r2, r3]
 81033ec:	f003 031f 	and.w	r3, r3, #31
 81033f0:	687a      	ldr	r2, [r7, #4]
 81033f2:	fa22 f303 	lsr.w	r3, r2, r3
 81033f6:	4a0d      	ldr	r2, [pc, #52]	; (810342c <HAL_Init+0xb4>)
 81033f8:	6013      	str	r3, [r2, #0]
#else
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RCC_CDCFGR1_HPRE_Pos]) & 0x1FU));
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
 81033fa:	4b0c      	ldr	r3, [pc, #48]	; (810342c <HAL_Init+0xb4>)
 81033fc:	681b      	ldr	r3, [r3, #0]
 81033fe:	4a0c      	ldr	r2, [pc, #48]	; (8103430 <HAL_Init+0xb8>)
 8103400:	6013      	str	r3, [r2, #0]
#else
  SystemCoreClock = common_system_clock;
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8103402:	200f      	movs	r0, #15
 8103404:	f000 f816 	bl	8103434 <HAL_InitTick>
 8103408:	4603      	mov	r3, r0
 810340a:	2b00      	cmp	r3, #0
 810340c:	d001      	beq.n	8103412 <HAL_Init+0x9a>
  {
    return HAL_ERROR;
 810340e:	2301      	movs	r3, #1
 8103410:	e002      	b.n	8103418 <HAL_Init+0xa0>
  }

  /* Init the low level hardware */
  HAL_MspInit();
 8103412:	f7fd fcb9 	bl	8100d88 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8103416:	2300      	movs	r3, #0
}
 8103418:	4618      	mov	r0, r3
 810341a:	3708      	adds	r7, #8
 810341c:	46bd      	mov	sp, r7
 810341e:	bd80      	pop	{r7, pc}
 8103420:	58024400 	.word	0x58024400
 8103424:	40024400 	.word	0x40024400
 8103428:	08179b48 	.word	0x08179b48
 810342c:	10007374 	.word	0x10007374
 8103430:	10007370 	.word	0x10007370

08103434 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8103434:	b580      	push	{r7, lr}
 8103436:	b082      	sub	sp, #8
 8103438:	af00      	add	r7, sp, #0
 810343a:	6078      	str	r0, [r7, #4]
  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value zero)*/
  if((uint32_t)uwTickFreq == 0UL)
 810343c:	4b15      	ldr	r3, [pc, #84]	; (8103494 <HAL_InitTick+0x60>)
 810343e:	781b      	ldrb	r3, [r3, #0]
 8103440:	2b00      	cmp	r3, #0
 8103442:	d101      	bne.n	8103448 <HAL_InitTick+0x14>
  {
    return HAL_ERROR;
 8103444:	2301      	movs	r3, #1
 8103446:	e021      	b.n	810348c <HAL_InitTick+0x58>
  }

    /* Configure the SysTick to have interrupt in 1ms time basis*/
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 8103448:	4b13      	ldr	r3, [pc, #76]	; (8103498 <HAL_InitTick+0x64>)
 810344a:	681a      	ldr	r2, [r3, #0]
 810344c:	4b11      	ldr	r3, [pc, #68]	; (8103494 <HAL_InitTick+0x60>)
 810344e:	781b      	ldrb	r3, [r3, #0]
 8103450:	4619      	mov	r1, r3
 8103452:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8103456:	fbb3 f3f1 	udiv	r3, r3, r1
 810345a:	fbb2 f3f3 	udiv	r3, r2, r3
 810345e:	4618      	mov	r0, r3
 8103460:	f000 f915 	bl	810368e <HAL_SYSTICK_Config>
 8103464:	4603      	mov	r3, r0
 8103466:	2b00      	cmp	r3, #0
 8103468:	d001      	beq.n	810346e <HAL_InitTick+0x3a>
    {
      return HAL_ERROR;
 810346a:	2301      	movs	r3, #1
 810346c:	e00e      	b.n	810348c <HAL_InitTick+0x58>
    }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 810346e:	687b      	ldr	r3, [r7, #4]
 8103470:	2b0f      	cmp	r3, #15
 8103472:	d80a      	bhi.n	810348a <HAL_InitTick+0x56>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8103474:	2200      	movs	r2, #0
 8103476:	6879      	ldr	r1, [r7, #4]
 8103478:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 810347c:	f000 f8ed 	bl	810365a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8103480:	4a06      	ldr	r2, [pc, #24]	; (810349c <HAL_InitTick+0x68>)
 8103482:	687b      	ldr	r3, [r7, #4]
 8103484:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8103486:	2300      	movs	r3, #0
 8103488:	e000      	b.n	810348c <HAL_InitTick+0x58>
    return HAL_ERROR;
 810348a:	2301      	movs	r3, #1
}
 810348c:	4618      	mov	r0, r3
 810348e:	3708      	adds	r7, #8
 8103490:	46bd      	mov	sp, r7
 8103492:	bd80      	pop	{r7, pc}
 8103494:	1000737c 	.word	0x1000737c
 8103498:	10007370 	.word	0x10007370
 810349c:	10007378 	.word	0x10007378

081034a0 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 81034a0:	b480      	push	{r7}
 81034a2:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 81034a4:	4b06      	ldr	r3, [pc, #24]	; (81034c0 <HAL_IncTick+0x20>)
 81034a6:	781b      	ldrb	r3, [r3, #0]
 81034a8:	461a      	mov	r2, r3
 81034aa:	4b06      	ldr	r3, [pc, #24]	; (81034c4 <HAL_IncTick+0x24>)
 81034ac:	681b      	ldr	r3, [r3, #0]
 81034ae:	4413      	add	r3, r2
 81034b0:	4a04      	ldr	r2, [pc, #16]	; (81034c4 <HAL_IncTick+0x24>)
 81034b2:	6013      	str	r3, [r2, #0]
}
 81034b4:	bf00      	nop
 81034b6:	46bd      	mov	sp, r7
 81034b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 81034bc:	4770      	bx	lr
 81034be:	bf00      	nop
 81034c0:	1000737c 	.word	0x1000737c
 81034c4:	1003fdb8 	.word	0x1003fdb8

081034c8 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 81034c8:	b480      	push	{r7}
 81034ca:	af00      	add	r7, sp, #0
  return uwTick;
 81034cc:	4b03      	ldr	r3, [pc, #12]	; (81034dc <HAL_GetTick+0x14>)
 81034ce:	681b      	ldr	r3, [r3, #0]
}
 81034d0:	4618      	mov	r0, r3
 81034d2:	46bd      	mov	sp, r7
 81034d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 81034d8:	4770      	bx	lr
 81034da:	bf00      	nop
 81034dc:	1003fdb8 	.word	0x1003fdb8

081034e0 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 81034e0:	b480      	push	{r7}
 81034e2:	b085      	sub	sp, #20
 81034e4:	af00      	add	r7, sp, #0
 81034e6:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 81034e8:	687b      	ldr	r3, [r7, #4]
 81034ea:	f003 0307 	and.w	r3, r3, #7
 81034ee:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 81034f0:	4b0c      	ldr	r3, [pc, #48]	; (8103524 <__NVIC_SetPriorityGrouping+0x44>)
 81034f2:	68db      	ldr	r3, [r3, #12]
 81034f4:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 81034f6:	68ba      	ldr	r2, [r7, #8]
 81034f8:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 81034fc:	4013      	ands	r3, r2
 81034fe:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8103500:	68fb      	ldr	r3, [r7, #12]
 8103502:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8103504:	68bb      	ldr	r3, [r7, #8]
 8103506:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8103508:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 810350c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8103510:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8103512:	4a04      	ldr	r2, [pc, #16]	; (8103524 <__NVIC_SetPriorityGrouping+0x44>)
 8103514:	68bb      	ldr	r3, [r7, #8]
 8103516:	60d3      	str	r3, [r2, #12]
}
 8103518:	bf00      	nop
 810351a:	3714      	adds	r7, #20
 810351c:	46bd      	mov	sp, r7
 810351e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103522:	4770      	bx	lr
 8103524:	e000ed00 	.word	0xe000ed00

08103528 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8103528:	b480      	push	{r7}
 810352a:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 810352c:	4b04      	ldr	r3, [pc, #16]	; (8103540 <__NVIC_GetPriorityGrouping+0x18>)
 810352e:	68db      	ldr	r3, [r3, #12]
 8103530:	0a1b      	lsrs	r3, r3, #8
 8103532:	f003 0307 	and.w	r3, r3, #7
}
 8103536:	4618      	mov	r0, r3
 8103538:	46bd      	mov	sp, r7
 810353a:	f85d 7b04 	ldr.w	r7, [sp], #4
 810353e:	4770      	bx	lr
 8103540:	e000ed00 	.word	0xe000ed00

08103544 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8103544:	b480      	push	{r7}
 8103546:	b083      	sub	sp, #12
 8103548:	af00      	add	r7, sp, #0
 810354a:	4603      	mov	r3, r0
 810354c:	6039      	str	r1, [r7, #0]
 810354e:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8103550:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8103554:	2b00      	cmp	r3, #0
 8103556:	db0a      	blt.n	810356e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8103558:	683b      	ldr	r3, [r7, #0]
 810355a:	b2da      	uxtb	r2, r3
 810355c:	490c      	ldr	r1, [pc, #48]	; (8103590 <__NVIC_SetPriority+0x4c>)
 810355e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8103562:	0112      	lsls	r2, r2, #4
 8103564:	b2d2      	uxtb	r2, r2
 8103566:	440b      	add	r3, r1
 8103568:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 810356c:	e00a      	b.n	8103584 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 810356e:	683b      	ldr	r3, [r7, #0]
 8103570:	b2da      	uxtb	r2, r3
 8103572:	4908      	ldr	r1, [pc, #32]	; (8103594 <__NVIC_SetPriority+0x50>)
 8103574:	88fb      	ldrh	r3, [r7, #6]
 8103576:	f003 030f 	and.w	r3, r3, #15
 810357a:	3b04      	subs	r3, #4
 810357c:	0112      	lsls	r2, r2, #4
 810357e:	b2d2      	uxtb	r2, r2
 8103580:	440b      	add	r3, r1
 8103582:	761a      	strb	r2, [r3, #24]
}
 8103584:	bf00      	nop
 8103586:	370c      	adds	r7, #12
 8103588:	46bd      	mov	sp, r7
 810358a:	f85d 7b04 	ldr.w	r7, [sp], #4
 810358e:	4770      	bx	lr
 8103590:	e000e100 	.word	0xe000e100
 8103594:	e000ed00 	.word	0xe000ed00

08103598 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8103598:	b480      	push	{r7}
 810359a:	b089      	sub	sp, #36	; 0x24
 810359c:	af00      	add	r7, sp, #0
 810359e:	60f8      	str	r0, [r7, #12]
 81035a0:	60b9      	str	r1, [r7, #8]
 81035a2:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 81035a4:	68fb      	ldr	r3, [r7, #12]
 81035a6:	f003 0307 	and.w	r3, r3, #7
 81035aa:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 81035ac:	69fb      	ldr	r3, [r7, #28]
 81035ae:	f1c3 0307 	rsb	r3, r3, #7
 81035b2:	2b04      	cmp	r3, #4
 81035b4:	bf28      	it	cs
 81035b6:	2304      	movcs	r3, #4
 81035b8:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 81035ba:	69fb      	ldr	r3, [r7, #28]
 81035bc:	3304      	adds	r3, #4
 81035be:	2b06      	cmp	r3, #6
 81035c0:	d902      	bls.n	81035c8 <NVIC_EncodePriority+0x30>
 81035c2:	69fb      	ldr	r3, [r7, #28]
 81035c4:	3b03      	subs	r3, #3
 81035c6:	e000      	b.n	81035ca <NVIC_EncodePriority+0x32>
 81035c8:	2300      	movs	r3, #0
 81035ca:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 81035cc:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 81035d0:	69bb      	ldr	r3, [r7, #24]
 81035d2:	fa02 f303 	lsl.w	r3, r2, r3
 81035d6:	43da      	mvns	r2, r3
 81035d8:	68bb      	ldr	r3, [r7, #8]
 81035da:	401a      	ands	r2, r3
 81035dc:	697b      	ldr	r3, [r7, #20]
 81035de:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 81035e0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 81035e4:	697b      	ldr	r3, [r7, #20]
 81035e6:	fa01 f303 	lsl.w	r3, r1, r3
 81035ea:	43d9      	mvns	r1, r3
 81035ec:	687b      	ldr	r3, [r7, #4]
 81035ee:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 81035f0:	4313      	orrs	r3, r2
         );
}
 81035f2:	4618      	mov	r0, r3
 81035f4:	3724      	adds	r7, #36	; 0x24
 81035f6:	46bd      	mov	sp, r7
 81035f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 81035fc:	4770      	bx	lr
	...

08103600 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8103600:	b580      	push	{r7, lr}
 8103602:	b082      	sub	sp, #8
 8103604:	af00      	add	r7, sp, #0
 8103606:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8103608:	687b      	ldr	r3, [r7, #4]
 810360a:	3b01      	subs	r3, #1
 810360c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8103610:	d301      	bcc.n	8103616 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8103612:	2301      	movs	r3, #1
 8103614:	e00f      	b.n	8103636 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8103616:	4a0a      	ldr	r2, [pc, #40]	; (8103640 <SysTick_Config+0x40>)
 8103618:	687b      	ldr	r3, [r7, #4]
 810361a:	3b01      	subs	r3, #1
 810361c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 810361e:	210f      	movs	r1, #15
 8103620:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8103624:	f7ff ff8e 	bl	8103544 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8103628:	4b05      	ldr	r3, [pc, #20]	; (8103640 <SysTick_Config+0x40>)
 810362a:	2200      	movs	r2, #0
 810362c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 810362e:	4b04      	ldr	r3, [pc, #16]	; (8103640 <SysTick_Config+0x40>)
 8103630:	2207      	movs	r2, #7
 8103632:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8103634:	2300      	movs	r3, #0
}
 8103636:	4618      	mov	r0, r3
 8103638:	3708      	adds	r7, #8
 810363a:	46bd      	mov	sp, r7
 810363c:	bd80      	pop	{r7, pc}
 810363e:	bf00      	nop
 8103640:	e000e010 	.word	0xe000e010

08103644 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8103644:	b580      	push	{r7, lr}
 8103646:	b082      	sub	sp, #8
 8103648:	af00      	add	r7, sp, #0
 810364a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 810364c:	6878      	ldr	r0, [r7, #4]
 810364e:	f7ff ff47 	bl	81034e0 <__NVIC_SetPriorityGrouping>
}
 8103652:	bf00      	nop
 8103654:	3708      	adds	r7, #8
 8103656:	46bd      	mov	sp, r7
 8103658:	bd80      	pop	{r7, pc}

0810365a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 810365a:	b580      	push	{r7, lr}
 810365c:	b086      	sub	sp, #24
 810365e:	af00      	add	r7, sp, #0
 8103660:	4603      	mov	r3, r0
 8103662:	60b9      	str	r1, [r7, #8]
 8103664:	607a      	str	r2, [r7, #4]
 8103666:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 8103668:	f7ff ff5e 	bl	8103528 <__NVIC_GetPriorityGrouping>
 810366c:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 810366e:	687a      	ldr	r2, [r7, #4]
 8103670:	68b9      	ldr	r1, [r7, #8]
 8103672:	6978      	ldr	r0, [r7, #20]
 8103674:	f7ff ff90 	bl	8103598 <NVIC_EncodePriority>
 8103678:	4602      	mov	r2, r0
 810367a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 810367e:	4611      	mov	r1, r2
 8103680:	4618      	mov	r0, r3
 8103682:	f7ff ff5f 	bl	8103544 <__NVIC_SetPriority>
}
 8103686:	bf00      	nop
 8103688:	3718      	adds	r7, #24
 810368a:	46bd      	mov	sp, r7
 810368c:	bd80      	pop	{r7, pc}

0810368e <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status   - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 810368e:	b580      	push	{r7, lr}
 8103690:	b082      	sub	sp, #8
 8103692:	af00      	add	r7, sp, #0
 8103694:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8103696:	6878      	ldr	r0, [r7, #4]
 8103698:	f7ff ffb2 	bl	8103600 <SysTick_Config>
 810369c:	4603      	mov	r3, r0
}
 810369e:	4618      	mov	r0, r3
 81036a0:	3708      	adds	r7, #8
 81036a2:	46bd      	mov	sp, r7
 81036a4:	bd80      	pop	{r7, pc}
	...

081036a8 <HAL_MPU_Disable>:
/**
  * @brief  Disables the MPU
  * @retval None
  */
void HAL_MPU_Disable(void)
{
 81036a8:	b480      	push	{r7}
 81036aa:	af00      	add	r7, sp, #0
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
 81036ac:	f3bf 8f5f 	dmb	sy
}
 81036b0:	bf00      	nop
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 81036b2:	4b07      	ldr	r3, [pc, #28]	; (81036d0 <HAL_MPU_Disable+0x28>)
 81036b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 81036b6:	4a06      	ldr	r2, [pc, #24]	; (81036d0 <HAL_MPU_Disable+0x28>)
 81036b8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 81036bc:	6253      	str	r3, [r2, #36]	; 0x24

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
 81036be:	4b05      	ldr	r3, [pc, #20]	; (81036d4 <HAL_MPU_Disable+0x2c>)
 81036c0:	2200      	movs	r2, #0
 81036c2:	605a      	str	r2, [r3, #4]
}
 81036c4:	bf00      	nop
 81036c6:	46bd      	mov	sp, r7
 81036c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 81036cc:	4770      	bx	lr
 81036ce:	bf00      	nop
 81036d0:	e000ed00 	.word	0xe000ed00
 81036d4:	e000ed90 	.word	0xe000ed90

081036d8 <HAL_MPU_Enable>:
  *            @arg MPU_PRIVILEGED_DEFAULT
  *            @arg MPU_HFNMI_PRIVDEF
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
 81036d8:	b480      	push	{r7}
 81036da:	b083      	sub	sp, #12
 81036dc:	af00      	add	r7, sp, #0
 81036de:	6078      	str	r0, [r7, #4]
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 81036e0:	4a0b      	ldr	r2, [pc, #44]	; (8103710 <HAL_MPU_Enable+0x38>)
 81036e2:	687b      	ldr	r3, [r7, #4]
 81036e4:	f043 0301 	orr.w	r3, r3, #1
 81036e8:	6053      	str	r3, [r2, #4]

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 81036ea:	4b0a      	ldr	r3, [pc, #40]	; (8103714 <HAL_MPU_Enable+0x3c>)
 81036ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 81036ee:	4a09      	ldr	r2, [pc, #36]	; (8103714 <HAL_MPU_Enable+0x3c>)
 81036f0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 81036f4:	6253      	str	r3, [r2, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
 81036f6:	f3bf 8f4f 	dsb	sy
}
 81036fa:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 81036fc:	f3bf 8f6f 	isb	sy
}
 8103700:	bf00      	nop

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
 8103702:	bf00      	nop
 8103704:	370c      	adds	r7, #12
 8103706:	46bd      	mov	sp, r7
 8103708:	f85d 7b04 	ldr.w	r7, [sp], #4
 810370c:	4770      	bx	lr
 810370e:	bf00      	nop
 8103710:	e000ed90 	.word	0xe000ed90
 8103714:	e000ed00 	.word	0xe000ed00

08103718 <HAL_MPU_ConfigRegion>:
  * @param  MPU_Init Pointer to a MPU_Region_InitTypeDef structure that contains
  *                  the initialization and configuration information.
  * @retval None
  */
void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
{
 8103718:	b480      	push	{r7}
 810371a:	b083      	sub	sp, #12
 810371c:	af00      	add	r7, sp, #0
 810371e:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
 8103720:	687b      	ldr	r3, [r7, #4]
 8103722:	785a      	ldrb	r2, [r3, #1]
 8103724:	4b1d      	ldr	r3, [pc, #116]	; (810379c <HAL_MPU_ConfigRegion+0x84>)
 8103726:	609a      	str	r2, [r3, #8]

  if ((MPU_Init->Enable) != 0UL)
 8103728:	687b      	ldr	r3, [r7, #4]
 810372a:	781b      	ldrb	r3, [r3, #0]
 810372c:	2b00      	cmp	r3, #0
 810372e:	d029      	beq.n	8103784 <HAL_MPU_ConfigRegion+0x6c>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
 8103730:	4a1a      	ldr	r2, [pc, #104]	; (810379c <HAL_MPU_ConfigRegion+0x84>)
 8103732:	687b      	ldr	r3, [r7, #4]
 8103734:	685b      	ldr	r3, [r3, #4]
 8103736:	60d3      	str	r3, [r2, #12]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8103738:	687b      	ldr	r3, [r7, #4]
 810373a:	7b1b      	ldrb	r3, [r3, #12]
 810373c:	071a      	lsls	r2, r3, #28
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 810373e:	687b      	ldr	r3, [r7, #4]
 8103740:	7adb      	ldrb	r3, [r3, #11]
 8103742:	061b      	lsls	r3, r3, #24
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8103744:	431a      	orrs	r2, r3
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 8103746:	687b      	ldr	r3, [r7, #4]
 8103748:	7a9b      	ldrb	r3, [r3, #10]
 810374a:	04db      	lsls	r3, r3, #19
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 810374c:	431a      	orrs	r2, r3
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 810374e:	687b      	ldr	r3, [r7, #4]
 8103750:	7b5b      	ldrb	r3, [r3, #13]
 8103752:	049b      	lsls	r3, r3, #18
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 8103754:	431a      	orrs	r2, r3
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 8103756:	687b      	ldr	r3, [r7, #4]
 8103758:	7b9b      	ldrb	r3, [r3, #14]
 810375a:	045b      	lsls	r3, r3, #17
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 810375c:	431a      	orrs	r2, r3
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 810375e:	687b      	ldr	r3, [r7, #4]
 8103760:	7bdb      	ldrb	r3, [r3, #15]
 8103762:	041b      	lsls	r3, r3, #16
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 8103764:	431a      	orrs	r2, r3
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 8103766:	687b      	ldr	r3, [r7, #4]
 8103768:	7a5b      	ldrb	r3, [r3, #9]
 810376a:	021b      	lsls	r3, r3, #8
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 810376c:	431a      	orrs	r2, r3
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 810376e:	687b      	ldr	r3, [r7, #4]
 8103770:	7a1b      	ldrb	r3, [r3, #8]
 8103772:	005b      	lsls	r3, r3, #1
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 8103774:	4313      	orrs	r3, r2
                ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 8103776:	687a      	ldr	r2, [r7, #4]
 8103778:	7812      	ldrb	r2, [r2, #0]
 810377a:	4611      	mov	r1, r2
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 810377c:	4a07      	ldr	r2, [pc, #28]	; (810379c <HAL_MPU_ConfigRegion+0x84>)
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 810377e:	430b      	orrs	r3, r1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8103780:	6113      	str	r3, [r2, #16]
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
 8103782:	e005      	b.n	8103790 <HAL_MPU_ConfigRegion+0x78>
    MPU->RBAR = 0x00;
 8103784:	4b05      	ldr	r3, [pc, #20]	; (810379c <HAL_MPU_ConfigRegion+0x84>)
 8103786:	2200      	movs	r2, #0
 8103788:	60da      	str	r2, [r3, #12]
    MPU->RASR = 0x00;
 810378a:	4b04      	ldr	r3, [pc, #16]	; (810379c <HAL_MPU_ConfigRegion+0x84>)
 810378c:	2200      	movs	r2, #0
 810378e:	611a      	str	r2, [r3, #16]
}
 8103790:	bf00      	nop
 8103792:	370c      	adds	r7, #12
 8103794:	46bd      	mov	sp, r7
 8103796:	f85d 7b04 	ldr.w	r7, [sp], #4
 810379a:	4770      	bx	lr
 810379c:	e000ed90 	.word	0xe000ed90

081037a0 <HAL_GetCurrentCPUID>:
/**
  * @brief  Returns the current CPU ID.
  * @retval CPU identifier
  */
uint32_t HAL_GetCurrentCPUID(void)
{
 81037a0:	b480      	push	{r7}
 81037a2:	af00      	add	r7, sp, #0
  if (((SCB->CPUID & 0x000000F0U) >> 4 )== 0x7U)
 81037a4:	4b07      	ldr	r3, [pc, #28]	; (81037c4 <HAL_GetCurrentCPUID+0x24>)
 81037a6:	681b      	ldr	r3, [r3, #0]
 81037a8:	091b      	lsrs	r3, r3, #4
 81037aa:	f003 030f 	and.w	r3, r3, #15
 81037ae:	2b07      	cmp	r3, #7
 81037b0:	d101      	bne.n	81037b6 <HAL_GetCurrentCPUID+0x16>
  {
    return  CM7_CPUID;
 81037b2:	2303      	movs	r3, #3
 81037b4:	e000      	b.n	81037b8 <HAL_GetCurrentCPUID+0x18>
  }
  else
  {
    return CM4_CPUID;
 81037b6:	2301      	movs	r3, #1
  }
}
 81037b8:	4618      	mov	r0, r3
 81037ba:	46bd      	mov	sp, r7
 81037bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 81037c0:	4770      	bx	lr
 81037c2:	bf00      	nop
 81037c4:	e000ed00 	.word	0xe000ed00

081037c8 <HAL_DMA_Init>:
  * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 81037c8:	b580      	push	{r7, lr}
 81037ca:	b086      	sub	sp, #24
 81037cc:	af00      	add	r7, sp, #0
 81037ce:	6078      	str	r0, [r7, #4]
  uint32_t registerValue;
  uint32_t tickstart = HAL_GetTick();
 81037d0:	f7ff fe7a 	bl	81034c8 <HAL_GetTick>
 81037d4:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs_dma;
  BDMA_Base_Registers *regs_bdma;

  /* Check the DMA peripheral handle */
  if(hdma == NULL)
 81037d6:	687b      	ldr	r3, [r7, #4]
 81037d8:	2b00      	cmp	r3, #0
 81037da:	d101      	bne.n	81037e0 <HAL_DMA_Init+0x18>
  {
    return HAL_ERROR;
 81037dc:	2301      	movs	r3, #1
 81037de:	e314      	b.n	8103e0a <HAL_DMA_Init+0x642>
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));

  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 81037e0:	687b      	ldr	r3, [r7, #4]
 81037e2:	681b      	ldr	r3, [r3, #0]
 81037e4:	4a66      	ldr	r2, [pc, #408]	; (8103980 <HAL_DMA_Init+0x1b8>)
 81037e6:	4293      	cmp	r3, r2
 81037e8:	d04a      	beq.n	8103880 <HAL_DMA_Init+0xb8>
 81037ea:	687b      	ldr	r3, [r7, #4]
 81037ec:	681b      	ldr	r3, [r3, #0]
 81037ee:	4a65      	ldr	r2, [pc, #404]	; (8103984 <HAL_DMA_Init+0x1bc>)
 81037f0:	4293      	cmp	r3, r2
 81037f2:	d045      	beq.n	8103880 <HAL_DMA_Init+0xb8>
 81037f4:	687b      	ldr	r3, [r7, #4]
 81037f6:	681b      	ldr	r3, [r3, #0]
 81037f8:	4a63      	ldr	r2, [pc, #396]	; (8103988 <HAL_DMA_Init+0x1c0>)
 81037fa:	4293      	cmp	r3, r2
 81037fc:	d040      	beq.n	8103880 <HAL_DMA_Init+0xb8>
 81037fe:	687b      	ldr	r3, [r7, #4]
 8103800:	681b      	ldr	r3, [r3, #0]
 8103802:	4a62      	ldr	r2, [pc, #392]	; (810398c <HAL_DMA_Init+0x1c4>)
 8103804:	4293      	cmp	r3, r2
 8103806:	d03b      	beq.n	8103880 <HAL_DMA_Init+0xb8>
 8103808:	687b      	ldr	r3, [r7, #4]
 810380a:	681b      	ldr	r3, [r3, #0]
 810380c:	4a60      	ldr	r2, [pc, #384]	; (8103990 <HAL_DMA_Init+0x1c8>)
 810380e:	4293      	cmp	r3, r2
 8103810:	d036      	beq.n	8103880 <HAL_DMA_Init+0xb8>
 8103812:	687b      	ldr	r3, [r7, #4]
 8103814:	681b      	ldr	r3, [r3, #0]
 8103816:	4a5f      	ldr	r2, [pc, #380]	; (8103994 <HAL_DMA_Init+0x1cc>)
 8103818:	4293      	cmp	r3, r2
 810381a:	d031      	beq.n	8103880 <HAL_DMA_Init+0xb8>
 810381c:	687b      	ldr	r3, [r7, #4]
 810381e:	681b      	ldr	r3, [r3, #0]
 8103820:	4a5d      	ldr	r2, [pc, #372]	; (8103998 <HAL_DMA_Init+0x1d0>)
 8103822:	4293      	cmp	r3, r2
 8103824:	d02c      	beq.n	8103880 <HAL_DMA_Init+0xb8>
 8103826:	687b      	ldr	r3, [r7, #4]
 8103828:	681b      	ldr	r3, [r3, #0]
 810382a:	4a5c      	ldr	r2, [pc, #368]	; (810399c <HAL_DMA_Init+0x1d4>)
 810382c:	4293      	cmp	r3, r2
 810382e:	d027      	beq.n	8103880 <HAL_DMA_Init+0xb8>
 8103830:	687b      	ldr	r3, [r7, #4]
 8103832:	681b      	ldr	r3, [r3, #0]
 8103834:	4a5a      	ldr	r2, [pc, #360]	; (81039a0 <HAL_DMA_Init+0x1d8>)
 8103836:	4293      	cmp	r3, r2
 8103838:	d022      	beq.n	8103880 <HAL_DMA_Init+0xb8>
 810383a:	687b      	ldr	r3, [r7, #4]
 810383c:	681b      	ldr	r3, [r3, #0]
 810383e:	4a59      	ldr	r2, [pc, #356]	; (81039a4 <HAL_DMA_Init+0x1dc>)
 8103840:	4293      	cmp	r3, r2
 8103842:	d01d      	beq.n	8103880 <HAL_DMA_Init+0xb8>
 8103844:	687b      	ldr	r3, [r7, #4]
 8103846:	681b      	ldr	r3, [r3, #0]
 8103848:	4a57      	ldr	r2, [pc, #348]	; (81039a8 <HAL_DMA_Init+0x1e0>)
 810384a:	4293      	cmp	r3, r2
 810384c:	d018      	beq.n	8103880 <HAL_DMA_Init+0xb8>
 810384e:	687b      	ldr	r3, [r7, #4]
 8103850:	681b      	ldr	r3, [r3, #0]
 8103852:	4a56      	ldr	r2, [pc, #344]	; (81039ac <HAL_DMA_Init+0x1e4>)
 8103854:	4293      	cmp	r3, r2
 8103856:	d013      	beq.n	8103880 <HAL_DMA_Init+0xb8>
 8103858:	687b      	ldr	r3, [r7, #4]
 810385a:	681b      	ldr	r3, [r3, #0]
 810385c:	4a54      	ldr	r2, [pc, #336]	; (81039b0 <HAL_DMA_Init+0x1e8>)
 810385e:	4293      	cmp	r3, r2
 8103860:	d00e      	beq.n	8103880 <HAL_DMA_Init+0xb8>
 8103862:	687b      	ldr	r3, [r7, #4]
 8103864:	681b      	ldr	r3, [r3, #0]
 8103866:	4a53      	ldr	r2, [pc, #332]	; (81039b4 <HAL_DMA_Init+0x1ec>)
 8103868:	4293      	cmp	r3, r2
 810386a:	d009      	beq.n	8103880 <HAL_DMA_Init+0xb8>
 810386c:	687b      	ldr	r3, [r7, #4]
 810386e:	681b      	ldr	r3, [r3, #0]
 8103870:	4a51      	ldr	r2, [pc, #324]	; (81039b8 <HAL_DMA_Init+0x1f0>)
 8103872:	4293      	cmp	r3, r2
 8103874:	d004      	beq.n	8103880 <HAL_DMA_Init+0xb8>
 8103876:	687b      	ldr	r3, [r7, #4]
 8103878:	681b      	ldr	r3, [r3, #0]
 810387a:	4a50      	ldr	r2, [pc, #320]	; (81039bc <HAL_DMA_Init+0x1f4>)
 810387c:	4293      	cmp	r3, r2
 810387e:	d101      	bne.n	8103884 <HAL_DMA_Init+0xbc>
 8103880:	2301      	movs	r3, #1
 8103882:	e000      	b.n	8103886 <HAL_DMA_Init+0xbe>
 8103884:	2300      	movs	r3, #0
 8103886:	2b00      	cmp	r3, #0
 8103888:	f000 813b 	beq.w	8103b02 <HAL_DMA_Init+0x33a>
      assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
      assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
    }

    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 810388c:	687b      	ldr	r3, [r7, #4]
 810388e:	2202      	movs	r2, #2
 8103890:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    /* Allocate lock resource */
    __HAL_UNLOCK(hdma);
 8103894:	687b      	ldr	r3, [r7, #4]
 8103896:	2200      	movs	r2, #0
 8103898:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Disable the peripheral */
    __HAL_DMA_DISABLE(hdma);
 810389c:	687b      	ldr	r3, [r7, #4]
 810389e:	681b      	ldr	r3, [r3, #0]
 81038a0:	4a37      	ldr	r2, [pc, #220]	; (8103980 <HAL_DMA_Init+0x1b8>)
 81038a2:	4293      	cmp	r3, r2
 81038a4:	d04a      	beq.n	810393c <HAL_DMA_Init+0x174>
 81038a6:	687b      	ldr	r3, [r7, #4]
 81038a8:	681b      	ldr	r3, [r3, #0]
 81038aa:	4a36      	ldr	r2, [pc, #216]	; (8103984 <HAL_DMA_Init+0x1bc>)
 81038ac:	4293      	cmp	r3, r2
 81038ae:	d045      	beq.n	810393c <HAL_DMA_Init+0x174>
 81038b0:	687b      	ldr	r3, [r7, #4]
 81038b2:	681b      	ldr	r3, [r3, #0]
 81038b4:	4a34      	ldr	r2, [pc, #208]	; (8103988 <HAL_DMA_Init+0x1c0>)
 81038b6:	4293      	cmp	r3, r2
 81038b8:	d040      	beq.n	810393c <HAL_DMA_Init+0x174>
 81038ba:	687b      	ldr	r3, [r7, #4]
 81038bc:	681b      	ldr	r3, [r3, #0]
 81038be:	4a33      	ldr	r2, [pc, #204]	; (810398c <HAL_DMA_Init+0x1c4>)
 81038c0:	4293      	cmp	r3, r2
 81038c2:	d03b      	beq.n	810393c <HAL_DMA_Init+0x174>
 81038c4:	687b      	ldr	r3, [r7, #4]
 81038c6:	681b      	ldr	r3, [r3, #0]
 81038c8:	4a31      	ldr	r2, [pc, #196]	; (8103990 <HAL_DMA_Init+0x1c8>)
 81038ca:	4293      	cmp	r3, r2
 81038cc:	d036      	beq.n	810393c <HAL_DMA_Init+0x174>
 81038ce:	687b      	ldr	r3, [r7, #4]
 81038d0:	681b      	ldr	r3, [r3, #0]
 81038d2:	4a30      	ldr	r2, [pc, #192]	; (8103994 <HAL_DMA_Init+0x1cc>)
 81038d4:	4293      	cmp	r3, r2
 81038d6:	d031      	beq.n	810393c <HAL_DMA_Init+0x174>
 81038d8:	687b      	ldr	r3, [r7, #4]
 81038da:	681b      	ldr	r3, [r3, #0]
 81038dc:	4a2e      	ldr	r2, [pc, #184]	; (8103998 <HAL_DMA_Init+0x1d0>)
 81038de:	4293      	cmp	r3, r2
 81038e0:	d02c      	beq.n	810393c <HAL_DMA_Init+0x174>
 81038e2:	687b      	ldr	r3, [r7, #4]
 81038e4:	681b      	ldr	r3, [r3, #0]
 81038e6:	4a2d      	ldr	r2, [pc, #180]	; (810399c <HAL_DMA_Init+0x1d4>)
 81038e8:	4293      	cmp	r3, r2
 81038ea:	d027      	beq.n	810393c <HAL_DMA_Init+0x174>
 81038ec:	687b      	ldr	r3, [r7, #4]
 81038ee:	681b      	ldr	r3, [r3, #0]
 81038f0:	4a2b      	ldr	r2, [pc, #172]	; (81039a0 <HAL_DMA_Init+0x1d8>)
 81038f2:	4293      	cmp	r3, r2
 81038f4:	d022      	beq.n	810393c <HAL_DMA_Init+0x174>
 81038f6:	687b      	ldr	r3, [r7, #4]
 81038f8:	681b      	ldr	r3, [r3, #0]
 81038fa:	4a2a      	ldr	r2, [pc, #168]	; (81039a4 <HAL_DMA_Init+0x1dc>)
 81038fc:	4293      	cmp	r3, r2
 81038fe:	d01d      	beq.n	810393c <HAL_DMA_Init+0x174>
 8103900:	687b      	ldr	r3, [r7, #4]
 8103902:	681b      	ldr	r3, [r3, #0]
 8103904:	4a28      	ldr	r2, [pc, #160]	; (81039a8 <HAL_DMA_Init+0x1e0>)
 8103906:	4293      	cmp	r3, r2
 8103908:	d018      	beq.n	810393c <HAL_DMA_Init+0x174>
 810390a:	687b      	ldr	r3, [r7, #4]
 810390c:	681b      	ldr	r3, [r3, #0]
 810390e:	4a27      	ldr	r2, [pc, #156]	; (81039ac <HAL_DMA_Init+0x1e4>)
 8103910:	4293      	cmp	r3, r2
 8103912:	d013      	beq.n	810393c <HAL_DMA_Init+0x174>
 8103914:	687b      	ldr	r3, [r7, #4]
 8103916:	681b      	ldr	r3, [r3, #0]
 8103918:	4a25      	ldr	r2, [pc, #148]	; (81039b0 <HAL_DMA_Init+0x1e8>)
 810391a:	4293      	cmp	r3, r2
 810391c:	d00e      	beq.n	810393c <HAL_DMA_Init+0x174>
 810391e:	687b      	ldr	r3, [r7, #4]
 8103920:	681b      	ldr	r3, [r3, #0]
 8103922:	4a24      	ldr	r2, [pc, #144]	; (81039b4 <HAL_DMA_Init+0x1ec>)
 8103924:	4293      	cmp	r3, r2
 8103926:	d009      	beq.n	810393c <HAL_DMA_Init+0x174>
 8103928:	687b      	ldr	r3, [r7, #4]
 810392a:	681b      	ldr	r3, [r3, #0]
 810392c:	4a22      	ldr	r2, [pc, #136]	; (81039b8 <HAL_DMA_Init+0x1f0>)
 810392e:	4293      	cmp	r3, r2
 8103930:	d004      	beq.n	810393c <HAL_DMA_Init+0x174>
 8103932:	687b      	ldr	r3, [r7, #4]
 8103934:	681b      	ldr	r3, [r3, #0]
 8103936:	4a21      	ldr	r2, [pc, #132]	; (81039bc <HAL_DMA_Init+0x1f4>)
 8103938:	4293      	cmp	r3, r2
 810393a:	d108      	bne.n	810394e <HAL_DMA_Init+0x186>
 810393c:	687b      	ldr	r3, [r7, #4]
 810393e:	681b      	ldr	r3, [r3, #0]
 8103940:	681a      	ldr	r2, [r3, #0]
 8103942:	687b      	ldr	r3, [r7, #4]
 8103944:	681b      	ldr	r3, [r3, #0]
 8103946:	f022 0201 	bic.w	r2, r2, #1
 810394a:	601a      	str	r2, [r3, #0]
 810394c:	e007      	b.n	810395e <HAL_DMA_Init+0x196>
 810394e:	687b      	ldr	r3, [r7, #4]
 8103950:	681b      	ldr	r3, [r3, #0]
 8103952:	681a      	ldr	r2, [r3, #0]
 8103954:	687b      	ldr	r3, [r7, #4]
 8103956:	681b      	ldr	r3, [r3, #0]
 8103958:	f022 0201 	bic.w	r2, r2, #1
 810395c:	601a      	str	r2, [r3, #0]

    /* Check if the DMA Stream is effectively disabled */
    while((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U)
 810395e:	e02f      	b.n	81039c0 <HAL_DMA_Init+0x1f8>
    {
      /* Check for the Timeout */
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8103960:	f7ff fdb2 	bl	81034c8 <HAL_GetTick>
 8103964:	4602      	mov	r2, r0
 8103966:	693b      	ldr	r3, [r7, #16]
 8103968:	1ad3      	subs	r3, r2, r3
 810396a:	2b05      	cmp	r3, #5
 810396c:	d928      	bls.n	81039c0 <HAL_DMA_Init+0x1f8>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 810396e:	687b      	ldr	r3, [r7, #4]
 8103970:	2220      	movs	r2, #32
 8103972:	655a      	str	r2, [r3, #84]	; 0x54

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_ERROR;
 8103974:	687b      	ldr	r3, [r7, #4]
 8103976:	2203      	movs	r2, #3
 8103978:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        return HAL_ERROR;
 810397c:	2301      	movs	r3, #1
 810397e:	e244      	b.n	8103e0a <HAL_DMA_Init+0x642>
 8103980:	40020010 	.word	0x40020010
 8103984:	40020028 	.word	0x40020028
 8103988:	40020040 	.word	0x40020040
 810398c:	40020058 	.word	0x40020058
 8103990:	40020070 	.word	0x40020070
 8103994:	40020088 	.word	0x40020088
 8103998:	400200a0 	.word	0x400200a0
 810399c:	400200b8 	.word	0x400200b8
 81039a0:	40020410 	.word	0x40020410
 81039a4:	40020428 	.word	0x40020428
 81039a8:	40020440 	.word	0x40020440
 81039ac:	40020458 	.word	0x40020458
 81039b0:	40020470 	.word	0x40020470
 81039b4:	40020488 	.word	0x40020488
 81039b8:	400204a0 	.word	0x400204a0
 81039bc:	400204b8 	.word	0x400204b8
    while((((DMA_Stream_TypeDef   *)hdma->Instance)->CR & DMA_SxCR_EN) != 0U)
 81039c0:	687b      	ldr	r3, [r7, #4]
 81039c2:	681b      	ldr	r3, [r3, #0]
 81039c4:	681b      	ldr	r3, [r3, #0]
 81039c6:	f003 0301 	and.w	r3, r3, #1
 81039ca:	2b00      	cmp	r3, #0
 81039cc:	d1c8      	bne.n	8103960 <HAL_DMA_Init+0x198>
      }
    }

    /* Get the CR register value */
    registerValue = ((DMA_Stream_TypeDef   *)hdma->Instance)->CR;
 81039ce:	687b      	ldr	r3, [r7, #4]
 81039d0:	681b      	ldr	r3, [r3, #0]
 81039d2:	681b      	ldr	r3, [r3, #0]
 81039d4:	617b      	str	r3, [r7, #20]

    /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
    registerValue &= ((uint32_t)~(DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 81039d6:	697a      	ldr	r2, [r7, #20]
 81039d8:	4b84      	ldr	r3, [pc, #528]	; (8103bec <HAL_DMA_Init+0x424>)
 81039da:	4013      	ands	r3, r2
 81039dc:	617b      	str	r3, [r7, #20]
                        DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                        DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                        DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

    /* Prepare the DMA Stream configuration */
    registerValue |=  hdma->Init.Direction           |
 81039de:	687b      	ldr	r3, [r7, #4]
 81039e0:	689a      	ldr	r2, [r3, #8]
            hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 81039e2:	687b      	ldr	r3, [r7, #4]
 81039e4:	68db      	ldr	r3, [r3, #12]
    registerValue |=  hdma->Init.Direction           |
 81039e6:	431a      	orrs	r2, r3
            hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 81039e8:	687b      	ldr	r3, [r7, #4]
 81039ea:	691b      	ldr	r3, [r3, #16]
 81039ec:	431a      	orrs	r2, r3
            hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 81039ee:	687b      	ldr	r3, [r7, #4]
 81039f0:	695b      	ldr	r3, [r3, #20]
            hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 81039f2:	431a      	orrs	r2, r3
            hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 81039f4:	687b      	ldr	r3, [r7, #4]
 81039f6:	699b      	ldr	r3, [r3, #24]
 81039f8:	431a      	orrs	r2, r3
            hdma->Init.Mode                | hdma->Init.Priority;
 81039fa:	687b      	ldr	r3, [r7, #4]
 81039fc:	69db      	ldr	r3, [r3, #28]
            hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 81039fe:	431a      	orrs	r2, r3
            hdma->Init.Mode                | hdma->Init.Priority;
 8103a00:	687b      	ldr	r3, [r7, #4]
 8103a02:	6a1b      	ldr	r3, [r3, #32]
 8103a04:	4313      	orrs	r3, r2
    registerValue |=  hdma->Init.Direction           |
 8103a06:	697a      	ldr	r2, [r7, #20]
 8103a08:	4313      	orrs	r3, r2
 8103a0a:	617b      	str	r3, [r7, #20]

    /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
    if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8103a0c:	687b      	ldr	r3, [r7, #4]
 8103a0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8103a10:	2b04      	cmp	r3, #4
 8103a12:	d107      	bne.n	8103a24 <HAL_DMA_Init+0x25c>
    {
      /* Get memory burst and peripheral burst */
      registerValue |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8103a14:	687b      	ldr	r3, [r7, #4]
 8103a16:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8103a18:	687b      	ldr	r3, [r7, #4]
 8103a1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8103a1c:	4313      	orrs	r3, r2
 8103a1e:	697a      	ldr	r2, [r7, #20]
 8103a20:	4313      	orrs	r3, r2
 8103a22:	617b      	str	r3, [r7, #20]
    }

    /* Work around for Errata 2.22: UART/USART- DMA transfer lock: DMA stream could be
                                    lock when transferring data to/from USART/UART */
#if (STM32H7_DEV_ID == 0x450UL)
    if((DBGMCU->IDCODE & 0xFFFF0000U) >= 0x20000000U)
 8103a24:	4b72      	ldr	r3, [pc, #456]	; (8103bf0 <HAL_DMA_Init+0x428>)
 8103a26:	681b      	ldr	r3, [r3, #0]
 8103a28:	0c1b      	lsrs	r3, r3, #16
 8103a2a:	041b      	lsls	r3, r3, #16
 8103a2c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8103a30:	d328      	bcc.n	8103a84 <HAL_DMA_Init+0x2bc>
    {
#endif /* STM32H7_DEV_ID == 0x450UL */
      if(IS_DMA_UART_USART_REQUEST(hdma->Init.Request) != 0U)
 8103a32:	687b      	ldr	r3, [r7, #4]
 8103a34:	685b      	ldr	r3, [r3, #4]
 8103a36:	2b28      	cmp	r3, #40	; 0x28
 8103a38:	d903      	bls.n	8103a42 <HAL_DMA_Init+0x27a>
 8103a3a:	687b      	ldr	r3, [r7, #4]
 8103a3c:	685b      	ldr	r3, [r3, #4]
 8103a3e:	2b2e      	cmp	r3, #46	; 0x2e
 8103a40:	d917      	bls.n	8103a72 <HAL_DMA_Init+0x2aa>
 8103a42:	687b      	ldr	r3, [r7, #4]
 8103a44:	685b      	ldr	r3, [r3, #4]
 8103a46:	2b3e      	cmp	r3, #62	; 0x3e
 8103a48:	d903      	bls.n	8103a52 <HAL_DMA_Init+0x28a>
 8103a4a:	687b      	ldr	r3, [r7, #4]
 8103a4c:	685b      	ldr	r3, [r3, #4]
 8103a4e:	2b42      	cmp	r3, #66	; 0x42
 8103a50:	d90f      	bls.n	8103a72 <HAL_DMA_Init+0x2aa>
 8103a52:	687b      	ldr	r3, [r7, #4]
 8103a54:	685b      	ldr	r3, [r3, #4]
 8103a56:	2b46      	cmp	r3, #70	; 0x46
 8103a58:	d903      	bls.n	8103a62 <HAL_DMA_Init+0x29a>
 8103a5a:	687b      	ldr	r3, [r7, #4]
 8103a5c:	685b      	ldr	r3, [r3, #4]
 8103a5e:	2b48      	cmp	r3, #72	; 0x48
 8103a60:	d907      	bls.n	8103a72 <HAL_DMA_Init+0x2aa>
 8103a62:	687b      	ldr	r3, [r7, #4]
 8103a64:	685b      	ldr	r3, [r3, #4]
 8103a66:	2b4e      	cmp	r3, #78	; 0x4e
 8103a68:	d905      	bls.n	8103a76 <HAL_DMA_Init+0x2ae>
 8103a6a:	687b      	ldr	r3, [r7, #4]
 8103a6c:	685b      	ldr	r3, [r3, #4]
 8103a6e:	2b52      	cmp	r3, #82	; 0x52
 8103a70:	d801      	bhi.n	8103a76 <HAL_DMA_Init+0x2ae>
 8103a72:	2301      	movs	r3, #1
 8103a74:	e000      	b.n	8103a78 <HAL_DMA_Init+0x2b0>
 8103a76:	2300      	movs	r3, #0
 8103a78:	2b00      	cmp	r3, #0
 8103a7a:	d003      	beq.n	8103a84 <HAL_DMA_Init+0x2bc>
      {
        registerValue |= DMA_SxCR_TRBUFF;
 8103a7c:	697b      	ldr	r3, [r7, #20]
 8103a7e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8103a82:	617b      	str	r3, [r7, #20]
#if (STM32H7_DEV_ID == 0x450UL)
    }
#endif /* STM32H7_DEV_ID == 0x450UL */

    /* Write to DMA Stream CR register */
    ((DMA_Stream_TypeDef   *)hdma->Instance)->CR = registerValue;
 8103a84:	687b      	ldr	r3, [r7, #4]
 8103a86:	681b      	ldr	r3, [r3, #0]
 8103a88:	697a      	ldr	r2, [r7, #20]
 8103a8a:	601a      	str	r2, [r3, #0]

    /* Get the FCR register value */
    registerValue = ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR;
 8103a8c:	687b      	ldr	r3, [r7, #4]
 8103a8e:	681b      	ldr	r3, [r3, #0]
 8103a90:	695b      	ldr	r3, [r3, #20]
 8103a92:	617b      	str	r3, [r7, #20]

    /* Clear Direct mode and FIFO threshold bits */
    registerValue &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8103a94:	697b      	ldr	r3, [r7, #20]
 8103a96:	f023 0307 	bic.w	r3, r3, #7
 8103a9a:	617b      	str	r3, [r7, #20]

    /* Prepare the DMA Stream FIFO configuration */
    registerValue |= hdma->Init.FIFOMode;
 8103a9c:	687b      	ldr	r3, [r7, #4]
 8103a9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8103aa0:	697a      	ldr	r2, [r7, #20]
 8103aa2:	4313      	orrs	r3, r2
 8103aa4:	617b      	str	r3, [r7, #20]

    /* the FIFO threshold is not used when the FIFO mode is disabled */
    if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8103aa6:	687b      	ldr	r3, [r7, #4]
 8103aa8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8103aaa:	2b04      	cmp	r3, #4
 8103aac:	d117      	bne.n	8103ade <HAL_DMA_Init+0x316>
    {
      /* Get the FIFO threshold */
      registerValue |= hdma->Init.FIFOThreshold;
 8103aae:	687b      	ldr	r3, [r7, #4]
 8103ab0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8103ab2:	697a      	ldr	r2, [r7, #20]
 8103ab4:	4313      	orrs	r3, r2
 8103ab6:	617b      	str	r3, [r7, #20]

      /* Check compatibility between FIFO threshold level and size of the memory burst */
      /* for INCR4, INCR8, INCR16 */
      if(hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8103ab8:	687b      	ldr	r3, [r7, #4]
 8103aba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8103abc:	2b00      	cmp	r3, #0
 8103abe:	d00e      	beq.n	8103ade <HAL_DMA_Init+0x316>
      {
        if (DMA_CheckFifoParam(hdma) != HAL_OK)
 8103ac0:	6878      	ldr	r0, [r7, #4]
 8103ac2:	f000 fa8d 	bl	8103fe0 <DMA_CheckFifoParam>
 8103ac6:	4603      	mov	r3, r0
 8103ac8:	2b00      	cmp	r3, #0
 8103aca:	d008      	beq.n	8103ade <HAL_DMA_Init+0x316>
        {
          /* Update error code */
          hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8103acc:	687b      	ldr	r3, [r7, #4]
 8103ace:	2240      	movs	r2, #64	; 0x40
 8103ad0:	655a      	str	r2, [r3, #84]	; 0x54

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8103ad2:	687b      	ldr	r3, [r7, #4]
 8103ad4:	2201      	movs	r2, #1
 8103ad6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

          return HAL_ERROR;
 8103ada:	2301      	movs	r3, #1
 8103adc:	e195      	b.n	8103e0a <HAL_DMA_Init+0x642>
        }
      }
    }

    /* Write to DMA Stream FCR */
    ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR = registerValue;
 8103ade:	687b      	ldr	r3, [r7, #4]
 8103ae0:	681b      	ldr	r3, [r3, #0]
 8103ae2:	697a      	ldr	r2, [r7, #20]
 8103ae4:	615a      	str	r2, [r3, #20]

    /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
       DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
    regs_dma = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8103ae6:	6878      	ldr	r0, [r7, #4]
 8103ae8:	f000 f9c8 	bl	8103e7c <DMA_CalcBaseAndBitshift>
 8103aec:	4603      	mov	r3, r0
 8103aee:	60bb      	str	r3, [r7, #8]

    /* Clear all interrupt flags */
    regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 8103af0:	687b      	ldr	r3, [r7, #4]
 8103af2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8103af4:	f003 031f 	and.w	r3, r3, #31
 8103af8:	223f      	movs	r2, #63	; 0x3f
 8103afa:	409a      	lsls	r2, r3
 8103afc:	68bb      	ldr	r3, [r7, #8]
 8103afe:	609a      	str	r2, [r3, #8]
 8103b00:	e0cb      	b.n	8103c9a <HAL_DMA_Init+0x4d2>
  }
  else if(IS_BDMA_CHANNEL_INSTANCE(hdma->Instance) != 0U) /* BDMA instance(s) */
 8103b02:	687b      	ldr	r3, [r7, #4]
 8103b04:	681b      	ldr	r3, [r3, #0]
 8103b06:	4a3b      	ldr	r2, [pc, #236]	; (8103bf4 <HAL_DMA_Init+0x42c>)
 8103b08:	4293      	cmp	r3, r2
 8103b0a:	d022      	beq.n	8103b52 <HAL_DMA_Init+0x38a>
 8103b0c:	687b      	ldr	r3, [r7, #4]
 8103b0e:	681b      	ldr	r3, [r3, #0]
 8103b10:	4a39      	ldr	r2, [pc, #228]	; (8103bf8 <HAL_DMA_Init+0x430>)
 8103b12:	4293      	cmp	r3, r2
 8103b14:	d01d      	beq.n	8103b52 <HAL_DMA_Init+0x38a>
 8103b16:	687b      	ldr	r3, [r7, #4]
 8103b18:	681b      	ldr	r3, [r3, #0]
 8103b1a:	4a38      	ldr	r2, [pc, #224]	; (8103bfc <HAL_DMA_Init+0x434>)
 8103b1c:	4293      	cmp	r3, r2
 8103b1e:	d018      	beq.n	8103b52 <HAL_DMA_Init+0x38a>
 8103b20:	687b      	ldr	r3, [r7, #4]
 8103b22:	681b      	ldr	r3, [r3, #0]
 8103b24:	4a36      	ldr	r2, [pc, #216]	; (8103c00 <HAL_DMA_Init+0x438>)
 8103b26:	4293      	cmp	r3, r2
 8103b28:	d013      	beq.n	8103b52 <HAL_DMA_Init+0x38a>
 8103b2a:	687b      	ldr	r3, [r7, #4]
 8103b2c:	681b      	ldr	r3, [r3, #0]
 8103b2e:	4a35      	ldr	r2, [pc, #212]	; (8103c04 <HAL_DMA_Init+0x43c>)
 8103b30:	4293      	cmp	r3, r2
 8103b32:	d00e      	beq.n	8103b52 <HAL_DMA_Init+0x38a>
 8103b34:	687b      	ldr	r3, [r7, #4]
 8103b36:	681b      	ldr	r3, [r3, #0]
 8103b38:	4a33      	ldr	r2, [pc, #204]	; (8103c08 <HAL_DMA_Init+0x440>)
 8103b3a:	4293      	cmp	r3, r2
 8103b3c:	d009      	beq.n	8103b52 <HAL_DMA_Init+0x38a>
 8103b3e:	687b      	ldr	r3, [r7, #4]
 8103b40:	681b      	ldr	r3, [r3, #0]
 8103b42:	4a32      	ldr	r2, [pc, #200]	; (8103c0c <HAL_DMA_Init+0x444>)
 8103b44:	4293      	cmp	r3, r2
 8103b46:	d004      	beq.n	8103b52 <HAL_DMA_Init+0x38a>
 8103b48:	687b      	ldr	r3, [r7, #4]
 8103b4a:	681b      	ldr	r3, [r3, #0]
 8103b4c:	4a30      	ldr	r2, [pc, #192]	; (8103c10 <HAL_DMA_Init+0x448>)
 8103b4e:	4293      	cmp	r3, r2
 8103b50:	d101      	bne.n	8103b56 <HAL_DMA_Init+0x38e>
 8103b52:	2301      	movs	r3, #1
 8103b54:	e000      	b.n	8103b58 <HAL_DMA_Init+0x390>
 8103b56:	2300      	movs	r3, #0
 8103b58:	2b00      	cmp	r3, #0
 8103b5a:	f000 8095 	beq.w	8103c88 <HAL_DMA_Init+0x4c0>
  {
    if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 8103b5e:	687b      	ldr	r3, [r7, #4]
 8103b60:	681b      	ldr	r3, [r3, #0]
 8103b62:	4a24      	ldr	r2, [pc, #144]	; (8103bf4 <HAL_DMA_Init+0x42c>)
 8103b64:	4293      	cmp	r3, r2
 8103b66:	d021      	beq.n	8103bac <HAL_DMA_Init+0x3e4>
 8103b68:	687b      	ldr	r3, [r7, #4]
 8103b6a:	681b      	ldr	r3, [r3, #0]
 8103b6c:	4a22      	ldr	r2, [pc, #136]	; (8103bf8 <HAL_DMA_Init+0x430>)
 8103b6e:	4293      	cmp	r3, r2
 8103b70:	d01c      	beq.n	8103bac <HAL_DMA_Init+0x3e4>
 8103b72:	687b      	ldr	r3, [r7, #4]
 8103b74:	681b      	ldr	r3, [r3, #0]
 8103b76:	4a21      	ldr	r2, [pc, #132]	; (8103bfc <HAL_DMA_Init+0x434>)
 8103b78:	4293      	cmp	r3, r2
 8103b7a:	d017      	beq.n	8103bac <HAL_DMA_Init+0x3e4>
 8103b7c:	687b      	ldr	r3, [r7, #4]
 8103b7e:	681b      	ldr	r3, [r3, #0]
 8103b80:	4a1f      	ldr	r2, [pc, #124]	; (8103c00 <HAL_DMA_Init+0x438>)
 8103b82:	4293      	cmp	r3, r2
 8103b84:	d012      	beq.n	8103bac <HAL_DMA_Init+0x3e4>
 8103b86:	687b      	ldr	r3, [r7, #4]
 8103b88:	681b      	ldr	r3, [r3, #0]
 8103b8a:	4a1e      	ldr	r2, [pc, #120]	; (8103c04 <HAL_DMA_Init+0x43c>)
 8103b8c:	4293      	cmp	r3, r2
 8103b8e:	d00d      	beq.n	8103bac <HAL_DMA_Init+0x3e4>
 8103b90:	687b      	ldr	r3, [r7, #4]
 8103b92:	681b      	ldr	r3, [r3, #0]
 8103b94:	4a1c      	ldr	r2, [pc, #112]	; (8103c08 <HAL_DMA_Init+0x440>)
 8103b96:	4293      	cmp	r3, r2
 8103b98:	d008      	beq.n	8103bac <HAL_DMA_Init+0x3e4>
 8103b9a:	687b      	ldr	r3, [r7, #4]
 8103b9c:	681b      	ldr	r3, [r3, #0]
 8103b9e:	4a1b      	ldr	r2, [pc, #108]	; (8103c0c <HAL_DMA_Init+0x444>)
 8103ba0:	4293      	cmp	r3, r2
 8103ba2:	d003      	beq.n	8103bac <HAL_DMA_Init+0x3e4>
 8103ba4:	687b      	ldr	r3, [r7, #4]
 8103ba6:	681b      	ldr	r3, [r3, #0]
 8103ba8:	4a19      	ldr	r2, [pc, #100]	; (8103c10 <HAL_DMA_Init+0x448>)
 8103baa:	4293      	cmp	r3, r2
      /* Check the request parameter */
      assert_param(IS_BDMA_REQUEST(hdma->Init.Request));
    }

    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8103bac:	687b      	ldr	r3, [r7, #4]
 8103bae:	2202      	movs	r2, #2
 8103bb0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    /* Allocate lock resource */
    __HAL_UNLOCK(hdma);
 8103bb4:	687b      	ldr	r3, [r7, #4]
 8103bb6:	2200      	movs	r2, #0
 8103bb8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Get the CR register value */
    registerValue = ((BDMA_Channel_TypeDef *)hdma->Instance)->CCR;
 8103bbc:	687b      	ldr	r3, [r7, #4]
 8103bbe:	681b      	ldr	r3, [r3, #0]
 8103bc0:	681b      	ldr	r3, [r3, #0]
 8103bc2:	617b      	str	r3, [r7, #20]

    /* Clear PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, MEM2MEM, DBM and CT bits */
    registerValue &= ((uint32_t)~(BDMA_CCR_PL    | BDMA_CCR_MSIZE   | BDMA_CCR_PSIZE  | \
 8103bc4:	697b      	ldr	r3, [r7, #20]
 8103bc6:	f423 33ff 	bic.w	r3, r3, #130560	; 0x1fe00
 8103bca:	f423 73f8 	bic.w	r3, r3, #496	; 0x1f0
 8103bce:	617b      	str	r3, [r7, #20]
                                  BDMA_CCR_MINC  | BDMA_CCR_PINC    | BDMA_CCR_CIRC   | \
                                  BDMA_CCR_DIR   | BDMA_CCR_MEM2MEM | BDMA_CCR_DBM    | \
                                  BDMA_CCR_CT));

    /* Prepare the DMA Channel configuration */
    registerValue |=  DMA_TO_BDMA_DIRECTION(hdma->Init.Direction)            |
 8103bd0:	687b      	ldr	r3, [r7, #4]
 8103bd2:	689b      	ldr	r3, [r3, #8]
 8103bd4:	2b40      	cmp	r3, #64	; 0x40
 8103bd6:	d01d      	beq.n	8103c14 <HAL_DMA_Init+0x44c>
 8103bd8:	687b      	ldr	r3, [r7, #4]
 8103bda:	689b      	ldr	r3, [r3, #8]
 8103bdc:	2b80      	cmp	r3, #128	; 0x80
 8103bde:	d102      	bne.n	8103be6 <HAL_DMA_Init+0x41e>
 8103be0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8103be4:	e017      	b.n	8103c16 <HAL_DMA_Init+0x44e>
 8103be6:	2300      	movs	r3, #0
 8103be8:	e015      	b.n	8103c16 <HAL_DMA_Init+0x44e>
 8103bea:	bf00      	nop
 8103bec:	fe10803f 	.word	0xfe10803f
 8103bf0:	5c001000 	.word	0x5c001000
 8103bf4:	58025408 	.word	0x58025408
 8103bf8:	5802541c 	.word	0x5802541c
 8103bfc:	58025430 	.word	0x58025430
 8103c00:	58025444 	.word	0x58025444
 8103c04:	58025458 	.word	0x58025458
 8103c08:	5802546c 	.word	0x5802546c
 8103c0c:	58025480 	.word	0x58025480
 8103c10:	58025494 	.word	0x58025494
 8103c14:	2310      	movs	r3, #16
                      DMA_TO_BDMA_PERIPHERAL_INC(hdma->Init.PeriphInc)       |
 8103c16:	687a      	ldr	r2, [r7, #4]
 8103c18:	68d2      	ldr	r2, [r2, #12]
 8103c1a:	08d2      	lsrs	r2, r2, #3
    registerValue |=  DMA_TO_BDMA_DIRECTION(hdma->Init.Direction)            |
 8103c1c:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_MEMORY_INC(hdma->Init.MemInc)              |
 8103c1e:	687b      	ldr	r3, [r7, #4]
 8103c20:	691b      	ldr	r3, [r3, #16]
 8103c22:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_PERIPHERAL_INC(hdma->Init.PeriphInc)       |
 8103c24:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_PDATA_SIZE(hdma->Init.PeriphDataAlignment) |
 8103c26:	687b      	ldr	r3, [r7, #4]
 8103c28:	695b      	ldr	r3, [r3, #20]
 8103c2a:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_MEMORY_INC(hdma->Init.MemInc)              |
 8103c2c:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_MDATA_SIZE(hdma->Init.MemDataAlignment)    |
 8103c2e:	687b      	ldr	r3, [r7, #4]
 8103c30:	699b      	ldr	r3, [r3, #24]
 8103c32:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_PDATA_SIZE(hdma->Init.PeriphDataAlignment) |
 8103c34:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_MODE(hdma->Init.Mode)                      |
 8103c36:	687b      	ldr	r3, [r7, #4]
 8103c38:	69db      	ldr	r3, [r3, #28]
 8103c3a:	08db      	lsrs	r3, r3, #3
                      DMA_TO_BDMA_MDATA_SIZE(hdma->Init.MemDataAlignment)    |
 8103c3c:	431a      	orrs	r2, r3
                      DMA_TO_BDMA_PRIORITY(hdma->Init.Priority);
 8103c3e:	687b      	ldr	r3, [r7, #4]
 8103c40:	6a1b      	ldr	r3, [r3, #32]
 8103c42:	091b      	lsrs	r3, r3, #4
                      DMA_TO_BDMA_MODE(hdma->Init.Mode)                      |
 8103c44:	4313      	orrs	r3, r2
    registerValue |=  DMA_TO_BDMA_DIRECTION(hdma->Init.Direction)            |
 8103c46:	697a      	ldr	r2, [r7, #20]
 8103c48:	4313      	orrs	r3, r2
 8103c4a:	617b      	str	r3, [r7, #20]

    /* Write to DMA Channel CR register */
    ((BDMA_Channel_TypeDef *)hdma->Instance)->CCR = registerValue;
 8103c4c:	687b      	ldr	r3, [r7, #4]
 8103c4e:	681b      	ldr	r3, [r3, #0]
 8103c50:	697a      	ldr	r2, [r7, #20]
 8103c52:	601a      	str	r2, [r3, #0]

    /* calculation of the channel index */
    hdma->StreamIndex = (((uint32_t)((uint32_t*)hdma->Instance) - (uint32_t)BDMA_Channel0) / ((uint32_t)BDMA_Channel1 - (uint32_t)BDMA_Channel0)) << 2U;
 8103c54:	687b      	ldr	r3, [r7, #4]
 8103c56:	681b      	ldr	r3, [r3, #0]
 8103c58:	461a      	mov	r2, r3
 8103c5a:	4b6e      	ldr	r3, [pc, #440]	; (8103e14 <HAL_DMA_Init+0x64c>)
 8103c5c:	4413      	add	r3, r2
 8103c5e:	4a6e      	ldr	r2, [pc, #440]	; (8103e18 <HAL_DMA_Init+0x650>)
 8103c60:	fba2 2303 	umull	r2, r3, r2, r3
 8103c64:	091b      	lsrs	r3, r3, #4
 8103c66:	009a      	lsls	r2, r3, #2
 8103c68:	687b      	ldr	r3, [r7, #4]
 8103c6a:	65da      	str	r2, [r3, #92]	; 0x5c

    /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
    DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
    regs_bdma = (BDMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8103c6c:	6878      	ldr	r0, [r7, #4]
 8103c6e:	f000 f905 	bl	8103e7c <DMA_CalcBaseAndBitshift>
 8103c72:	4603      	mov	r3, r0
 8103c74:	60fb      	str	r3, [r7, #12]

    /* Clear all interrupt flags */
    regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
 8103c76:	687b      	ldr	r3, [r7, #4]
 8103c78:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8103c7a:	f003 031f 	and.w	r3, r3, #31
 8103c7e:	2201      	movs	r2, #1
 8103c80:	409a      	lsls	r2, r3
 8103c82:	68fb      	ldr	r3, [r7, #12]
 8103c84:	605a      	str	r2, [r3, #4]
 8103c86:	e008      	b.n	8103c9a <HAL_DMA_Init+0x4d2>
  }
  else
  {
    hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8103c88:	687b      	ldr	r3, [r7, #4]
 8103c8a:	2240      	movs	r2, #64	; 0x40
 8103c8c:	655a      	str	r2, [r3, #84]	; 0x54
    hdma->State     = HAL_DMA_STATE_ERROR;
 8103c8e:	687b      	ldr	r3, [r7, #4]
 8103c90:	2203      	movs	r2, #3
 8103c92:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

    return HAL_ERROR;
 8103c96:	2301      	movs	r3, #1
 8103c98:	e0b7      	b.n	8103e0a <HAL_DMA_Init+0x642>
  }

  if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8103c9a:	687b      	ldr	r3, [r7, #4]
 8103c9c:	681b      	ldr	r3, [r3, #0]
 8103c9e:	4a5f      	ldr	r2, [pc, #380]	; (8103e1c <HAL_DMA_Init+0x654>)
 8103ca0:	4293      	cmp	r3, r2
 8103ca2:	d072      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103ca4:	687b      	ldr	r3, [r7, #4]
 8103ca6:	681b      	ldr	r3, [r3, #0]
 8103ca8:	4a5d      	ldr	r2, [pc, #372]	; (8103e20 <HAL_DMA_Init+0x658>)
 8103caa:	4293      	cmp	r3, r2
 8103cac:	d06d      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103cae:	687b      	ldr	r3, [r7, #4]
 8103cb0:	681b      	ldr	r3, [r3, #0]
 8103cb2:	4a5c      	ldr	r2, [pc, #368]	; (8103e24 <HAL_DMA_Init+0x65c>)
 8103cb4:	4293      	cmp	r3, r2
 8103cb6:	d068      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103cb8:	687b      	ldr	r3, [r7, #4]
 8103cba:	681b      	ldr	r3, [r3, #0]
 8103cbc:	4a5a      	ldr	r2, [pc, #360]	; (8103e28 <HAL_DMA_Init+0x660>)
 8103cbe:	4293      	cmp	r3, r2
 8103cc0:	d063      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103cc2:	687b      	ldr	r3, [r7, #4]
 8103cc4:	681b      	ldr	r3, [r3, #0]
 8103cc6:	4a59      	ldr	r2, [pc, #356]	; (8103e2c <HAL_DMA_Init+0x664>)
 8103cc8:	4293      	cmp	r3, r2
 8103cca:	d05e      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103ccc:	687b      	ldr	r3, [r7, #4]
 8103cce:	681b      	ldr	r3, [r3, #0]
 8103cd0:	4a57      	ldr	r2, [pc, #348]	; (8103e30 <HAL_DMA_Init+0x668>)
 8103cd2:	4293      	cmp	r3, r2
 8103cd4:	d059      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103cd6:	687b      	ldr	r3, [r7, #4]
 8103cd8:	681b      	ldr	r3, [r3, #0]
 8103cda:	4a56      	ldr	r2, [pc, #344]	; (8103e34 <HAL_DMA_Init+0x66c>)
 8103cdc:	4293      	cmp	r3, r2
 8103cde:	d054      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103ce0:	687b      	ldr	r3, [r7, #4]
 8103ce2:	681b      	ldr	r3, [r3, #0]
 8103ce4:	4a54      	ldr	r2, [pc, #336]	; (8103e38 <HAL_DMA_Init+0x670>)
 8103ce6:	4293      	cmp	r3, r2
 8103ce8:	d04f      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103cea:	687b      	ldr	r3, [r7, #4]
 8103cec:	681b      	ldr	r3, [r3, #0]
 8103cee:	4a53      	ldr	r2, [pc, #332]	; (8103e3c <HAL_DMA_Init+0x674>)
 8103cf0:	4293      	cmp	r3, r2
 8103cf2:	d04a      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103cf4:	687b      	ldr	r3, [r7, #4]
 8103cf6:	681b      	ldr	r3, [r3, #0]
 8103cf8:	4a51      	ldr	r2, [pc, #324]	; (8103e40 <HAL_DMA_Init+0x678>)
 8103cfa:	4293      	cmp	r3, r2
 8103cfc:	d045      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103cfe:	687b      	ldr	r3, [r7, #4]
 8103d00:	681b      	ldr	r3, [r3, #0]
 8103d02:	4a50      	ldr	r2, [pc, #320]	; (8103e44 <HAL_DMA_Init+0x67c>)
 8103d04:	4293      	cmp	r3, r2
 8103d06:	d040      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103d08:	687b      	ldr	r3, [r7, #4]
 8103d0a:	681b      	ldr	r3, [r3, #0]
 8103d0c:	4a4e      	ldr	r2, [pc, #312]	; (8103e48 <HAL_DMA_Init+0x680>)
 8103d0e:	4293      	cmp	r3, r2
 8103d10:	d03b      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103d12:	687b      	ldr	r3, [r7, #4]
 8103d14:	681b      	ldr	r3, [r3, #0]
 8103d16:	4a4d      	ldr	r2, [pc, #308]	; (8103e4c <HAL_DMA_Init+0x684>)
 8103d18:	4293      	cmp	r3, r2
 8103d1a:	d036      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103d1c:	687b      	ldr	r3, [r7, #4]
 8103d1e:	681b      	ldr	r3, [r3, #0]
 8103d20:	4a4b      	ldr	r2, [pc, #300]	; (8103e50 <HAL_DMA_Init+0x688>)
 8103d22:	4293      	cmp	r3, r2
 8103d24:	d031      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103d26:	687b      	ldr	r3, [r7, #4]
 8103d28:	681b      	ldr	r3, [r3, #0]
 8103d2a:	4a4a      	ldr	r2, [pc, #296]	; (8103e54 <HAL_DMA_Init+0x68c>)
 8103d2c:	4293      	cmp	r3, r2
 8103d2e:	d02c      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103d30:	687b      	ldr	r3, [r7, #4]
 8103d32:	681b      	ldr	r3, [r3, #0]
 8103d34:	4a48      	ldr	r2, [pc, #288]	; (8103e58 <HAL_DMA_Init+0x690>)
 8103d36:	4293      	cmp	r3, r2
 8103d38:	d027      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103d3a:	687b      	ldr	r3, [r7, #4]
 8103d3c:	681b      	ldr	r3, [r3, #0]
 8103d3e:	4a47      	ldr	r2, [pc, #284]	; (8103e5c <HAL_DMA_Init+0x694>)
 8103d40:	4293      	cmp	r3, r2
 8103d42:	d022      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103d44:	687b      	ldr	r3, [r7, #4]
 8103d46:	681b      	ldr	r3, [r3, #0]
 8103d48:	4a45      	ldr	r2, [pc, #276]	; (8103e60 <HAL_DMA_Init+0x698>)
 8103d4a:	4293      	cmp	r3, r2
 8103d4c:	d01d      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103d4e:	687b      	ldr	r3, [r7, #4]
 8103d50:	681b      	ldr	r3, [r3, #0]
 8103d52:	4a44      	ldr	r2, [pc, #272]	; (8103e64 <HAL_DMA_Init+0x69c>)
 8103d54:	4293      	cmp	r3, r2
 8103d56:	d018      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103d58:	687b      	ldr	r3, [r7, #4]
 8103d5a:	681b      	ldr	r3, [r3, #0]
 8103d5c:	4a42      	ldr	r2, [pc, #264]	; (8103e68 <HAL_DMA_Init+0x6a0>)
 8103d5e:	4293      	cmp	r3, r2
 8103d60:	d013      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103d62:	687b      	ldr	r3, [r7, #4]
 8103d64:	681b      	ldr	r3, [r3, #0]
 8103d66:	4a41      	ldr	r2, [pc, #260]	; (8103e6c <HAL_DMA_Init+0x6a4>)
 8103d68:	4293      	cmp	r3, r2
 8103d6a:	d00e      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103d6c:	687b      	ldr	r3, [r7, #4]
 8103d6e:	681b      	ldr	r3, [r3, #0]
 8103d70:	4a3f      	ldr	r2, [pc, #252]	; (8103e70 <HAL_DMA_Init+0x6a8>)
 8103d72:	4293      	cmp	r3, r2
 8103d74:	d009      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103d76:	687b      	ldr	r3, [r7, #4]
 8103d78:	681b      	ldr	r3, [r3, #0]
 8103d7a:	4a3e      	ldr	r2, [pc, #248]	; (8103e74 <HAL_DMA_Init+0x6ac>)
 8103d7c:	4293      	cmp	r3, r2
 8103d7e:	d004      	beq.n	8103d8a <HAL_DMA_Init+0x5c2>
 8103d80:	687b      	ldr	r3, [r7, #4]
 8103d82:	681b      	ldr	r3, [r3, #0]
 8103d84:	4a3c      	ldr	r2, [pc, #240]	; (8103e78 <HAL_DMA_Init+0x6b0>)
 8103d86:	4293      	cmp	r3, r2
 8103d88:	d101      	bne.n	8103d8e <HAL_DMA_Init+0x5c6>
 8103d8a:	2301      	movs	r3, #1
 8103d8c:	e000      	b.n	8103d90 <HAL_DMA_Init+0x5c8>
 8103d8e:	2300      	movs	r3, #0
 8103d90:	2b00      	cmp	r3, #0
 8103d92:	d032      	beq.n	8103dfa <HAL_DMA_Init+0x632>
  {
    /* Initialize parameters for DMAMUX channel :
    DMAmuxChannel, DMAmuxChannelStatus and DMAmuxChannelStatusMask
    */
    DMA_CalcDMAMUXChannelBaseAndMask(hdma);
 8103d94:	6878      	ldr	r0, [r7, #4]
 8103d96:	f000 f99f 	bl	81040d8 <DMA_CalcDMAMUXChannelBaseAndMask>

    if(hdma->Init.Direction == DMA_MEMORY_TO_MEMORY)
 8103d9a:	687b      	ldr	r3, [r7, #4]
 8103d9c:	689b      	ldr	r3, [r3, #8]
 8103d9e:	2b80      	cmp	r3, #128	; 0x80
 8103da0:	d102      	bne.n	8103da8 <HAL_DMA_Init+0x5e0>
    {
      /* if memory to memory force the request to 0*/
      hdma->Init.Request = DMA_REQUEST_MEM2MEM;
 8103da2:	687b      	ldr	r3, [r7, #4]
 8103da4:	2200      	movs	r2, #0
 8103da6:	605a      	str	r2, [r3, #4]
    }

    /* Set peripheral request  to DMAMUX channel */
    hdma->DMAmuxChannel->CCR = (hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID);
 8103da8:	687b      	ldr	r3, [r7, #4]
 8103daa:	685a      	ldr	r2, [r3, #4]
 8103dac:	687b      	ldr	r3, [r7, #4]
 8103dae:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8103db0:	b2d2      	uxtb	r2, r2
 8103db2:	601a      	str	r2, [r3, #0]

    /* Clear the DMAMUX synchro overrun flag */
    hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 8103db4:	687b      	ldr	r3, [r7, #4]
 8103db6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8103db8:	687a      	ldr	r2, [r7, #4]
 8103dba:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8103dbc:	605a      	str	r2, [r3, #4]

    /* Initialize parameters for DMAMUX request generator :
    if the DMA request is DMA_REQUEST_GENERATOR0 to DMA_REQUEST_GENERATOR7
    */
    if((hdma->Init.Request >= DMA_REQUEST_GENERATOR0) && (hdma->Init.Request <= DMA_REQUEST_GENERATOR7))
 8103dbe:	687b      	ldr	r3, [r7, #4]
 8103dc0:	685b      	ldr	r3, [r3, #4]
 8103dc2:	2b00      	cmp	r3, #0
 8103dc4:	d010      	beq.n	8103de8 <HAL_DMA_Init+0x620>
 8103dc6:	687b      	ldr	r3, [r7, #4]
 8103dc8:	685b      	ldr	r3, [r3, #4]
 8103dca:	2b08      	cmp	r3, #8
 8103dcc:	d80c      	bhi.n	8103de8 <HAL_DMA_Init+0x620>
    {
      /* Initialize parameters for DMAMUX request generator :
      DMAmuxRequestGen, DMAmuxRequestGenStatus and DMAmuxRequestGenStatusMask */
      DMA_CalcDMAMUXRequestGenBaseAndMask(hdma);
 8103dce:	6878      	ldr	r0, [r7, #4]
 8103dd0:	f000 fa1c 	bl	810420c <DMA_CalcDMAMUXRequestGenBaseAndMask>

      /* Reset the DMAMUX request generator register */
      hdma->DMAmuxRequestGen->RGCR = 0U;
 8103dd4:	687b      	ldr	r3, [r7, #4]
 8103dd6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8103dd8:	2200      	movs	r2, #0
 8103dda:	601a      	str	r2, [r3, #0]

      /* Clear the DMAMUX request generator overrun flag */
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 8103ddc:	687b      	ldr	r3, [r7, #4]
 8103dde:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8103de0:	687a      	ldr	r2, [r7, #4]
 8103de2:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8103de4:	605a      	str	r2, [r3, #4]
 8103de6:	e008      	b.n	8103dfa <HAL_DMA_Init+0x632>
    }
    else
    {
      hdma->DMAmuxRequestGen = 0U;
 8103de8:	687b      	ldr	r3, [r7, #4]
 8103dea:	2200      	movs	r2, #0
 8103dec:	66da      	str	r2, [r3, #108]	; 0x6c
      hdma->DMAmuxRequestGenStatus = 0U;
 8103dee:	687b      	ldr	r3, [r7, #4]
 8103df0:	2200      	movs	r2, #0
 8103df2:	671a      	str	r2, [r3, #112]	; 0x70
      hdma->DMAmuxRequestGenStatusMask = 0U;
 8103df4:	687b      	ldr	r3, [r7, #4]
 8103df6:	2200      	movs	r2, #0
 8103df8:	675a      	str	r2, [r3, #116]	; 0x74
    }
  }

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8103dfa:	687b      	ldr	r3, [r7, #4]
 8103dfc:	2200      	movs	r2, #0
 8103dfe:	655a      	str	r2, [r3, #84]	; 0x54

  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 8103e00:	687b      	ldr	r3, [r7, #4]
 8103e02:	2201      	movs	r2, #1
 8103e04:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  return HAL_OK;
 8103e08:	2300      	movs	r3, #0
}
 8103e0a:	4618      	mov	r0, r3
 8103e0c:	3718      	adds	r7, #24
 8103e0e:	46bd      	mov	sp, r7
 8103e10:	bd80      	pop	{r7, pc}
 8103e12:	bf00      	nop
 8103e14:	a7fdabf8 	.word	0xa7fdabf8
 8103e18:	cccccccd 	.word	0xcccccccd
 8103e1c:	40020010 	.word	0x40020010
 8103e20:	40020028 	.word	0x40020028
 8103e24:	40020040 	.word	0x40020040
 8103e28:	40020058 	.word	0x40020058
 8103e2c:	40020070 	.word	0x40020070
 8103e30:	40020088 	.word	0x40020088
 8103e34:	400200a0 	.word	0x400200a0
 8103e38:	400200b8 	.word	0x400200b8
 8103e3c:	40020410 	.word	0x40020410
 8103e40:	40020428 	.word	0x40020428
 8103e44:	40020440 	.word	0x40020440
 8103e48:	40020458 	.word	0x40020458
 8103e4c:	40020470 	.word	0x40020470
 8103e50:	40020488 	.word	0x40020488
 8103e54:	400204a0 	.word	0x400204a0
 8103e58:	400204b8 	.word	0x400204b8
 8103e5c:	58025408 	.word	0x58025408
 8103e60:	5802541c 	.word	0x5802541c
 8103e64:	58025430 	.word	0x58025430
 8103e68:	58025444 	.word	0x58025444
 8103e6c:	58025458 	.word	0x58025458
 8103e70:	5802546c 	.word	0x5802546c
 8103e74:	58025480 	.word	0x58025480
 8103e78:	58025494 	.word	0x58025494

08103e7c <DMA_CalcBaseAndBitshift>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 8103e7c:	b480      	push	{r7}
 8103e7e:	b085      	sub	sp, #20
 8103e80:	af00      	add	r7, sp, #0
 8103e82:	6078      	str	r0, [r7, #4]
  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8103e84:	687b      	ldr	r3, [r7, #4]
 8103e86:	681b      	ldr	r3, [r3, #0]
 8103e88:	4a43      	ldr	r2, [pc, #268]	; (8103f98 <DMA_CalcBaseAndBitshift+0x11c>)
 8103e8a:	4293      	cmp	r3, r2
 8103e8c:	d04a      	beq.n	8103f24 <DMA_CalcBaseAndBitshift+0xa8>
 8103e8e:	687b      	ldr	r3, [r7, #4]
 8103e90:	681b      	ldr	r3, [r3, #0]
 8103e92:	4a42      	ldr	r2, [pc, #264]	; (8103f9c <DMA_CalcBaseAndBitshift+0x120>)
 8103e94:	4293      	cmp	r3, r2
 8103e96:	d045      	beq.n	8103f24 <DMA_CalcBaseAndBitshift+0xa8>
 8103e98:	687b      	ldr	r3, [r7, #4]
 8103e9a:	681b      	ldr	r3, [r3, #0]
 8103e9c:	4a40      	ldr	r2, [pc, #256]	; (8103fa0 <DMA_CalcBaseAndBitshift+0x124>)
 8103e9e:	4293      	cmp	r3, r2
 8103ea0:	d040      	beq.n	8103f24 <DMA_CalcBaseAndBitshift+0xa8>
 8103ea2:	687b      	ldr	r3, [r7, #4]
 8103ea4:	681b      	ldr	r3, [r3, #0]
 8103ea6:	4a3f      	ldr	r2, [pc, #252]	; (8103fa4 <DMA_CalcBaseAndBitshift+0x128>)
 8103ea8:	4293      	cmp	r3, r2
 8103eaa:	d03b      	beq.n	8103f24 <DMA_CalcBaseAndBitshift+0xa8>
 8103eac:	687b      	ldr	r3, [r7, #4]
 8103eae:	681b      	ldr	r3, [r3, #0]
 8103eb0:	4a3d      	ldr	r2, [pc, #244]	; (8103fa8 <DMA_CalcBaseAndBitshift+0x12c>)
 8103eb2:	4293      	cmp	r3, r2
 8103eb4:	d036      	beq.n	8103f24 <DMA_CalcBaseAndBitshift+0xa8>
 8103eb6:	687b      	ldr	r3, [r7, #4]
 8103eb8:	681b      	ldr	r3, [r3, #0]
 8103eba:	4a3c      	ldr	r2, [pc, #240]	; (8103fac <DMA_CalcBaseAndBitshift+0x130>)
 8103ebc:	4293      	cmp	r3, r2
 8103ebe:	d031      	beq.n	8103f24 <DMA_CalcBaseAndBitshift+0xa8>
 8103ec0:	687b      	ldr	r3, [r7, #4]
 8103ec2:	681b      	ldr	r3, [r3, #0]
 8103ec4:	4a3a      	ldr	r2, [pc, #232]	; (8103fb0 <DMA_CalcBaseAndBitshift+0x134>)
 8103ec6:	4293      	cmp	r3, r2
 8103ec8:	d02c      	beq.n	8103f24 <DMA_CalcBaseAndBitshift+0xa8>
 8103eca:	687b      	ldr	r3, [r7, #4]
 8103ecc:	681b      	ldr	r3, [r3, #0]
 8103ece:	4a39      	ldr	r2, [pc, #228]	; (8103fb4 <DMA_CalcBaseAndBitshift+0x138>)
 8103ed0:	4293      	cmp	r3, r2
 8103ed2:	d027      	beq.n	8103f24 <DMA_CalcBaseAndBitshift+0xa8>
 8103ed4:	687b      	ldr	r3, [r7, #4]
 8103ed6:	681b      	ldr	r3, [r3, #0]
 8103ed8:	4a37      	ldr	r2, [pc, #220]	; (8103fb8 <DMA_CalcBaseAndBitshift+0x13c>)
 8103eda:	4293      	cmp	r3, r2
 8103edc:	d022      	beq.n	8103f24 <DMA_CalcBaseAndBitshift+0xa8>
 8103ede:	687b      	ldr	r3, [r7, #4]
 8103ee0:	681b      	ldr	r3, [r3, #0]
 8103ee2:	4a36      	ldr	r2, [pc, #216]	; (8103fbc <DMA_CalcBaseAndBitshift+0x140>)
 8103ee4:	4293      	cmp	r3, r2
 8103ee6:	d01d      	beq.n	8103f24 <DMA_CalcBaseAndBitshift+0xa8>
 8103ee8:	687b      	ldr	r3, [r7, #4]
 8103eea:	681b      	ldr	r3, [r3, #0]
 8103eec:	4a34      	ldr	r2, [pc, #208]	; (8103fc0 <DMA_CalcBaseAndBitshift+0x144>)
 8103eee:	4293      	cmp	r3, r2
 8103ef0:	d018      	beq.n	8103f24 <DMA_CalcBaseAndBitshift+0xa8>
 8103ef2:	687b      	ldr	r3, [r7, #4]
 8103ef4:	681b      	ldr	r3, [r3, #0]
 8103ef6:	4a33      	ldr	r2, [pc, #204]	; (8103fc4 <DMA_CalcBaseAndBitshift+0x148>)
 8103ef8:	4293      	cmp	r3, r2
 8103efa:	d013      	beq.n	8103f24 <DMA_CalcBaseAndBitshift+0xa8>
 8103efc:	687b      	ldr	r3, [r7, #4]
 8103efe:	681b      	ldr	r3, [r3, #0]
 8103f00:	4a31      	ldr	r2, [pc, #196]	; (8103fc8 <DMA_CalcBaseAndBitshift+0x14c>)
 8103f02:	4293      	cmp	r3, r2
 8103f04:	d00e      	beq.n	8103f24 <DMA_CalcBaseAndBitshift+0xa8>
 8103f06:	687b      	ldr	r3, [r7, #4]
 8103f08:	681b      	ldr	r3, [r3, #0]
 8103f0a:	4a30      	ldr	r2, [pc, #192]	; (8103fcc <DMA_CalcBaseAndBitshift+0x150>)
 8103f0c:	4293      	cmp	r3, r2
 8103f0e:	d009      	beq.n	8103f24 <DMA_CalcBaseAndBitshift+0xa8>
 8103f10:	687b      	ldr	r3, [r7, #4]
 8103f12:	681b      	ldr	r3, [r3, #0]
 8103f14:	4a2e      	ldr	r2, [pc, #184]	; (8103fd0 <DMA_CalcBaseAndBitshift+0x154>)
 8103f16:	4293      	cmp	r3, r2
 8103f18:	d004      	beq.n	8103f24 <DMA_CalcBaseAndBitshift+0xa8>
 8103f1a:	687b      	ldr	r3, [r7, #4]
 8103f1c:	681b      	ldr	r3, [r3, #0]
 8103f1e:	4a2d      	ldr	r2, [pc, #180]	; (8103fd4 <DMA_CalcBaseAndBitshift+0x158>)
 8103f20:	4293      	cmp	r3, r2
 8103f22:	d101      	bne.n	8103f28 <DMA_CalcBaseAndBitshift+0xac>
 8103f24:	2301      	movs	r3, #1
 8103f26:	e000      	b.n	8103f2a <DMA_CalcBaseAndBitshift+0xae>
 8103f28:	2300      	movs	r3, #0
 8103f2a:	2b00      	cmp	r3, #0
 8103f2c:	d026      	beq.n	8103f7c <DMA_CalcBaseAndBitshift+0x100>
  {
    uint32_t stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 16U) / 24U;
 8103f2e:	687b      	ldr	r3, [r7, #4]
 8103f30:	681b      	ldr	r3, [r3, #0]
 8103f32:	b2db      	uxtb	r3, r3
 8103f34:	3b10      	subs	r3, #16
 8103f36:	4a28      	ldr	r2, [pc, #160]	; (8103fd8 <DMA_CalcBaseAndBitshift+0x15c>)
 8103f38:	fba2 2303 	umull	r2, r3, r2, r3
 8103f3c:	091b      	lsrs	r3, r3, #4
 8103f3e:	60fb      	str	r3, [r7, #12]

    /* lookup table for necessary bitshift of flags within status registers */
    static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
    hdma->StreamIndex = flagBitshiftOffset[stream_number & 0x7U];
 8103f40:	68fb      	ldr	r3, [r7, #12]
 8103f42:	f003 0307 	and.w	r3, r3, #7
 8103f46:	4a25      	ldr	r2, [pc, #148]	; (8103fdc <DMA_CalcBaseAndBitshift+0x160>)
 8103f48:	5cd3      	ldrb	r3, [r2, r3]
 8103f4a:	461a      	mov	r2, r3
 8103f4c:	687b      	ldr	r3, [r7, #4]
 8103f4e:	65da      	str	r2, [r3, #92]	; 0x5c

    if (stream_number > 3U)
 8103f50:	68fb      	ldr	r3, [r7, #12]
 8103f52:	2b03      	cmp	r3, #3
 8103f54:	d909      	bls.n	8103f6a <DMA_CalcBaseAndBitshift+0xee>
    {
      /* return pointer to HISR and HIFCR */
      hdma->StreamBaseAddress = (((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0x3FFU)) + 4U);
 8103f56:	687b      	ldr	r3, [r7, #4]
 8103f58:	681b      	ldr	r3, [r3, #0]
 8103f5a:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8103f5e:	f023 0303 	bic.w	r3, r3, #3
 8103f62:	1d1a      	adds	r2, r3, #4
 8103f64:	687b      	ldr	r3, [r7, #4]
 8103f66:	659a      	str	r2, [r3, #88]	; 0x58
 8103f68:	e00e      	b.n	8103f88 <DMA_CalcBaseAndBitshift+0x10c>
    }
    else
    {
      /* return pointer to LISR and LIFCR */
      hdma->StreamBaseAddress = ((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0x3FFU));
 8103f6a:	687b      	ldr	r3, [r7, #4]
 8103f6c:	681b      	ldr	r3, [r3, #0]
 8103f6e:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8103f72:	f023 0303 	bic.w	r3, r3, #3
 8103f76:	687a      	ldr	r2, [r7, #4]
 8103f78:	6593      	str	r3, [r2, #88]	; 0x58
 8103f7a:	e005      	b.n	8103f88 <DMA_CalcBaseAndBitshift+0x10c>
    }
  }
  else /* BDMA instance(s) */
  {
    /* return pointer to ISR and IFCR */
    hdma->StreamBaseAddress = ((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0xFFU));
 8103f7c:	687b      	ldr	r3, [r7, #4]
 8103f7e:	681b      	ldr	r3, [r3, #0]
 8103f80:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 8103f84:	687b      	ldr	r3, [r7, #4]
 8103f86:	659a      	str	r2, [r3, #88]	; 0x58
  }

  return hdma->StreamBaseAddress;
 8103f88:	687b      	ldr	r3, [r7, #4]
 8103f8a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
}
 8103f8c:	4618      	mov	r0, r3
 8103f8e:	3714      	adds	r7, #20
 8103f90:	46bd      	mov	sp, r7
 8103f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8103f96:	4770      	bx	lr
 8103f98:	40020010 	.word	0x40020010
 8103f9c:	40020028 	.word	0x40020028
 8103fa0:	40020040 	.word	0x40020040
 8103fa4:	40020058 	.word	0x40020058
 8103fa8:	40020070 	.word	0x40020070
 8103fac:	40020088 	.word	0x40020088
 8103fb0:	400200a0 	.word	0x400200a0
 8103fb4:	400200b8 	.word	0x400200b8
 8103fb8:	40020410 	.word	0x40020410
 8103fbc:	40020428 	.word	0x40020428
 8103fc0:	40020440 	.word	0x40020440
 8103fc4:	40020458 	.word	0x40020458
 8103fc8:	40020470 	.word	0x40020470
 8103fcc:	40020488 	.word	0x40020488
 8103fd0:	400204a0 	.word	0x400204a0
 8103fd4:	400204b8 	.word	0x400204b8
 8103fd8:	aaaaaaab 	.word	0xaaaaaaab
 8103fdc:	08179b58 	.word	0x08179b58

08103fe0 <DMA_CheckFifoParam>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8103fe0:	b480      	push	{r7}
 8103fe2:	b085      	sub	sp, #20
 8103fe4:	af00      	add	r7, sp, #0
 8103fe6:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8103fe8:	2300      	movs	r3, #0
 8103fea:	73fb      	strb	r3, [r7, #15]

  /* Memory Data size equal to Byte */
  if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8103fec:	687b      	ldr	r3, [r7, #4]
 8103fee:	699b      	ldr	r3, [r3, #24]
 8103ff0:	2b00      	cmp	r3, #0
 8103ff2:	d120      	bne.n	8104036 <DMA_CheckFifoParam+0x56>
  {
    switch (hdma->Init.FIFOThreshold)
 8103ff4:	687b      	ldr	r3, [r7, #4]
 8103ff6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8103ff8:	2b03      	cmp	r3, #3
 8103ffa:	d858      	bhi.n	81040ae <DMA_CheckFifoParam+0xce>
 8103ffc:	a201      	add	r2, pc, #4	; (adr r2, 8104004 <DMA_CheckFifoParam+0x24>)
 8103ffe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8104002:	bf00      	nop
 8104004:	08104015 	.word	0x08104015
 8104008:	08104027 	.word	0x08104027
 810400c:	08104015 	.word	0x08104015
 8104010:	081040af 	.word	0x081040af
    {
      case DMA_FIFO_THRESHOLD_1QUARTERFULL:
      case DMA_FIFO_THRESHOLD_3QUARTERSFULL:

        if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8104014:	687b      	ldr	r3, [r7, #4]
 8104016:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8104018:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 810401c:	2b00      	cmp	r3, #0
 810401e:	d048      	beq.n	81040b2 <DMA_CheckFifoParam+0xd2>
        {
          status = HAL_ERROR;
 8104020:	2301      	movs	r3, #1
 8104022:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8104024:	e045      	b.n	81040b2 <DMA_CheckFifoParam+0xd2>

      case DMA_FIFO_THRESHOLD_HALFFULL:
        if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8104026:	687b      	ldr	r3, [r7, #4]
 8104028:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 810402a:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 810402e:	d142      	bne.n	81040b6 <DMA_CheckFifoParam+0xd6>
        {
          status = HAL_ERROR;
 8104030:	2301      	movs	r3, #1
 8104032:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8104034:	e03f      	b.n	81040b6 <DMA_CheckFifoParam+0xd6>
        break;
    }
  }

  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8104036:	687b      	ldr	r3, [r7, #4]
 8104038:	699b      	ldr	r3, [r3, #24]
 810403a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 810403e:	d123      	bne.n	8104088 <DMA_CheckFifoParam+0xa8>
  {
    switch (hdma->Init.FIFOThreshold)
 8104040:	687b      	ldr	r3, [r7, #4]
 8104042:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8104044:	2b03      	cmp	r3, #3
 8104046:	d838      	bhi.n	81040ba <DMA_CheckFifoParam+0xda>
 8104048:	a201      	add	r2, pc, #4	; (adr r2, 8104050 <DMA_CheckFifoParam+0x70>)
 810404a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 810404e:	bf00      	nop
 8104050:	08104061 	.word	0x08104061
 8104054:	08104067 	.word	0x08104067
 8104058:	08104061 	.word	0x08104061
 810405c:	08104079 	.word	0x08104079
    {
      case DMA_FIFO_THRESHOLD_1QUARTERFULL:
      case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
        status = HAL_ERROR;
 8104060:	2301      	movs	r3, #1
 8104062:	73fb      	strb	r3, [r7, #15]
        break;
 8104064:	e030      	b.n	81040c8 <DMA_CheckFifoParam+0xe8>

      case DMA_FIFO_THRESHOLD_HALFFULL:
        if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8104066:	687b      	ldr	r3, [r7, #4]
 8104068:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 810406a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 810406e:	2b00      	cmp	r3, #0
 8104070:	d025      	beq.n	81040be <DMA_CheckFifoParam+0xde>
        {
          status = HAL_ERROR;
 8104072:	2301      	movs	r3, #1
 8104074:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8104076:	e022      	b.n	81040be <DMA_CheckFifoParam+0xde>

      case DMA_FIFO_THRESHOLD_FULL:
        if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8104078:	687b      	ldr	r3, [r7, #4]
 810407a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 810407c:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8104080:	d11f      	bne.n	81040c2 <DMA_CheckFifoParam+0xe2>
        {
          status = HAL_ERROR;
 8104082:	2301      	movs	r3, #1
 8104084:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8104086:	e01c      	b.n	81040c2 <DMA_CheckFifoParam+0xe2>
  }

  /* Memory Data size equal to Word */
  else
  {
    switch (hdma->Init.FIFOThreshold)
 8104088:	687b      	ldr	r3, [r7, #4]
 810408a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 810408c:	2b02      	cmp	r3, #2
 810408e:	d902      	bls.n	8104096 <DMA_CheckFifoParam+0xb6>
 8104090:	2b03      	cmp	r3, #3
 8104092:	d003      	beq.n	810409c <DMA_CheckFifoParam+0xbc>
          status = HAL_ERROR;
        }
    break;

      default:
        break;
 8104094:	e018      	b.n	81040c8 <DMA_CheckFifoParam+0xe8>
        status = HAL_ERROR;
 8104096:	2301      	movs	r3, #1
 8104098:	73fb      	strb	r3, [r7, #15]
        break;
 810409a:	e015      	b.n	81040c8 <DMA_CheckFifoParam+0xe8>
        if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 810409c:	687b      	ldr	r3, [r7, #4]
 810409e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 81040a0:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 81040a4:	2b00      	cmp	r3, #0
 81040a6:	d00e      	beq.n	81040c6 <DMA_CheckFifoParam+0xe6>
          status = HAL_ERROR;
 81040a8:	2301      	movs	r3, #1
 81040aa:	73fb      	strb	r3, [r7, #15]
    break;
 81040ac:	e00b      	b.n	81040c6 <DMA_CheckFifoParam+0xe6>
        break;
 81040ae:	bf00      	nop
 81040b0:	e00a      	b.n	81040c8 <DMA_CheckFifoParam+0xe8>
        break;
 81040b2:	bf00      	nop
 81040b4:	e008      	b.n	81040c8 <DMA_CheckFifoParam+0xe8>
        break;
 81040b6:	bf00      	nop
 81040b8:	e006      	b.n	81040c8 <DMA_CheckFifoParam+0xe8>
        break;
 81040ba:	bf00      	nop
 81040bc:	e004      	b.n	81040c8 <DMA_CheckFifoParam+0xe8>
        break;
 81040be:	bf00      	nop
 81040c0:	e002      	b.n	81040c8 <DMA_CheckFifoParam+0xe8>
        break;
 81040c2:	bf00      	nop
 81040c4:	e000      	b.n	81040c8 <DMA_CheckFifoParam+0xe8>
    break;
 81040c6:	bf00      	nop
    }
  }

  return status;
 81040c8:	7bfb      	ldrb	r3, [r7, #15]
}
 81040ca:	4618      	mov	r0, r3
 81040cc:	3714      	adds	r7, #20
 81040ce:	46bd      	mov	sp, r7
 81040d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 81040d4:	4770      	bx	lr
 81040d6:	bf00      	nop

081040d8 <DMA_CalcDMAMUXChannelBaseAndMask>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static void DMA_CalcDMAMUXChannelBaseAndMask(DMA_HandleTypeDef *hdma)
{
 81040d8:	b480      	push	{r7}
 81040da:	b085      	sub	sp, #20
 81040dc:	af00      	add	r7, sp, #0
 81040de:	6078      	str	r0, [r7, #4]
  uint32_t stream_number;
  uint32_t stream_baseaddress = (uint32_t)((uint32_t*)hdma->Instance);
 81040e0:	687b      	ldr	r3, [r7, #4]
 81040e2:	681b      	ldr	r3, [r3, #0]
 81040e4:	60bb      	str	r3, [r7, #8]

  if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 81040e6:	687b      	ldr	r3, [r7, #4]
 81040e8:	681b      	ldr	r3, [r3, #0]
 81040ea:	4a3a      	ldr	r2, [pc, #232]	; (81041d4 <DMA_CalcDMAMUXChannelBaseAndMask+0xfc>)
 81040ec:	4293      	cmp	r3, r2
 81040ee:	d022      	beq.n	8104136 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 81040f0:	687b      	ldr	r3, [r7, #4]
 81040f2:	681b      	ldr	r3, [r3, #0]
 81040f4:	4a38      	ldr	r2, [pc, #224]	; (81041d8 <DMA_CalcDMAMUXChannelBaseAndMask+0x100>)
 81040f6:	4293      	cmp	r3, r2
 81040f8:	d01d      	beq.n	8104136 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 81040fa:	687b      	ldr	r3, [r7, #4]
 81040fc:	681b      	ldr	r3, [r3, #0]
 81040fe:	4a37      	ldr	r2, [pc, #220]	; (81041dc <DMA_CalcDMAMUXChannelBaseAndMask+0x104>)
 8104100:	4293      	cmp	r3, r2
 8104102:	d018      	beq.n	8104136 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8104104:	687b      	ldr	r3, [r7, #4]
 8104106:	681b      	ldr	r3, [r3, #0]
 8104108:	4a35      	ldr	r2, [pc, #212]	; (81041e0 <DMA_CalcDMAMUXChannelBaseAndMask+0x108>)
 810410a:	4293      	cmp	r3, r2
 810410c:	d013      	beq.n	8104136 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 810410e:	687b      	ldr	r3, [r7, #4]
 8104110:	681b      	ldr	r3, [r3, #0]
 8104112:	4a34      	ldr	r2, [pc, #208]	; (81041e4 <DMA_CalcDMAMUXChannelBaseAndMask+0x10c>)
 8104114:	4293      	cmp	r3, r2
 8104116:	d00e      	beq.n	8104136 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8104118:	687b      	ldr	r3, [r7, #4]
 810411a:	681b      	ldr	r3, [r3, #0]
 810411c:	4a32      	ldr	r2, [pc, #200]	; (81041e8 <DMA_CalcDMAMUXChannelBaseAndMask+0x110>)
 810411e:	4293      	cmp	r3, r2
 8104120:	d009      	beq.n	8104136 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8104122:	687b      	ldr	r3, [r7, #4]
 8104124:	681b      	ldr	r3, [r3, #0]
 8104126:	4a31      	ldr	r2, [pc, #196]	; (81041ec <DMA_CalcDMAMUXChannelBaseAndMask+0x114>)
 8104128:	4293      	cmp	r3, r2
 810412a:	d004      	beq.n	8104136 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 810412c:	687b      	ldr	r3, [r7, #4]
 810412e:	681b      	ldr	r3, [r3, #0]
 8104130:	4a2f      	ldr	r2, [pc, #188]	; (81041f0 <DMA_CalcDMAMUXChannelBaseAndMask+0x118>)
 8104132:	4293      	cmp	r3, r2
 8104134:	d101      	bne.n	810413a <DMA_CalcDMAMUXChannelBaseAndMask+0x62>
 8104136:	2301      	movs	r3, #1
 8104138:	e000      	b.n	810413c <DMA_CalcDMAMUXChannelBaseAndMask+0x64>
 810413a:	2300      	movs	r3, #0
 810413c:	2b00      	cmp	r3, #0
 810413e:	d01c      	beq.n	810417a <DMA_CalcDMAMUXChannelBaseAndMask+0xa2>
  {
    /* BDMA Channels are connected to DMAMUX2 channels */
    stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 8U) / 20U;
 8104140:	687b      	ldr	r3, [r7, #4]
 8104142:	681b      	ldr	r3, [r3, #0]
 8104144:	b2db      	uxtb	r3, r3
 8104146:	3b08      	subs	r3, #8
 8104148:	4a2a      	ldr	r2, [pc, #168]	; (81041f4 <DMA_CalcDMAMUXChannelBaseAndMask+0x11c>)
 810414a:	fba2 2303 	umull	r2, r3, r2, r3
 810414e:	091b      	lsrs	r3, r3, #4
 8104150:	60fb      	str	r3, [r7, #12]
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX2_Channel0) + (stream_number * 4U)));
 8104152:	68fb      	ldr	r3, [r7, #12]
 8104154:	f103 53b0 	add.w	r3, r3, #369098752	; 0x16000000
 8104158:	f503 4316 	add.w	r3, r3, #38400	; 0x9600
 810415c:	009b      	lsls	r3, r3, #2
 810415e:	461a      	mov	r2, r3
 8104160:	687b      	ldr	r3, [r7, #4]
 8104162:	661a      	str	r2, [r3, #96]	; 0x60
    hdma->DMAmuxChannelStatus = DMAMUX2_ChannelStatus;
 8104164:	687b      	ldr	r3, [r7, #4]
 8104166:	4a24      	ldr	r2, [pc, #144]	; (81041f8 <DMA_CalcDMAMUXChannelBaseAndMask+0x120>)
 8104168:	665a      	str	r2, [r3, #100]	; 0x64
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 810416a:	68fb      	ldr	r3, [r7, #12]
 810416c:	f003 031f 	and.w	r3, r3, #31
 8104170:	2201      	movs	r2, #1
 8104172:	409a      	lsls	r2, r3
 8104174:	687b      	ldr	r3, [r7, #4]
 8104176:	669a      	str	r2, [r3, #104]	; 0x68
    }
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_Channel0) + (stream_number * 4U)));
    hdma->DMAmuxChannelStatus = DMAMUX1_ChannelStatus;
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
  }
}
 8104178:	e026      	b.n	81041c8 <DMA_CalcDMAMUXChannelBaseAndMask+0xf0>
    stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 16U) / 24U;
 810417a:	687b      	ldr	r3, [r7, #4]
 810417c:	681b      	ldr	r3, [r3, #0]
 810417e:	b2db      	uxtb	r3, r3
 8104180:	3b10      	subs	r3, #16
 8104182:	4a1e      	ldr	r2, [pc, #120]	; (81041fc <DMA_CalcDMAMUXChannelBaseAndMask+0x124>)
 8104184:	fba2 2303 	umull	r2, r3, r2, r3
 8104188:	091b      	lsrs	r3, r3, #4
 810418a:	60fb      	str	r3, [r7, #12]
    if((stream_baseaddress <= ((uint32_t)DMA2_Stream7) ) && \
 810418c:	68bb      	ldr	r3, [r7, #8]
 810418e:	4a1c      	ldr	r2, [pc, #112]	; (8104200 <DMA_CalcDMAMUXChannelBaseAndMask+0x128>)
 8104190:	4293      	cmp	r3, r2
 8104192:	d806      	bhi.n	81041a2 <DMA_CalcDMAMUXChannelBaseAndMask+0xca>
 8104194:	68bb      	ldr	r3, [r7, #8]
 8104196:	4a1b      	ldr	r2, [pc, #108]	; (8104204 <DMA_CalcDMAMUXChannelBaseAndMask+0x12c>)
 8104198:	4293      	cmp	r3, r2
 810419a:	d902      	bls.n	81041a2 <DMA_CalcDMAMUXChannelBaseAndMask+0xca>
      stream_number += 8U;
 810419c:	68fb      	ldr	r3, [r7, #12]
 810419e:	3308      	adds	r3, #8
 81041a0:	60fb      	str	r3, [r7, #12]
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_Channel0) + (stream_number * 4U)));
 81041a2:	68fb      	ldr	r3, [r7, #12]
 81041a4:	f103 5380 	add.w	r3, r3, #268435456	; 0x10000000
 81041a8:	f503 4302 	add.w	r3, r3, #33280	; 0x8200
 81041ac:	009b      	lsls	r3, r3, #2
 81041ae:	461a      	mov	r2, r3
 81041b0:	687b      	ldr	r3, [r7, #4]
 81041b2:	661a      	str	r2, [r3, #96]	; 0x60
    hdma->DMAmuxChannelStatus = DMAMUX1_ChannelStatus;
 81041b4:	687b      	ldr	r3, [r7, #4]
 81041b6:	4a14      	ldr	r2, [pc, #80]	; (8104208 <DMA_CalcDMAMUXChannelBaseAndMask+0x130>)
 81041b8:	665a      	str	r2, [r3, #100]	; 0x64
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 81041ba:	68fb      	ldr	r3, [r7, #12]
 81041bc:	f003 031f 	and.w	r3, r3, #31
 81041c0:	2201      	movs	r2, #1
 81041c2:	409a      	lsls	r2, r3
 81041c4:	687b      	ldr	r3, [r7, #4]
 81041c6:	669a      	str	r2, [r3, #104]	; 0x68
}
 81041c8:	bf00      	nop
 81041ca:	3714      	adds	r7, #20
 81041cc:	46bd      	mov	sp, r7
 81041ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 81041d2:	4770      	bx	lr
 81041d4:	58025408 	.word	0x58025408
 81041d8:	5802541c 	.word	0x5802541c
 81041dc:	58025430 	.word	0x58025430
 81041e0:	58025444 	.word	0x58025444
 81041e4:	58025458 	.word	0x58025458
 81041e8:	5802546c 	.word	0x5802546c
 81041ec:	58025480 	.word	0x58025480
 81041f0:	58025494 	.word	0x58025494
 81041f4:	cccccccd 	.word	0xcccccccd
 81041f8:	58025880 	.word	0x58025880
 81041fc:	aaaaaaab 	.word	0xaaaaaaab
 8104200:	400204b8 	.word	0x400204b8
 8104204:	4002040f 	.word	0x4002040f
 8104208:	40020880 	.word	0x40020880

0810420c <DMA_CalcDMAMUXRequestGenBaseAndMask>:
  * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static void DMA_CalcDMAMUXRequestGenBaseAndMask(DMA_HandleTypeDef *hdma)
{
 810420c:	b480      	push	{r7}
 810420e:	b085      	sub	sp, #20
 8104210:	af00      	add	r7, sp, #0
 8104212:	6078      	str	r0, [r7, #4]
  uint32_t request =  hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID;
 8104214:	687b      	ldr	r3, [r7, #4]
 8104216:	685b      	ldr	r3, [r3, #4]
 8104218:	b2db      	uxtb	r3, r3
 810421a:	60fb      	str	r3, [r7, #12]

  if((request >= DMA_REQUEST_GENERATOR0) && (request <= DMA_REQUEST_GENERATOR7))
 810421c:	68fb      	ldr	r3, [r7, #12]
 810421e:	2b00      	cmp	r3, #0
 8104220:	d04a      	beq.n	81042b8 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
 8104222:	68fb      	ldr	r3, [r7, #12]
 8104224:	2b08      	cmp	r3, #8
 8104226:	d847      	bhi.n	81042b8 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
  {
    if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 8104228:	687b      	ldr	r3, [r7, #4]
 810422a:	681b      	ldr	r3, [r3, #0]
 810422c:	4a25      	ldr	r2, [pc, #148]	; (81042c4 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xb8>)
 810422e:	4293      	cmp	r3, r2
 8104230:	d022      	beq.n	8104278 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8104232:	687b      	ldr	r3, [r7, #4]
 8104234:	681b      	ldr	r3, [r3, #0]
 8104236:	4a24      	ldr	r2, [pc, #144]	; (81042c8 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xbc>)
 8104238:	4293      	cmp	r3, r2
 810423a:	d01d      	beq.n	8104278 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 810423c:	687b      	ldr	r3, [r7, #4]
 810423e:	681b      	ldr	r3, [r3, #0]
 8104240:	4a22      	ldr	r2, [pc, #136]	; (81042cc <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc0>)
 8104242:	4293      	cmp	r3, r2
 8104244:	d018      	beq.n	8104278 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8104246:	687b      	ldr	r3, [r7, #4]
 8104248:	681b      	ldr	r3, [r3, #0]
 810424a:	4a21      	ldr	r2, [pc, #132]	; (81042d0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc4>)
 810424c:	4293      	cmp	r3, r2
 810424e:	d013      	beq.n	8104278 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8104250:	687b      	ldr	r3, [r7, #4]
 8104252:	681b      	ldr	r3, [r3, #0]
 8104254:	4a1f      	ldr	r2, [pc, #124]	; (81042d4 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc8>)
 8104256:	4293      	cmp	r3, r2
 8104258:	d00e      	beq.n	8104278 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 810425a:	687b      	ldr	r3, [r7, #4]
 810425c:	681b      	ldr	r3, [r3, #0]
 810425e:	4a1e      	ldr	r2, [pc, #120]	; (81042d8 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xcc>)
 8104260:	4293      	cmp	r3, r2
 8104262:	d009      	beq.n	8104278 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 8104264:	687b      	ldr	r3, [r7, #4]
 8104266:	681b      	ldr	r3, [r3, #0]
 8104268:	4a1c      	ldr	r2, [pc, #112]	; (81042dc <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd0>)
 810426a:	4293      	cmp	r3, r2
 810426c:	d004      	beq.n	8104278 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 810426e:	687b      	ldr	r3, [r7, #4]
 8104270:	681b      	ldr	r3, [r3, #0]
 8104272:	4a1b      	ldr	r2, [pc, #108]	; (81042e0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd4>)
 8104274:	4293      	cmp	r3, r2
 8104276:	d101      	bne.n	810427c <DMA_CalcDMAMUXRequestGenBaseAndMask+0x70>
 8104278:	2301      	movs	r3, #1
 810427a:	e000      	b.n	810427e <DMA_CalcDMAMUXRequestGenBaseAndMask+0x72>
 810427c:	2300      	movs	r3, #0
 810427e:	2b00      	cmp	r3, #0
 8104280:	d00a      	beq.n	8104298 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x8c>
    {
      /* BDMA Channels are connected to DMAMUX2 request generator blocks */
      hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX2_RequestGenerator0) + ((request - 1U) * 4U)));
 8104282:	68fa      	ldr	r2, [r7, #12]
 8104284:	4b17      	ldr	r3, [pc, #92]	; (81042e4 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd8>)
 8104286:	4413      	add	r3, r2
 8104288:	009b      	lsls	r3, r3, #2
 810428a:	461a      	mov	r2, r3
 810428c:	687b      	ldr	r3, [r7, #4]
 810428e:	66da      	str	r2, [r3, #108]	; 0x6c

      hdma->DMAmuxRequestGenStatus = DMAMUX2_RequestGenStatus;
 8104290:	687b      	ldr	r3, [r7, #4]
 8104292:	4a15      	ldr	r2, [pc, #84]	; (81042e8 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xdc>)
 8104294:	671a      	str	r2, [r3, #112]	; 0x70
 8104296:	e009      	b.n	81042ac <DMA_CalcDMAMUXRequestGenBaseAndMask+0xa0>
    }
    else
    {
      /* DMA1 and DMA2 Streams use DMAMUX1 request generator blocks */
      hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_RequestGenerator0) + ((request - 1U) * 4U)));
 8104298:	68fa      	ldr	r2, [r7, #12]
 810429a:	4b14      	ldr	r3, [pc, #80]	; (81042ec <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe0>)
 810429c:	4413      	add	r3, r2
 810429e:	009b      	lsls	r3, r3, #2
 81042a0:	461a      	mov	r2, r3
 81042a2:	687b      	ldr	r3, [r7, #4]
 81042a4:	66da      	str	r2, [r3, #108]	; 0x6c

      hdma->DMAmuxRequestGenStatus = DMAMUX1_RequestGenStatus;
 81042a6:	687b      	ldr	r3, [r7, #4]
 81042a8:	4a11      	ldr	r2, [pc, #68]	; (81042f0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe4>)
 81042aa:	671a      	str	r2, [r3, #112]	; 0x70
    }

    hdma->DMAmuxRequestGenStatusMask = 1UL << (request - 1U);
 81042ac:	68fb      	ldr	r3, [r7, #12]
 81042ae:	3b01      	subs	r3, #1
 81042b0:	2201      	movs	r2, #1
 81042b2:	409a      	lsls	r2, r3
 81042b4:	687b      	ldr	r3, [r7, #4]
 81042b6:	675a      	str	r2, [r3, #116]	; 0x74
  }
}
 81042b8:	bf00      	nop
 81042ba:	3714      	adds	r7, #20
 81042bc:	46bd      	mov	sp, r7
 81042be:	f85d 7b04 	ldr.w	r7, [sp], #4
 81042c2:	4770      	bx	lr
 81042c4:	58025408 	.word	0x58025408
 81042c8:	5802541c 	.word	0x5802541c
 81042cc:	58025430 	.word	0x58025430
 81042d0:	58025444 	.word	0x58025444
 81042d4:	58025458 	.word	0x58025458
 81042d8:	5802546c 	.word	0x5802546c
 81042dc:	58025480 	.word	0x58025480
 81042e0:	58025494 	.word	0x58025494
 81042e4:	1600963f 	.word	0x1600963f
 81042e8:	58025940 	.word	0x58025940
 81042ec:	1000823f 	.word	0x1000823f
 81042f0:	40020940 	.word	0x40020940

081042f4 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 81042f4:	b480      	push	{r7}
 81042f6:	b089      	sub	sp, #36	; 0x24
 81042f8:	af00      	add	r7, sp, #0
 81042fa:	6078      	str	r0, [r7, #4]
 81042fc:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 81042fe:	2300      	movs	r3, #0
 8104300:	61fb      	str	r3, [r7, #28]
  uint32_t iocurrent;
  uint32_t temp;
  EXTI_Core_TypeDef *EXTI_CurrentCPU;

#if defined(DUAL_CORE) && defined(CORE_CM4)
  EXTI_CurrentCPU = EXTI_D2; /* EXTI for CM4 CPU */
 8104302:	4b89      	ldr	r3, [pc, #548]	; (8104528 <HAL_GPIO_Init+0x234>)
 8104304:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 8104306:	e194      	b.n	8104632 <HAL_GPIO_Init+0x33e>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
 8104308:	683b      	ldr	r3, [r7, #0]
 810430a:	681a      	ldr	r2, [r3, #0]
 810430c:	2101      	movs	r1, #1
 810430e:	69fb      	ldr	r3, [r7, #28]
 8104310:	fa01 f303 	lsl.w	r3, r1, r3
 8104314:	4013      	ands	r3, r2
 8104316:	613b      	str	r3, [r7, #16]

    if (iocurrent != 0x00U)
 8104318:	693b      	ldr	r3, [r7, #16]
 810431a:	2b00      	cmp	r3, #0
 810431c:	f000 8186 	beq.w	810462c <HAL_GPIO_Init+0x338>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8104320:	683b      	ldr	r3, [r7, #0]
 8104322:	685b      	ldr	r3, [r3, #4]
 8104324:	f003 0303 	and.w	r3, r3, #3
 8104328:	2b01      	cmp	r3, #1
 810432a:	d005      	beq.n	8104338 <HAL_GPIO_Init+0x44>
 810432c:	683b      	ldr	r3, [r7, #0]
 810432e:	685b      	ldr	r3, [r3, #4]
 8104330:	f003 0303 	and.w	r3, r3, #3
 8104334:	2b02      	cmp	r3, #2
 8104336:	d130      	bne.n	810439a <HAL_GPIO_Init+0xa6>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));

        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8104338:	687b      	ldr	r3, [r7, #4]
 810433a:	689b      	ldr	r3, [r3, #8]
 810433c:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 810433e:	69fb      	ldr	r3, [r7, #28]
 8104340:	005b      	lsls	r3, r3, #1
 8104342:	2203      	movs	r2, #3
 8104344:	fa02 f303 	lsl.w	r3, r2, r3
 8104348:	43db      	mvns	r3, r3
 810434a:	69ba      	ldr	r2, [r7, #24]
 810434c:	4013      	ands	r3, r2
 810434e:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8104350:	683b      	ldr	r3, [r7, #0]
 8104352:	68da      	ldr	r2, [r3, #12]
 8104354:	69fb      	ldr	r3, [r7, #28]
 8104356:	005b      	lsls	r3, r3, #1
 8104358:	fa02 f303 	lsl.w	r3, r2, r3
 810435c:	69ba      	ldr	r2, [r7, #24]
 810435e:	4313      	orrs	r3, r2
 8104360:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8104362:	687b      	ldr	r3, [r7, #4]
 8104364:	69ba      	ldr	r2, [r7, #24]
 8104366:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8104368:	687b      	ldr	r3, [r7, #4]
 810436a:	685b      	ldr	r3, [r3, #4]
 810436c:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 810436e:	2201      	movs	r2, #1
 8104370:	69fb      	ldr	r3, [r7, #28]
 8104372:	fa02 f303 	lsl.w	r3, r2, r3
 8104376:	43db      	mvns	r3, r3
 8104378:	69ba      	ldr	r2, [r7, #24]
 810437a:	4013      	ands	r3, r2
 810437c:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 810437e:	683b      	ldr	r3, [r7, #0]
 8104380:	685b      	ldr	r3, [r3, #4]
 8104382:	091b      	lsrs	r3, r3, #4
 8104384:	f003 0201 	and.w	r2, r3, #1
 8104388:	69fb      	ldr	r3, [r7, #28]
 810438a:	fa02 f303 	lsl.w	r3, r2, r3
 810438e:	69ba      	ldr	r2, [r7, #24]
 8104390:	4313      	orrs	r3, r2
 8104392:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8104394:	687b      	ldr	r3, [r7, #4]
 8104396:	69ba      	ldr	r2, [r7, #24]
 8104398:	605a      	str	r2, [r3, #4]
      }

      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 810439a:	683b      	ldr	r3, [r7, #0]
 810439c:	685b      	ldr	r3, [r3, #4]
 810439e:	f003 0303 	and.w	r3, r3, #3
 81043a2:	2b03      	cmp	r3, #3
 81043a4:	d017      	beq.n	81043d6 <HAL_GPIO_Init+0xe2>
      {
       /* Check the Pull parameter */
       assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 81043a6:	687b      	ldr	r3, [r7, #4]
 81043a8:	68db      	ldr	r3, [r3, #12]
 81043aa:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 81043ac:	69fb      	ldr	r3, [r7, #28]
 81043ae:	005b      	lsls	r3, r3, #1
 81043b0:	2203      	movs	r2, #3
 81043b2:	fa02 f303 	lsl.w	r3, r2, r3
 81043b6:	43db      	mvns	r3, r3
 81043b8:	69ba      	ldr	r2, [r7, #24]
 81043ba:	4013      	ands	r3, r2
 81043bc:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 81043be:	683b      	ldr	r3, [r7, #0]
 81043c0:	689a      	ldr	r2, [r3, #8]
 81043c2:	69fb      	ldr	r3, [r7, #28]
 81043c4:	005b      	lsls	r3, r3, #1
 81043c6:	fa02 f303 	lsl.w	r3, r2, r3
 81043ca:	69ba      	ldr	r2, [r7, #24]
 81043cc:	4313      	orrs	r3, r2
 81043ce:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 81043d0:	687b      	ldr	r3, [r7, #4]
 81043d2:	69ba      	ldr	r2, [r7, #24]
 81043d4:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 81043d6:	683b      	ldr	r3, [r7, #0]
 81043d8:	685b      	ldr	r3, [r3, #4]
 81043da:	f003 0303 	and.w	r3, r3, #3
 81043de:	2b02      	cmp	r3, #2
 81043e0:	d123      	bne.n	810442a <HAL_GPIO_Init+0x136>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 81043e2:	69fb      	ldr	r3, [r7, #28]
 81043e4:	08da      	lsrs	r2, r3, #3
 81043e6:	687b      	ldr	r3, [r7, #4]
 81043e8:	3208      	adds	r2, #8
 81043ea:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 81043ee:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 81043f0:	69fb      	ldr	r3, [r7, #28]
 81043f2:	f003 0307 	and.w	r3, r3, #7
 81043f6:	009b      	lsls	r3, r3, #2
 81043f8:	220f      	movs	r2, #15
 81043fa:	fa02 f303 	lsl.w	r3, r2, r3
 81043fe:	43db      	mvns	r3, r3
 8104400:	69ba      	ldr	r2, [r7, #24]
 8104402:	4013      	ands	r3, r2
 8104404:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 8104406:	683b      	ldr	r3, [r7, #0]
 8104408:	691a      	ldr	r2, [r3, #16]
 810440a:	69fb      	ldr	r3, [r7, #28]
 810440c:	f003 0307 	and.w	r3, r3, #7
 8104410:	009b      	lsls	r3, r3, #2
 8104412:	fa02 f303 	lsl.w	r3, r2, r3
 8104416:	69ba      	ldr	r2, [r7, #24]
 8104418:	4313      	orrs	r3, r2
 810441a:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 810441c:	69fb      	ldr	r3, [r7, #28]
 810441e:	08da      	lsrs	r2, r3, #3
 8104420:	687b      	ldr	r3, [r7, #4]
 8104422:	3208      	adds	r2, #8
 8104424:	69b9      	ldr	r1, [r7, #24]
 8104426:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 810442a:	687b      	ldr	r3, [r7, #4]
 810442c:	681b      	ldr	r3, [r3, #0]
 810442e:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8104430:	69fb      	ldr	r3, [r7, #28]
 8104432:	005b      	lsls	r3, r3, #1
 8104434:	2203      	movs	r2, #3
 8104436:	fa02 f303 	lsl.w	r3, r2, r3
 810443a:	43db      	mvns	r3, r3
 810443c:	69ba      	ldr	r2, [r7, #24]
 810443e:	4013      	ands	r3, r2
 8104440:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8104442:	683b      	ldr	r3, [r7, #0]
 8104444:	685b      	ldr	r3, [r3, #4]
 8104446:	f003 0203 	and.w	r2, r3, #3
 810444a:	69fb      	ldr	r3, [r7, #28]
 810444c:	005b      	lsls	r3, r3, #1
 810444e:	fa02 f303 	lsl.w	r3, r2, r3
 8104452:	69ba      	ldr	r2, [r7, #24]
 8104454:	4313      	orrs	r3, r2
 8104456:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8104458:	687b      	ldr	r3, [r7, #4]
 810445a:	69ba      	ldr	r2, [r7, #24]
 810445c:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 810445e:	683b      	ldr	r3, [r7, #0]
 8104460:	685b      	ldr	r3, [r3, #4]
 8104462:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8104466:	2b00      	cmp	r3, #0
 8104468:	f000 80e0 	beq.w	810462c <HAL_GPIO_Init+0x338>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 810446c:	4b2f      	ldr	r3, [pc, #188]	; (810452c <HAL_GPIO_Init+0x238>)
 810446e:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8104472:	4a2e      	ldr	r2, [pc, #184]	; (810452c <HAL_GPIO_Init+0x238>)
 8104474:	f043 0302 	orr.w	r3, r3, #2
 8104478:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 810447c:	4b2b      	ldr	r3, [pc, #172]	; (810452c <HAL_GPIO_Init+0x238>)
 810447e:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8104482:	f003 0302 	and.w	r3, r3, #2
 8104486:	60fb      	str	r3, [r7, #12]
 8104488:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 810448a:	4a29      	ldr	r2, [pc, #164]	; (8104530 <HAL_GPIO_Init+0x23c>)
 810448c:	69fb      	ldr	r3, [r7, #28]
 810448e:	089b      	lsrs	r3, r3, #2
 8104490:	3302      	adds	r3, #2
 8104492:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8104496:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 8104498:	69fb      	ldr	r3, [r7, #28]
 810449a:	f003 0303 	and.w	r3, r3, #3
 810449e:	009b      	lsls	r3, r3, #2
 81044a0:	220f      	movs	r2, #15
 81044a2:	fa02 f303 	lsl.w	r3, r2, r3
 81044a6:	43db      	mvns	r3, r3
 81044a8:	69ba      	ldr	r2, [r7, #24]
 81044aa:	4013      	ands	r3, r2
 81044ac:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 81044ae:	687b      	ldr	r3, [r7, #4]
 81044b0:	4a20      	ldr	r2, [pc, #128]	; (8104534 <HAL_GPIO_Init+0x240>)
 81044b2:	4293      	cmp	r3, r2
 81044b4:	d052      	beq.n	810455c <HAL_GPIO_Init+0x268>
 81044b6:	687b      	ldr	r3, [r7, #4]
 81044b8:	4a1f      	ldr	r2, [pc, #124]	; (8104538 <HAL_GPIO_Init+0x244>)
 81044ba:	4293      	cmp	r3, r2
 81044bc:	d031      	beq.n	8104522 <HAL_GPIO_Init+0x22e>
 81044be:	687b      	ldr	r3, [r7, #4]
 81044c0:	4a1e      	ldr	r2, [pc, #120]	; (810453c <HAL_GPIO_Init+0x248>)
 81044c2:	4293      	cmp	r3, r2
 81044c4:	d02b      	beq.n	810451e <HAL_GPIO_Init+0x22a>
 81044c6:	687b      	ldr	r3, [r7, #4]
 81044c8:	4a1d      	ldr	r2, [pc, #116]	; (8104540 <HAL_GPIO_Init+0x24c>)
 81044ca:	4293      	cmp	r3, r2
 81044cc:	d025      	beq.n	810451a <HAL_GPIO_Init+0x226>
 81044ce:	687b      	ldr	r3, [r7, #4]
 81044d0:	4a1c      	ldr	r2, [pc, #112]	; (8104544 <HAL_GPIO_Init+0x250>)
 81044d2:	4293      	cmp	r3, r2
 81044d4:	d01f      	beq.n	8104516 <HAL_GPIO_Init+0x222>
 81044d6:	687b      	ldr	r3, [r7, #4]
 81044d8:	4a1b      	ldr	r2, [pc, #108]	; (8104548 <HAL_GPIO_Init+0x254>)
 81044da:	4293      	cmp	r3, r2
 81044dc:	d019      	beq.n	8104512 <HAL_GPIO_Init+0x21e>
 81044de:	687b      	ldr	r3, [r7, #4]
 81044e0:	4a1a      	ldr	r2, [pc, #104]	; (810454c <HAL_GPIO_Init+0x258>)
 81044e2:	4293      	cmp	r3, r2
 81044e4:	d013      	beq.n	810450e <HAL_GPIO_Init+0x21a>
 81044e6:	687b      	ldr	r3, [r7, #4]
 81044e8:	4a19      	ldr	r2, [pc, #100]	; (8104550 <HAL_GPIO_Init+0x25c>)
 81044ea:	4293      	cmp	r3, r2
 81044ec:	d00d      	beq.n	810450a <HAL_GPIO_Init+0x216>
 81044ee:	687b      	ldr	r3, [r7, #4]
 81044f0:	4a18      	ldr	r2, [pc, #96]	; (8104554 <HAL_GPIO_Init+0x260>)
 81044f2:	4293      	cmp	r3, r2
 81044f4:	d007      	beq.n	8104506 <HAL_GPIO_Init+0x212>
 81044f6:	687b      	ldr	r3, [r7, #4]
 81044f8:	4a17      	ldr	r2, [pc, #92]	; (8104558 <HAL_GPIO_Init+0x264>)
 81044fa:	4293      	cmp	r3, r2
 81044fc:	d101      	bne.n	8104502 <HAL_GPIO_Init+0x20e>
 81044fe:	2309      	movs	r3, #9
 8104500:	e02d      	b.n	810455e <HAL_GPIO_Init+0x26a>
 8104502:	230a      	movs	r3, #10
 8104504:	e02b      	b.n	810455e <HAL_GPIO_Init+0x26a>
 8104506:	2308      	movs	r3, #8
 8104508:	e029      	b.n	810455e <HAL_GPIO_Init+0x26a>
 810450a:	2307      	movs	r3, #7
 810450c:	e027      	b.n	810455e <HAL_GPIO_Init+0x26a>
 810450e:	2306      	movs	r3, #6
 8104510:	e025      	b.n	810455e <HAL_GPIO_Init+0x26a>
 8104512:	2305      	movs	r3, #5
 8104514:	e023      	b.n	810455e <HAL_GPIO_Init+0x26a>
 8104516:	2304      	movs	r3, #4
 8104518:	e021      	b.n	810455e <HAL_GPIO_Init+0x26a>
 810451a:	2303      	movs	r3, #3
 810451c:	e01f      	b.n	810455e <HAL_GPIO_Init+0x26a>
 810451e:	2302      	movs	r3, #2
 8104520:	e01d      	b.n	810455e <HAL_GPIO_Init+0x26a>
 8104522:	2301      	movs	r3, #1
 8104524:	e01b      	b.n	810455e <HAL_GPIO_Init+0x26a>
 8104526:	bf00      	nop
 8104528:	580000c0 	.word	0x580000c0
 810452c:	58024400 	.word	0x58024400
 8104530:	58000400 	.word	0x58000400
 8104534:	58020000 	.word	0x58020000
 8104538:	58020400 	.word	0x58020400
 810453c:	58020800 	.word	0x58020800
 8104540:	58020c00 	.word	0x58020c00
 8104544:	58021000 	.word	0x58021000
 8104548:	58021400 	.word	0x58021400
 810454c:	58021800 	.word	0x58021800
 8104550:	58021c00 	.word	0x58021c00
 8104554:	58022000 	.word	0x58022000
 8104558:	58022400 	.word	0x58022400
 810455c:	2300      	movs	r3, #0
 810455e:	69fa      	ldr	r2, [r7, #28]
 8104560:	f002 0203 	and.w	r2, r2, #3
 8104564:	0092      	lsls	r2, r2, #2
 8104566:	4093      	lsls	r3, r2
 8104568:	69ba      	ldr	r2, [r7, #24]
 810456a:	4313      	orrs	r3, r2
 810456c:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 810456e:	4938      	ldr	r1, [pc, #224]	; (8104650 <HAL_GPIO_Init+0x35c>)
 8104570:	69fb      	ldr	r3, [r7, #28]
 8104572:	089b      	lsrs	r3, r3, #2
 8104574:	3302      	adds	r3, #2
 8104576:	69ba      	ldr	r2, [r7, #24]
 8104578:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 810457c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8104580:	681b      	ldr	r3, [r3, #0]
 8104582:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8104584:	693b      	ldr	r3, [r7, #16]
 8104586:	43db      	mvns	r3, r3
 8104588:	69ba      	ldr	r2, [r7, #24]
 810458a:	4013      	ands	r3, r2
 810458c:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 810458e:	683b      	ldr	r3, [r7, #0]
 8104590:	685b      	ldr	r3, [r3, #4]
 8104592:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8104596:	2b00      	cmp	r3, #0
 8104598:	d003      	beq.n	81045a2 <HAL_GPIO_Init+0x2ae>
        {
          temp |= iocurrent;
 810459a:	69ba      	ldr	r2, [r7, #24]
 810459c:	693b      	ldr	r3, [r7, #16]
 810459e:	4313      	orrs	r3, r2
 81045a0:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR1 = temp;
 81045a2:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 81045a6:	69bb      	ldr	r3, [r7, #24]
 81045a8:	6013      	str	r3, [r2, #0]

        temp = EXTI->FTSR1;
 81045aa:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 81045ae:	685b      	ldr	r3, [r3, #4]
 81045b0:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 81045b2:	693b      	ldr	r3, [r7, #16]
 81045b4:	43db      	mvns	r3, r3
 81045b6:	69ba      	ldr	r2, [r7, #24]
 81045b8:	4013      	ands	r3, r2
 81045ba:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 81045bc:	683b      	ldr	r3, [r7, #0]
 81045be:	685b      	ldr	r3, [r3, #4]
 81045c0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 81045c4:	2b00      	cmp	r3, #0
 81045c6:	d003      	beq.n	81045d0 <HAL_GPIO_Init+0x2dc>
        {
          temp |= iocurrent;
 81045c8:	69ba      	ldr	r2, [r7, #24]
 81045ca:	693b      	ldr	r3, [r7, #16]
 81045cc:	4313      	orrs	r3, r2
 81045ce:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR1 = temp;
 81045d0:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 81045d4:	69bb      	ldr	r3, [r7, #24]
 81045d6:	6053      	str	r3, [r2, #4]

        temp = EXTI_CurrentCPU->EMR1;
 81045d8:	697b      	ldr	r3, [r7, #20]
 81045da:	685b      	ldr	r3, [r3, #4]
 81045dc:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 81045de:	693b      	ldr	r3, [r7, #16]
 81045e0:	43db      	mvns	r3, r3
 81045e2:	69ba      	ldr	r2, [r7, #24]
 81045e4:	4013      	ands	r3, r2
 81045e6:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 81045e8:	683b      	ldr	r3, [r7, #0]
 81045ea:	685b      	ldr	r3, [r3, #4]
 81045ec:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 81045f0:	2b00      	cmp	r3, #0
 81045f2:	d003      	beq.n	81045fc <HAL_GPIO_Init+0x308>
        {
          temp |= iocurrent;
 81045f4:	69ba      	ldr	r2, [r7, #24]
 81045f6:	693b      	ldr	r3, [r7, #16]
 81045f8:	4313      	orrs	r3, r2
 81045fa:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->EMR1 = temp;
 81045fc:	697b      	ldr	r3, [r7, #20]
 81045fe:	69ba      	ldr	r2, [r7, #24]
 8104600:	605a      	str	r2, [r3, #4]

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
 8104602:	697b      	ldr	r3, [r7, #20]
 8104604:	681b      	ldr	r3, [r3, #0]
 8104606:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8104608:	693b      	ldr	r3, [r7, #16]
 810460a:	43db      	mvns	r3, r3
 810460c:	69ba      	ldr	r2, [r7, #24]
 810460e:	4013      	ands	r3, r2
 8104610:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8104612:	683b      	ldr	r3, [r7, #0]
 8104614:	685b      	ldr	r3, [r3, #4]
 8104616:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 810461a:	2b00      	cmp	r3, #0
 810461c:	d003      	beq.n	8104626 <HAL_GPIO_Init+0x332>
        {
          temp |= iocurrent;
 810461e:	69ba      	ldr	r2, [r7, #24]
 8104620:	693b      	ldr	r3, [r7, #16]
 8104622:	4313      	orrs	r3, r2
 8104624:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->IMR1 = temp;
 8104626:	697b      	ldr	r3, [r7, #20]
 8104628:	69ba      	ldr	r2, [r7, #24]
 810462a:	601a      	str	r2, [r3, #0]
      }
    }

    position++;
 810462c:	69fb      	ldr	r3, [r7, #28]
 810462e:	3301      	adds	r3, #1
 8104630:	61fb      	str	r3, [r7, #28]
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 8104632:	683b      	ldr	r3, [r7, #0]
 8104634:	681a      	ldr	r2, [r3, #0]
 8104636:	69fb      	ldr	r3, [r7, #28]
 8104638:	fa22 f303 	lsr.w	r3, r2, r3
 810463c:	2b00      	cmp	r3, #0
 810463e:	f47f ae63 	bne.w	8104308 <HAL_GPIO_Init+0x14>
  }
}
 8104642:	bf00      	nop
 8104644:	bf00      	nop
 8104646:	3724      	adds	r7, #36	; 0x24
 8104648:	46bd      	mov	sp, r7
 810464a:	f85d 7b04 	ldr.w	r7, [sp], #4
 810464e:	4770      	bx	lr
 8104650:	58000400 	.word	0x58000400

08104654 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8104654:	b480      	push	{r7}
 8104656:	b083      	sub	sp, #12
 8104658:	af00      	add	r7, sp, #0
 810465a:	6078      	str	r0, [r7, #4]
 810465c:	460b      	mov	r3, r1
 810465e:	807b      	strh	r3, [r7, #2]
 8104660:	4613      	mov	r3, r2
 8104662:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8104664:	787b      	ldrb	r3, [r7, #1]
 8104666:	2b00      	cmp	r3, #0
 8104668:	d003      	beq.n	8104672 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 810466a:	887a      	ldrh	r2, [r7, #2]
 810466c:	687b      	ldr	r3, [r7, #4]
 810466e:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
  }
}
 8104670:	e003      	b.n	810467a <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8104672:	887b      	ldrh	r3, [r7, #2]
 8104674:	041a      	lsls	r2, r3, #16
 8104676:	687b      	ldr	r3, [r7, #4]
 8104678:	619a      	str	r2, [r3, #24]
}
 810467a:	bf00      	nop
 810467c:	370c      	adds	r7, #12
 810467e:	46bd      	mov	sp, r7
 8104680:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104684:	4770      	bx	lr

08104686 <HAL_GPIO_TogglePin>:
  * @param  GPIOx: Where x can be (A..K) to select the GPIO peripheral.
  * @param  GPIO_Pin: Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 8104686:	b480      	push	{r7}
 8104688:	b085      	sub	sp, #20
 810468a:	af00      	add	r7, sp, #0
 810468c:	6078      	str	r0, [r7, #4]
 810468e:	460b      	mov	r3, r1
 8104690:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8104692:	687b      	ldr	r3, [r7, #4]
 8104694:	695b      	ldr	r3, [r3, #20]
 8104696:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8104698:	887a      	ldrh	r2, [r7, #2]
 810469a:	68fb      	ldr	r3, [r7, #12]
 810469c:	4013      	ands	r3, r2
 810469e:	041a      	lsls	r2, r3, #16
 81046a0:	68fb      	ldr	r3, [r7, #12]
 81046a2:	43d9      	mvns	r1, r3
 81046a4:	887b      	ldrh	r3, [r7, #2]
 81046a6:	400b      	ands	r3, r1
 81046a8:	431a      	orrs	r2, r3
 81046aa:	687b      	ldr	r3, [r7, #4]
 81046ac:	619a      	str	r2, [r3, #24]
}
 81046ae:	bf00      	nop
 81046b0:	3714      	adds	r7, #20
 81046b2:	46bd      	mov	sp, r7
 81046b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 81046b8:	4770      	bx	lr
	...

081046bc <HAL_HSEM_ActivateNotification>:
  * @brief  Activate Semaphore release Notification for a given Semaphores Mask .
  * @param  SemMask: Mask of Released semaphores
  * @retval Semaphore Key
  */
void HAL_HSEM_ActivateNotification(uint32_t SemMask)
{
 81046bc:	b480      	push	{r7}
 81046be:	b083      	sub	sp, #12
 81046c0:	af00      	add	r7, sp, #0
 81046c2:	6078      	str	r0, [r7, #4]
  {
    /*Use interrupt line 1 for CPU2 Master*/
    HSEM->C2IER |= SemMask;
  }
#else
  HSEM_COMMON->IER |= SemMask;
 81046c4:	4b05      	ldr	r3, [pc, #20]	; (81046dc <HAL_HSEM_ActivateNotification+0x20>)
 81046c6:	681a      	ldr	r2, [r3, #0]
 81046c8:	4904      	ldr	r1, [pc, #16]	; (81046dc <HAL_HSEM_ActivateNotification+0x20>)
 81046ca:	687b      	ldr	r3, [r7, #4]
 81046cc:	4313      	orrs	r3, r2
 81046ce:	600b      	str	r3, [r1, #0]
#endif
}
 81046d0:	bf00      	nop
 81046d2:	370c      	adds	r7, #12
 81046d4:	46bd      	mov	sp, r7
 81046d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 81046da:	4770      	bx	lr
 81046dc:	58026510 	.word	0x58026510

081046e0 <HAL_PWREx_EnterSTOPMode>:
  *            @arg PWR_D2_DOMAIN : Enter D2 Domain to DSTOP mode.
  *            @arg PWR_D3_DOMAIN : Enter D3/SRD Domain to DSTOP mode.
  * @retval None.
  */
void HAL_PWREx_EnterSTOPMode (uint32_t Regulator, uint8_t STOPEntry, uint32_t Domain)
{
 81046e0:	b580      	push	{r7, lr}
 81046e2:	b084      	sub	sp, #16
 81046e4:	af00      	add	r7, sp, #0
 81046e6:	60f8      	str	r0, [r7, #12]
 81046e8:	460b      	mov	r3, r1
 81046ea:	607a      	str	r2, [r7, #4]
 81046ec:	72fb      	strb	r3, [r7, #11]
  assert_param (IS_PWR_REGULATOR (Regulator));
  assert_param (IS_PWR_STOP_ENTRY (STOPEntry));
  assert_param (IS_PWR_DOMAIN (Domain));

  /* Select the regulator state in Stop mode */
  MODIFY_REG (PWR->CR1, PWR_CR1_LPDS, Regulator);
 81046ee:	4b37      	ldr	r3, [pc, #220]	; (81047cc <HAL_PWREx_EnterSTOPMode+0xec>)
 81046f0:	681b      	ldr	r3, [r3, #0]
 81046f2:	f023 0201 	bic.w	r2, r3, #1
 81046f6:	4935      	ldr	r1, [pc, #212]	; (81047cc <HAL_PWREx_EnterSTOPMode+0xec>)
 81046f8:	68fb      	ldr	r3, [r7, #12]
 81046fa:	4313      	orrs	r3, r2
 81046fc:	600b      	str	r3, [r1, #0]

  /* Select the domain Power Down DeepSleep */
  if (Domain == PWR_D1_DOMAIN)
 81046fe:	687b      	ldr	r3, [r7, #4]
 8104700:	2b00      	cmp	r3, #0
 8104702:	d123      	bne.n	810474c <HAL_PWREx_EnterSTOPMode+0x6c>
  {
#if defined (DUAL_CORE)
    /* Check current core */
    if (HAL_GetCurrentCPUID () != CM7_CPUID)
 8104704:	f7ff f84c 	bl	81037a0 <HAL_GetCurrentCPUID>
 8104708:	4603      	mov	r3, r0
 810470a:	2b03      	cmp	r3, #3
 810470c:	d158      	bne.n	81047c0 <HAL_PWREx_EnterSTOPMode+0xe0>
      return;
    }
#endif /* defined (DUAL_CORE) */

    /* Keep DSTOP mode when D1/CD domain enters Deepsleep */
    CLEAR_BIT (PWR->CPUCR, PWR_CPUCR_PDDS_D1);
 810470e:	4b2f      	ldr	r3, [pc, #188]	; (81047cc <HAL_PWREx_EnterSTOPMode+0xec>)
 8104710:	691b      	ldr	r3, [r3, #16]
 8104712:	4a2e      	ldr	r2, [pc, #184]	; (81047cc <HAL_PWREx_EnterSTOPMode+0xec>)
 8104714:	f023 0301 	bic.w	r3, r3, #1
 8104718:	6113      	str	r3, [r2, #16]

    /* Set SLEEPDEEP bit of Cortex System Control Register */
    SET_BIT (SCB->SCR, SCB_SCR_SLEEPDEEP_Msk);
 810471a:	4b2d      	ldr	r3, [pc, #180]	; (81047d0 <HAL_PWREx_EnterSTOPMode+0xf0>)
 810471c:	691b      	ldr	r3, [r3, #16]
 810471e:	4a2c      	ldr	r2, [pc, #176]	; (81047d0 <HAL_PWREx_EnterSTOPMode+0xf0>)
 8104720:	f043 0304 	orr.w	r3, r3, #4
 8104724:	6113      	str	r3, [r2, #16]
  __ASM volatile ("dsb 0xF":::"memory");
 8104726:	f3bf 8f4f 	dsb	sy
}
 810472a:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 810472c:	f3bf 8f6f 	isb	sy
}
 8104730:	bf00      	nop
    /* Ensure that all instructions are done before entering STOP mode */
    __DSB ();
    __ISB ();

    /* Select Stop mode entry */
    if (STOPEntry == PWR_STOPENTRY_WFI)
 8104732:	7afb      	ldrb	r3, [r7, #11]
 8104734:	2b01      	cmp	r3, #1
 8104736:	d101      	bne.n	810473c <HAL_PWREx_EnterSTOPMode+0x5c>
    {
      /* Request Wait For Interrupt */
      __WFI ();
 8104738:	bf30      	wfi
 810473a:	e000      	b.n	810473e <HAL_PWREx_EnterSTOPMode+0x5e>
    }
    else
    {
      /* Request Wait For Event */
      __WFE ();
 810473c:	bf20      	wfe
    }

    /* Clear SLEEPDEEP bit of Cortex-Mx in the System Control Register */
    CLEAR_BIT (SCB->SCR, SCB_SCR_SLEEPDEEP_Msk);
 810473e:	4b24      	ldr	r3, [pc, #144]	; (81047d0 <HAL_PWREx_EnterSTOPMode+0xf0>)
 8104740:	691b      	ldr	r3, [r3, #16]
 8104742:	4a23      	ldr	r2, [pc, #140]	; (81047d0 <HAL_PWREx_EnterSTOPMode+0xf0>)
 8104744:	f023 0304 	bic.w	r3, r3, #4
 8104748:	6113      	str	r3, [r2, #16]
 810474a:	e03c      	b.n	81047c6 <HAL_PWREx_EnterSTOPMode+0xe6>
  }
#if defined (PWR_CPUCR_PDDS_D2)
  else if (Domain == PWR_D2_DOMAIN)
 810474c:	687b      	ldr	r3, [r7, #4]
 810474e:	2b01      	cmp	r3, #1
 8104750:	d123      	bne.n	810479a <HAL_PWREx_EnterSTOPMode+0xba>
  {
#if defined (DUAL_CORE)
    /* Check current core */
    if (HAL_GetCurrentCPUID () != CM4_CPUID)
 8104752:	f7ff f825 	bl	81037a0 <HAL_GetCurrentCPUID>
 8104756:	4603      	mov	r3, r0
 8104758:	2b01      	cmp	r3, #1
 810475a:	d133      	bne.n	81047c4 <HAL_PWREx_EnterSTOPMode+0xe4>
      */
      return;
    }

    /* Keep DSTOP mode when D2 domain enters Deepsleep */
    CLEAR_BIT (PWR->CPU2CR, PWR_CPU2CR_PDDS_D2);
 810475c:	4b1b      	ldr	r3, [pc, #108]	; (81047cc <HAL_PWREx_EnterSTOPMode+0xec>)
 810475e:	695b      	ldr	r3, [r3, #20]
 8104760:	4a1a      	ldr	r2, [pc, #104]	; (81047cc <HAL_PWREx_EnterSTOPMode+0xec>)
 8104762:	f023 0302 	bic.w	r3, r3, #2
 8104766:	6153      	str	r3, [r2, #20]

    /* Set SLEEPDEEP bit of Cortex System Control Register */
    SET_BIT (SCB->SCR, SCB_SCR_SLEEPDEEP_Msk);
 8104768:	4b19      	ldr	r3, [pc, #100]	; (81047d0 <HAL_PWREx_EnterSTOPMode+0xf0>)
 810476a:	691b      	ldr	r3, [r3, #16]
 810476c:	4a18      	ldr	r2, [pc, #96]	; (81047d0 <HAL_PWREx_EnterSTOPMode+0xf0>)
 810476e:	f043 0304 	orr.w	r3, r3, #4
 8104772:	6113      	str	r3, [r2, #16]
  __ASM volatile ("dsb 0xF":::"memory");
 8104774:	f3bf 8f4f 	dsb	sy
}
 8104778:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 810477a:	f3bf 8f6f 	isb	sy
}
 810477e:	bf00      	nop
    /* Ensure that all instructions are done before entering STOP mode */
    __DSB ();
    __ISB ();

    /* Select Stop mode entry */
    if (STOPEntry == PWR_STOPENTRY_WFI)
 8104780:	7afb      	ldrb	r3, [r7, #11]
 8104782:	2b01      	cmp	r3, #1
 8104784:	d101      	bne.n	810478a <HAL_PWREx_EnterSTOPMode+0xaa>
    {
      /* Request Wait For Interrupt */
      __WFI ();
 8104786:	bf30      	wfi
 8104788:	e000      	b.n	810478c <HAL_PWREx_EnterSTOPMode+0xac>
    }
    else
    {
      /* Request Wait For Event */
      __WFE ();
 810478a:	bf20      	wfe
    }

    /* Clear SLEEPDEEP bit of Cortex-Mx in the System Control Register */
    CLEAR_BIT (SCB->SCR, SCB_SCR_SLEEPDEEP_Msk);
 810478c:	4b10      	ldr	r3, [pc, #64]	; (81047d0 <HAL_PWREx_EnterSTOPMode+0xf0>)
 810478e:	691b      	ldr	r3, [r3, #16]
 8104790:	4a0f      	ldr	r2, [pc, #60]	; (81047d0 <HAL_PWREx_EnterSTOPMode+0xf0>)
 8104792:	f023 0304 	bic.w	r3, r3, #4
 8104796:	6113      	str	r3, [r2, #16]
 8104798:	e015      	b.n	81047c6 <HAL_PWREx_EnterSTOPMode+0xe6>
#endif /* defined (PWR_CPUCR_PDDS_D2) */
  else
  {
#if defined (DUAL_CORE)
    /* Check current core */
    if (HAL_GetCurrentCPUID () == CM7_CPUID)
 810479a:	f7ff f801 	bl	81037a0 <HAL_GetCurrentCPUID>
 810479e:	4603      	mov	r3, r0
 81047a0:	2b03      	cmp	r3, #3
 81047a2:	d106      	bne.n	81047b2 <HAL_PWREx_EnterSTOPMode+0xd2>
    {
      /* Keep DSTOP mode when D3 domain enters Deepsleep */
      CLEAR_BIT (PWR->CPUCR, PWR_CPUCR_PDDS_D3);
 81047a4:	4b09      	ldr	r3, [pc, #36]	; (81047cc <HAL_PWREx_EnterSTOPMode+0xec>)
 81047a6:	691b      	ldr	r3, [r3, #16]
 81047a8:	4a08      	ldr	r2, [pc, #32]	; (81047cc <HAL_PWREx_EnterSTOPMode+0xec>)
 81047aa:	f023 0304 	bic.w	r3, r3, #4
 81047ae:	6113      	str	r3, [r2, #16]
 81047b0:	e009      	b.n	81047c6 <HAL_PWREx_EnterSTOPMode+0xe6>
    }
    else
    {
      /* Keep DSTOP mode when D3 domain enters Deepsleep */
      CLEAR_BIT (PWR->CPU2CR, PWR_CPU2CR_PDDS_D3);
 81047b2:	4b06      	ldr	r3, [pc, #24]	; (81047cc <HAL_PWREx_EnterSTOPMode+0xec>)
 81047b4:	695b      	ldr	r3, [r3, #20]
 81047b6:	4a05      	ldr	r2, [pc, #20]	; (81047cc <HAL_PWREx_EnterSTOPMode+0xec>)
 81047b8:	f023 0304 	bic.w	r3, r3, #4
 81047bc:	6153      	str	r3, [r2, #20]
 81047be:	e002      	b.n	81047c6 <HAL_PWREx_EnterSTOPMode+0xe6>
      return;
 81047c0:	bf00      	nop
 81047c2:	e000      	b.n	81047c6 <HAL_PWREx_EnterSTOPMode+0xe6>
      return;
 81047c4:	bf00      	nop
#else
    /* Keep DSTOP mode when D3/SRD domain enters Deepsleep */
    CLEAR_BIT (PWR->CPUCR, PWR_CPUCR_PDDS_D3);
#endif  /* defined (DUAL_CORE) */
  }
}
 81047c6:	3710      	adds	r7, #16
 81047c8:	46bd      	mov	sp, r7
 81047ca:	bd80      	pop	{r7, pc}
 81047cc:	58024800 	.word	0x58024800
 81047d0:	e000ed00 	.word	0xe000ed00

081047d4 <HAL_PWREx_ClearPendingEvent>:
  *         enter low power mode using Wait For Event request.
  * @note   Cortex-M7 must be in CRUN mode when calling this API by Cortex-M4.
  * @retval None.
  */
void HAL_PWREx_ClearPendingEvent (void)
{
 81047d4:	b580      	push	{r7, lr}
 81047d6:	af00      	add	r7, sp, #0
#if defined (DUAL_CORE)
  /* Check the current Core */
  if (HAL_GetCurrentCPUID () == CM7_CPUID)
 81047d8:	f7fe ffe2 	bl	81037a0 <HAL_GetCurrentCPUID>
 81047dc:	4603      	mov	r3, r0
 81047de:	2b03      	cmp	r3, #3
 81047e0:	d101      	bne.n	81047e6 <HAL_PWREx_ClearPendingEvent+0x12>
  {
    __WFE ();
 81047e2:	bf20      	wfe
    __WFE ();
  }
#else
  __WFE ();
#endif /* defined (DUAL_CORE) */
}
 81047e4:	e001      	b.n	81047ea <HAL_PWREx_ClearPendingEvent+0x16>
    __SEV ();
 81047e6:	bf40      	sev
    __WFE ();
 81047e8:	bf20      	wfe
}
 81047ea:	bf00      	nop
 81047ec:	bd80      	pop	{r7, pc}
	...

081047f0 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 81047f0:	b480      	push	{r7}
 81047f2:	b089      	sub	sp, #36	; 0x24
 81047f4:	af00      	add	r7, sp, #0
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
 81047f6:	4bb3      	ldr	r3, [pc, #716]	; (8104ac4 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81047f8:	691b      	ldr	r3, [r3, #16]
 81047fa:	f003 0338 	and.w	r3, r3, #56	; 0x38
 81047fe:	2b18      	cmp	r3, #24
 8104800:	f200 8155 	bhi.w	8104aae <HAL_RCC_GetSysClockFreq+0x2be>
 8104804:	a201      	add	r2, pc, #4	; (adr r2, 810480c <HAL_RCC_GetSysClockFreq+0x1c>)
 8104806:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 810480a:	bf00      	nop
 810480c:	08104871 	.word	0x08104871
 8104810:	08104aaf 	.word	0x08104aaf
 8104814:	08104aaf 	.word	0x08104aaf
 8104818:	08104aaf 	.word	0x08104aaf
 810481c:	08104aaf 	.word	0x08104aaf
 8104820:	08104aaf 	.word	0x08104aaf
 8104824:	08104aaf 	.word	0x08104aaf
 8104828:	08104aaf 	.word	0x08104aaf
 810482c:	08104897 	.word	0x08104897
 8104830:	08104aaf 	.word	0x08104aaf
 8104834:	08104aaf 	.word	0x08104aaf
 8104838:	08104aaf 	.word	0x08104aaf
 810483c:	08104aaf 	.word	0x08104aaf
 8104840:	08104aaf 	.word	0x08104aaf
 8104844:	08104aaf 	.word	0x08104aaf
 8104848:	08104aaf 	.word	0x08104aaf
 810484c:	0810489d 	.word	0x0810489d
 8104850:	08104aaf 	.word	0x08104aaf
 8104854:	08104aaf 	.word	0x08104aaf
 8104858:	08104aaf 	.word	0x08104aaf
 810485c:	08104aaf 	.word	0x08104aaf
 8104860:	08104aaf 	.word	0x08104aaf
 8104864:	08104aaf 	.word	0x08104aaf
 8104868:	08104aaf 	.word	0x08104aaf
 810486c:	081048a3 	.word	0x081048a3
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8104870:	4b94      	ldr	r3, [pc, #592]	; (8104ac4 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8104872:	681b      	ldr	r3, [r3, #0]
 8104874:	f003 0320 	and.w	r3, r3, #32
 8104878:	2b00      	cmp	r3, #0
 810487a:	d009      	beq.n	8104890 <HAL_RCC_GetSysClockFreq+0xa0>
      {
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 810487c:	4b91      	ldr	r3, [pc, #580]	; (8104ac4 <HAL_RCC_GetSysClockFreq+0x2d4>)
 810487e:	681b      	ldr	r3, [r3, #0]
 8104880:	08db      	lsrs	r3, r3, #3
 8104882:	f003 0303 	and.w	r3, r3, #3
 8104886:	4a90      	ldr	r2, [pc, #576]	; (8104ac8 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8104888:	fa22 f303 	lsr.w	r3, r2, r3
 810488c:	61bb      	str	r3, [r7, #24]
      else
      {
        sysclockfreq = (uint32_t) HSI_VALUE;
      }

      break;
 810488e:	e111      	b.n	8104ab4 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = (uint32_t) HSI_VALUE;
 8104890:	4b8d      	ldr	r3, [pc, #564]	; (8104ac8 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8104892:	61bb      	str	r3, [r7, #24]
      break;
 8104894:	e10e      	b.n	8104ab4 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
      sysclockfreq = CSI_VALUE;
 8104896:	4b8d      	ldr	r3, [pc, #564]	; (8104acc <HAL_RCC_GetSysClockFreq+0x2dc>)
 8104898:	61bb      	str	r3, [r7, #24]
      break;
 810489a:	e10b      	b.n	8104ab4 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
      sysclockfreq = HSE_VALUE;
 810489c:	4b8c      	ldr	r3, [pc, #560]	; (8104ad0 <HAL_RCC_GetSysClockFreq+0x2e0>)
 810489e:	61bb      	str	r3, [r7, #24]
      break;
 81048a0:	e108      	b.n	8104ab4 <HAL_RCC_GetSysClockFreq+0x2c4>
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 81048a2:	4b88      	ldr	r3, [pc, #544]	; (8104ac4 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81048a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 81048a6:	f003 0303 	and.w	r3, r3, #3
 81048aa:	617b      	str	r3, [r7, #20]
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 81048ac:	4b85      	ldr	r3, [pc, #532]	; (8104ac4 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81048ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 81048b0:	091b      	lsrs	r3, r3, #4
 81048b2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 81048b6:	613b      	str	r3, [r7, #16]
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 81048b8:	4b82      	ldr	r3, [pc, #520]	; (8104ac4 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81048ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 81048bc:	f003 0301 	and.w	r3, r3, #1
 81048c0:	60fb      	str	r3, [r7, #12]
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 81048c2:	4b80      	ldr	r3, [pc, #512]	; (8104ac4 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81048c4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 81048c6:	08db      	lsrs	r3, r3, #3
 81048c8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 81048cc:	68fa      	ldr	r2, [r7, #12]
 81048ce:	fb02 f303 	mul.w	r3, r2, r3
 81048d2:	ee07 3a90 	vmov	s15, r3
 81048d6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 81048da:	edc7 7a02 	vstr	s15, [r7, #8]

      if (pllm != 0U)
 81048de:	693b      	ldr	r3, [r7, #16]
 81048e0:	2b00      	cmp	r3, #0
 81048e2:	f000 80e1 	beq.w	8104aa8 <HAL_RCC_GetSysClockFreq+0x2b8>
 81048e6:	697b      	ldr	r3, [r7, #20]
 81048e8:	2b02      	cmp	r3, #2
 81048ea:	f000 8083 	beq.w	81049f4 <HAL_RCC_GetSysClockFreq+0x204>
 81048ee:	697b      	ldr	r3, [r7, #20]
 81048f0:	2b02      	cmp	r3, #2
 81048f2:	f200 80a1 	bhi.w	8104a38 <HAL_RCC_GetSysClockFreq+0x248>
 81048f6:	697b      	ldr	r3, [r7, #20]
 81048f8:	2b00      	cmp	r3, #0
 81048fa:	d003      	beq.n	8104904 <HAL_RCC_GetSysClockFreq+0x114>
 81048fc:	697b      	ldr	r3, [r7, #20]
 81048fe:	2b01      	cmp	r3, #1
 8104900:	d056      	beq.n	81049b0 <HAL_RCC_GetSysClockFreq+0x1c0>
 8104902:	e099      	b.n	8104a38 <HAL_RCC_GetSysClockFreq+0x248>
      {
        switch (pllsource)
        {
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8104904:	4b6f      	ldr	r3, [pc, #444]	; (8104ac4 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8104906:	681b      	ldr	r3, [r3, #0]
 8104908:	f003 0320 	and.w	r3, r3, #32
 810490c:	2b00      	cmp	r3, #0
 810490e:	d02d      	beq.n	810496c <HAL_RCC_GetSysClockFreq+0x17c>
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8104910:	4b6c      	ldr	r3, [pc, #432]	; (8104ac4 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8104912:	681b      	ldr	r3, [r3, #0]
 8104914:	08db      	lsrs	r3, r3, #3
 8104916:	f003 0303 	and.w	r3, r3, #3
 810491a:	4a6b      	ldr	r2, [pc, #428]	; (8104ac8 <HAL_RCC_GetSysClockFreq+0x2d8>)
 810491c:	fa22 f303 	lsr.w	r3, r2, r3
 8104920:	607b      	str	r3, [r7, #4]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8104922:	687b      	ldr	r3, [r7, #4]
 8104924:	ee07 3a90 	vmov	s15, r3
 8104928:	eef8 6a67 	vcvt.f32.u32	s13, s15
 810492c:	693b      	ldr	r3, [r7, #16]
 810492e:	ee07 3a90 	vmov	s15, r3
 8104932:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8104936:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 810493a:	4b62      	ldr	r3, [pc, #392]	; (8104ac4 <HAL_RCC_GetSysClockFreq+0x2d4>)
 810493c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 810493e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8104942:	ee07 3a90 	vmov	s15, r3
 8104946:	eef8 6a67 	vcvt.f32.u32	s13, s15
 810494a:	ed97 6a02 	vldr	s12, [r7, #8]
 810494e:	eddf 5a61 	vldr	s11, [pc, #388]	; 8104ad4 <HAL_RCC_GetSysClockFreq+0x2e4>
 8104952:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8104956:	ee76 7aa7 	vadd.f32	s15, s13, s15
 810495a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 810495e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8104962:	ee67 7a27 	vmul.f32	s15, s14, s15
 8104966:	edc7 7a07 	vstr	s15, [r7, #28]
            }
            else
            {
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            }
            break;
 810496a:	e087      	b.n	8104a7c <HAL_RCC_GetSysClockFreq+0x28c>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 810496c:	693b      	ldr	r3, [r7, #16]
 810496e:	ee07 3a90 	vmov	s15, r3
 8104972:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8104976:	eddf 6a58 	vldr	s13, [pc, #352]	; 8104ad8 <HAL_RCC_GetSysClockFreq+0x2e8>
 810497a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 810497e:	4b51      	ldr	r3, [pc, #324]	; (8104ac4 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8104980:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8104982:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8104986:	ee07 3a90 	vmov	s15, r3
 810498a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 810498e:	ed97 6a02 	vldr	s12, [r7, #8]
 8104992:	eddf 5a50 	vldr	s11, [pc, #320]	; 8104ad4 <HAL_RCC_GetSysClockFreq+0x2e4>
 8104996:	eec6 7a25 	vdiv.f32	s15, s12, s11
 810499a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 810499e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 81049a2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 81049a6:	ee67 7a27 	vmul.f32	s15, s14, s15
 81049aa:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 81049ae:	e065      	b.n	8104a7c <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 81049b0:	693b      	ldr	r3, [r7, #16]
 81049b2:	ee07 3a90 	vmov	s15, r3
 81049b6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 81049ba:	eddf 6a48 	vldr	s13, [pc, #288]	; 8104adc <HAL_RCC_GetSysClockFreq+0x2ec>
 81049be:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 81049c2:	4b40      	ldr	r3, [pc, #256]	; (8104ac4 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81049c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 81049c6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 81049ca:	ee07 3a90 	vmov	s15, r3
 81049ce:	eef8 6a67 	vcvt.f32.u32	s13, s15
 81049d2:	ed97 6a02 	vldr	s12, [r7, #8]
 81049d6:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8104ad4 <HAL_RCC_GetSysClockFreq+0x2e4>
 81049da:	eec6 7a25 	vdiv.f32	s15, s12, s11
 81049de:	ee76 7aa7 	vadd.f32	s15, s13, s15
 81049e2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 81049e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 81049ea:	ee67 7a27 	vmul.f32	s15, s14, s15
 81049ee:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 81049f2:	e043      	b.n	8104a7c <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 81049f4:	693b      	ldr	r3, [r7, #16]
 81049f6:	ee07 3a90 	vmov	s15, r3
 81049fa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 81049fe:	eddf 6a38 	vldr	s13, [pc, #224]	; 8104ae0 <HAL_RCC_GetSysClockFreq+0x2f0>
 8104a02:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8104a06:	4b2f      	ldr	r3, [pc, #188]	; (8104ac4 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8104a08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8104a0a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8104a0e:	ee07 3a90 	vmov	s15, r3
 8104a12:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8104a16:	ed97 6a02 	vldr	s12, [r7, #8]
 8104a1a:	eddf 5a2e 	vldr	s11, [pc, #184]	; 8104ad4 <HAL_RCC_GetSysClockFreq+0x2e4>
 8104a1e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8104a22:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8104a26:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8104a2a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8104a2e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8104a32:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8104a36:	e021      	b.n	8104a7c <HAL_RCC_GetSysClockFreq+0x28c>

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8104a38:	693b      	ldr	r3, [r7, #16]
 8104a3a:	ee07 3a90 	vmov	s15, r3
 8104a3e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8104a42:	eddf 6a26 	vldr	s13, [pc, #152]	; 8104adc <HAL_RCC_GetSysClockFreq+0x2ec>
 8104a46:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8104a4a:	4b1e      	ldr	r3, [pc, #120]	; (8104ac4 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8104a4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8104a4e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8104a52:	ee07 3a90 	vmov	s15, r3
 8104a56:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8104a5a:	ed97 6a02 	vldr	s12, [r7, #8]
 8104a5e:	eddf 5a1d 	vldr	s11, [pc, #116]	; 8104ad4 <HAL_RCC_GetSysClockFreq+0x2e4>
 8104a62:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8104a66:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8104a6a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8104a6e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8104a72:	ee67 7a27 	vmul.f32	s15, s14, s15
 8104a76:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8104a7a:	bf00      	nop
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
 8104a7c:	4b11      	ldr	r3, [pc, #68]	; (8104ac4 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8104a7e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8104a80:	0a5b      	lsrs	r3, r3, #9
 8104a82:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8104a86:	3301      	adds	r3, #1
 8104a88:	603b      	str	r3, [r7, #0]
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 8104a8a:	683b      	ldr	r3, [r7, #0]
 8104a8c:	ee07 3a90 	vmov	s15, r3
 8104a90:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8104a94:	edd7 6a07 	vldr	s13, [r7, #28]
 8104a98:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8104a9c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8104aa0:	ee17 3a90 	vmov	r3, s15
 8104aa4:	61bb      	str	r3, [r7, #24]
      }
      else
      {
        sysclockfreq = 0U;
      }
      break;
 8104aa6:	e005      	b.n	8104ab4 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = 0U;
 8104aa8:	2300      	movs	r3, #0
 8104aaa:	61bb      	str	r3, [r7, #24]
      break;
 8104aac:	e002      	b.n	8104ab4 <HAL_RCC_GetSysClockFreq+0x2c4>

    default:
      sysclockfreq = CSI_VALUE;
 8104aae:	4b07      	ldr	r3, [pc, #28]	; (8104acc <HAL_RCC_GetSysClockFreq+0x2dc>)
 8104ab0:	61bb      	str	r3, [r7, #24]
      break;
 8104ab2:	bf00      	nop
  }

  return sysclockfreq;
 8104ab4:	69bb      	ldr	r3, [r7, #24]
}
 8104ab6:	4618      	mov	r0, r3
 8104ab8:	3724      	adds	r7, #36	; 0x24
 8104aba:	46bd      	mov	sp, r7
 8104abc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8104ac0:	4770      	bx	lr
 8104ac2:	bf00      	nop
 8104ac4:	58024400 	.word	0x58024400
 8104ac8:	03d09000 	.word	0x03d09000
 8104acc:	003d0900 	.word	0x003d0900
 8104ad0:	017d7840 	.word	0x017d7840
 8104ad4:	46000000 	.word	0x46000000
 8104ad8:	4c742400 	.word	0x4c742400
 8104adc:	4a742400 	.word	0x4a742400
 8104ae0:	4bbebc20 	.word	0x4bbebc20

08104ae4 <ai_buffer_get_size>:
 8104ae4:	b378      	cbz	r0, 8104b46 <ai_buffer_get_size+0x62>
 8104ae6:	b410      	push	{r4}
 8104ae8:	6803      	ldr	r3, [r0, #0]
 8104aea:	4a17      	ldr	r2, [pc, #92]	; (8104b48 <ai_buffer_get_size+0x64>)
 8104aec:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
 8104af0:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8104af4:	4293      	cmp	r3, r2
 8104af6:	d01e      	beq.n	8104b36 <ai_buffer_get_size+0x52>
 8104af8:	6984      	ldr	r4, [r0, #24]
 8104afa:	6862      	ldr	r2, [r4, #4]
 8104afc:	7d03      	ldrb	r3, [r0, #20]
 8104afe:	6941      	ldr	r1, [r0, #20]
 8104b00:	f1a3 0301 	sub.w	r3, r3, #1
 8104b04:	fab3 f383 	clz	r3, r3
 8104b08:	095b      	lsrs	r3, r3, #5
 8104b0a:	ebb3 2f11 	cmp.w	r3, r1, lsr #8
 8104b0e:	f3c1 2017 	ubfx	r0, r1, #8, #24
 8104b12:	da0b      	bge.n	8104b2c <ai_buffer_get_size+0x48>
 8104b14:	2b01      	cmp	r3, #1
 8104b16:	d102      	bne.n	8104b1e <ai_buffer_get_size+0x3a>
 8104b18:	2802      	cmp	r0, #2
 8104b1a:	d007      	beq.n	8104b2c <ai_buffer_get_size+0x48>
 8104b1c:	2302      	movs	r3, #2
 8104b1e:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 8104b22:	3301      	adds	r3, #1
 8104b24:	4298      	cmp	r0, r3
 8104b26:	fb01 f202 	mul.w	r2, r1, r2
 8104b2a:	d1f3      	bne.n	8104b14 <ai_buffer_get_size+0x30>
 8104b2c:	ea22 70e2 	bic.w	r0, r2, r2, asr #31
 8104b30:	f85d 4b04 	ldr.w	r4, [sp], #4
 8104b34:	4770      	bx	lr
 8104b36:	2900      	cmp	r1, #0
 8104b38:	d0de      	beq.n	8104af8 <ai_buffer_get_size+0x14>
 8104b3a:	6984      	ldr	r4, [r0, #24]
 8104b3c:	6862      	ldr	r2, [r4, #4]
 8104b3e:	321f      	adds	r2, #31
 8104b40:	f022 021f 	bic.w	r2, r2, #31
 8104b44:	e7da      	b.n	8104afc <ai_buffer_get_size+0x18>
 8104b46:	4770      	bx	lr
 8104b48:	000400c0 	.word	0x000400c0

08104b4c <ai_buffer_array_sane>:
 8104b4c:	b138      	cbz	r0, 8104b5e <ai_buffer_array_sane+0x12>
 8104b4e:	6843      	ldr	r3, [r0, #4]
 8104b50:	b123      	cbz	r3, 8104b5c <ai_buffer_array_sane+0x10>
 8104b52:	8840      	ldrh	r0, [r0, #2]
 8104b54:	3800      	subs	r0, #0
 8104b56:	bf18      	it	ne
 8104b58:	2001      	movne	r0, #1
 8104b5a:	4770      	bx	lr
 8104b5c:	4618      	mov	r0, r3
 8104b5e:	4770      	bx	lr

08104b60 <ai_buffer_array_item_set_address>:
 8104b60:	b150      	cbz	r0, 8104b78 <ai_buffer_array_item_set_address+0x18>
 8104b62:	6843      	ldr	r3, [r0, #4]
 8104b64:	b14b      	cbz	r3, 8104b7a <ai_buffer_array_item_set_address+0x1a>
 8104b66:	8840      	ldrh	r0, [r0, #2]
 8104b68:	b900      	cbnz	r0, 8104b6c <ai_buffer_array_item_set_address+0xc>
 8104b6a:	4770      	bx	lr
 8104b6c:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 8104b70:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8104b74:	2001      	movs	r0, #1
 8104b76:	605a      	str	r2, [r3, #4]
 8104b78:	4770      	bx	lr
 8104b7a:	4618      	mov	r0, r3
 8104b7c:	4770      	bx	lr
 8104b7e:	bf00      	nop

08104b80 <ai_platform_get_weights_map>:
 8104b80:	2a00      	cmp	r2, #0
 8104b82:	d037      	beq.n	8104bf4 <ai_platform_get_weights_map+0x74>
 8104b84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8104b86:	4604      	mov	r4, r0
 8104b88:	b1a0      	cbz	r0, 8104bb4 <ai_platform_get_weights_map+0x34>
 8104b8a:	460f      	mov	r7, r1
 8104b8c:	b191      	cbz	r1, 8104bb4 <ai_platform_get_weights_map+0x34>
 8104b8e:	4b25      	ldr	r3, [pc, #148]	; (8104c24 <ai_platform_get_weights_map+0xa4>)
 8104b90:	6810      	ldr	r0, [r2, #0]
 8104b92:	4298      	cmp	r0, r3
 8104b94:	4615      	mov	r5, r2
 8104b96:	d00f      	beq.n	8104bb8 <ai_platform_get_weights_map+0x38>
 8104b98:	6855      	ldr	r5, [r2, #4]
 8104b9a:	b15d      	cbz	r5, 8104bb4 <ai_platform_get_weights_map+0x34>
 8104b9c:	682e      	ldr	r6, [r5, #0]
 8104b9e:	429e      	cmp	r6, r3
 8104ba0:	d02a      	beq.n	8104bf8 <ai_platform_get_weights_map+0x78>
 8104ba2:	f1a1 0001 	sub.w	r0, r1, #1
 8104ba6:	6025      	str	r5, [r4, #0]
 8104ba8:	fab0 f080 	clz	r0, r0
 8104bac:	0940      	lsrs	r0, r0, #5
 8104bae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8104bb0:	42a7      	cmp	r7, r4
 8104bb2:	d034      	beq.n	8104c1e <ai_platform_get_weights_map+0x9e>
 8104bb4:	2000      	movs	r0, #0
 8104bb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8104bb8:	1d10      	adds	r0, r2, #4
 8104bba:	f7ff ffc7 	bl	8104b4c <ai_buffer_array_sane>
 8104bbe:	2800      	cmp	r0, #0
 8104bc0:	d0f8      	beq.n	8104bb4 <ai_platform_get_weights_map+0x34>
 8104bc2:	88eb      	ldrh	r3, [r5, #6]
 8104bc4:	429f      	cmp	r7, r3
 8104bc6:	d1f5      	bne.n	8104bb4 <ai_platform_get_weights_map+0x34>
 8104bc8:	f04f 0c00 	mov.w	ip, #0
 8104bcc:	1f20      	subs	r0, r4, #4
 8104bce:	46e6      	mov	lr, ip
 8104bd0:	68ab      	ldr	r3, [r5, #8]
 8104bd2:	4463      	add	r3, ip
 8104bd4:	f10c 0c1c 	add.w	ip, ip, #28
 8104bd8:	685b      	ldr	r3, [r3, #4]
 8104bda:	b12b      	cbz	r3, 8104be8 <ai_platform_get_weights_map+0x68>
 8104bdc:	f10e 0e01 	add.w	lr, lr, #1
 8104be0:	4577      	cmp	r7, lr
 8104be2:	f840 3f04 	str.w	r3, [r0, #4]!
 8104be6:	d1f3      	bne.n	8104bd0 <ai_platform_get_weights_map+0x50>
 8104be8:	eba7 000e 	sub.w	r0, r7, lr
 8104bec:	fab0 f080 	clz	r0, r0
 8104bf0:	0940      	lsrs	r0, r0, #5
 8104bf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8104bf4:	2000      	movs	r0, #0
 8104bf6:	4770      	bx	lr
 8104bf8:	1f20      	subs	r0, r4, #4
 8104bfa:	462a      	mov	r2, r5
 8104bfc:	2400      	movs	r4, #0
 8104bfe:	e000      	b.n	8104c02 <ai_platform_get_weights_map+0x82>
 8104c00:	461c      	mov	r4, r3
 8104c02:	f852 3f04 	ldr.w	r3, [r2, #4]!
 8104c06:	42b3      	cmp	r3, r6
 8104c08:	d0d2      	beq.n	8104bb0 <ai_platform_get_weights_map+0x30>
 8104c0a:	f840 3f04 	str.w	r3, [r0, #4]!
 8104c0e:	1c63      	adds	r3, r4, #1
 8104c10:	429f      	cmp	r7, r3
 8104c12:	d1f5      	bne.n	8104c00 <ai_platform_get_weights_map+0x80>
 8104c14:	3402      	adds	r4, #2
 8104c16:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8104c1a:	42b3      	cmp	r3, r6
 8104c1c:	d1ca      	bne.n	8104bb4 <ai_platform_get_weights_map+0x34>
 8104c1e:	2001      	movs	r0, #1
 8104c20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8104c22:	bf00      	nop
 8104c24:	a1facade 	.word	0xa1facade

08104c28 <ai_platform_get_activations_map>:
 8104c28:	2a00      	cmp	r2, #0
 8104c2a:	d038      	beq.n	8104c9e <ai_platform_get_activations_map+0x76>
 8104c2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8104c2e:	4604      	mov	r4, r0
 8104c30:	b1a0      	cbz	r0, 8104c5c <ai_platform_get_activations_map+0x34>
 8104c32:	460f      	mov	r7, r1
 8104c34:	b191      	cbz	r1, 8104c5c <ai_platform_get_activations_map+0x34>
 8104c36:	4b25      	ldr	r3, [pc, #148]	; (8104ccc <ai_platform_get_activations_map+0xa4>)
 8104c38:	6810      	ldr	r0, [r2, #0]
 8104c3a:	4298      	cmp	r0, r3
 8104c3c:	4615      	mov	r5, r2
 8104c3e:	d00f      	beq.n	8104c60 <ai_platform_get_activations_map+0x38>
 8104c40:	6a15      	ldr	r5, [r2, #32]
 8104c42:	b15d      	cbz	r5, 8104c5c <ai_platform_get_activations_map+0x34>
 8104c44:	682e      	ldr	r6, [r5, #0]
 8104c46:	429e      	cmp	r6, r3
 8104c48:	d02b      	beq.n	8104ca2 <ai_platform_get_activations_map+0x7a>
 8104c4a:	f1a1 0001 	sub.w	r0, r1, #1
 8104c4e:	6025      	str	r5, [r4, #0]
 8104c50:	fab0 f080 	clz	r0, r0
 8104c54:	0940      	lsrs	r0, r0, #5
 8104c56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8104c58:	42a7      	cmp	r7, r4
 8104c5a:	d035      	beq.n	8104cc8 <ai_platform_get_activations_map+0xa0>
 8104c5c:	2000      	movs	r0, #0
 8104c5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8104c60:	f102 000c 	add.w	r0, r2, #12
 8104c64:	f7ff ff72 	bl	8104b4c <ai_buffer_array_sane>
 8104c68:	2800      	cmp	r0, #0
 8104c6a:	d0f7      	beq.n	8104c5c <ai_platform_get_activations_map+0x34>
 8104c6c:	89eb      	ldrh	r3, [r5, #14]
 8104c6e:	429f      	cmp	r7, r3
 8104c70:	d1f4      	bne.n	8104c5c <ai_platform_get_activations_map+0x34>
 8104c72:	f04f 0c00 	mov.w	ip, #0
 8104c76:	1f20      	subs	r0, r4, #4
 8104c78:	46e6      	mov	lr, ip
 8104c7a:	692b      	ldr	r3, [r5, #16]
 8104c7c:	4463      	add	r3, ip
 8104c7e:	f10c 0c1c 	add.w	ip, ip, #28
 8104c82:	685b      	ldr	r3, [r3, #4]
 8104c84:	b12b      	cbz	r3, 8104c92 <ai_platform_get_activations_map+0x6a>
 8104c86:	f10e 0e01 	add.w	lr, lr, #1
 8104c8a:	4577      	cmp	r7, lr
 8104c8c:	f840 3f04 	str.w	r3, [r0, #4]!
 8104c90:	d1f3      	bne.n	8104c7a <ai_platform_get_activations_map+0x52>
 8104c92:	eba7 000e 	sub.w	r0, r7, lr
 8104c96:	fab0 f080 	clz	r0, r0
 8104c9a:	0940      	lsrs	r0, r0, #5
 8104c9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8104c9e:	2000      	movs	r0, #0
 8104ca0:	4770      	bx	lr
 8104ca2:	1f20      	subs	r0, r4, #4
 8104ca4:	462a      	mov	r2, r5
 8104ca6:	2400      	movs	r4, #0
 8104ca8:	e000      	b.n	8104cac <ai_platform_get_activations_map+0x84>
 8104caa:	461c      	mov	r4, r3
 8104cac:	f852 3f04 	ldr.w	r3, [r2, #4]!
 8104cb0:	42b3      	cmp	r3, r6
 8104cb2:	d0d1      	beq.n	8104c58 <ai_platform_get_activations_map+0x30>
 8104cb4:	f840 3f04 	str.w	r3, [r0, #4]!
 8104cb8:	1c63      	adds	r3, r4, #1
 8104cba:	429f      	cmp	r7, r3
 8104cbc:	d1f5      	bne.n	8104caa <ai_platform_get_activations_map+0x82>
 8104cbe:	3402      	adds	r4, #2
 8104cc0:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8104cc4:	42b3      	cmp	r3, r6
 8104cc6:	d1c9      	bne.n	8104c5c <ai_platform_get_activations_map+0x34>
 8104cc8:	2001      	movs	r0, #1
 8104cca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8104ccc:	a1facade 	.word	0xa1facade

08104cd0 <ai_platform_bind_network_params>:
 8104cd0:	b1a0      	cbz	r0, 8104cfc <ai_platform_bind_network_params+0x2c>
 8104cd2:	b1b1      	cbz	r1, 8104d02 <ai_platform_bind_network_params+0x32>
 8104cd4:	b1c2      	cbz	r2, 8104d08 <ai_platform_bind_network_params+0x38>
 8104cd6:	b410      	push	{r4}
 8104cd8:	4603      	mov	r3, r0
 8104cda:	4c0d      	ldr	r4, [pc, #52]	; (8104d10 <ai_platform_bind_network_params+0x40>)
 8104cdc:	f843 4b04 	str.w	r4, [r3], #4
 8104ce0:	f100 0c0c 	add.w	ip, r0, #12
 8104ce4:	c903      	ldmia	r1, {r0, r1}
 8104ce6:	e883 0003 	stmia.w	r3, {r0, r1}
 8104cea:	e892 0003 	ldmia.w	r2, {r0, r1}
 8104cee:	e88c 0003 	stmia.w	ip, {r0, r1}
 8104cf2:	2301      	movs	r3, #1
 8104cf4:	4618      	mov	r0, r3
 8104cf6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8104cfa:	4770      	bx	lr
 8104cfc:	4603      	mov	r3, r0
 8104cfe:	4618      	mov	r0, r3
 8104d00:	4770      	bx	lr
 8104d02:	460b      	mov	r3, r1
 8104d04:	4618      	mov	r0, r3
 8104d06:	4770      	bx	lr
 8104d08:	4613      	mov	r3, r2
 8104d0a:	4618      	mov	r0, r3
 8104d0c:	4770      	bx	lr
 8104d0e:	bf00      	nop
 8104d10:	a1facade 	.word	0xa1facade

08104d14 <ai_platform_network_get_error>:
 8104d14:	4b04      	ldr	r3, [pc, #16]	; (8104d28 <ai_platform_network_get_error+0x14>)
 8104d16:	6802      	ldr	r2, [r0, #0]
 8104d18:	4393      	bics	r3, r2
 8104d1a:	d102      	bne.n	8104d22 <ai_platform_network_get_error+0xe>
 8104d1c:	300c      	adds	r0, #12
 8104d1e:	f000 b94d 	b.w	8104fbc <core_get_error>
 8104d22:	f241 0010 	movw	r0, #4112	; 0x1010
 8104d26:	4770      	bx	lr
 8104d28:	a1c00100 	.word	0xa1c00100

08104d2c <ai_platform_network_set_error>:
 8104d2c:	b110      	cbz	r0, 8104d34 <ai_platform_network_set_error+0x8>
 8104d2e:	300c      	adds	r0, #12
 8104d30:	f000 b94a 	b.w	8104fc8 <core_set_error>
 8104d34:	4770      	bx	lr
 8104d36:	bf00      	nop

08104d38 <ai_platform_network_create>:
 8104d38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8104d3c:	b083      	sub	sp, #12
 8104d3e:	f89d 9028 	ldrb.w	r9, [sp, #40]	; 0x28
 8104d42:	f89d 802c 	ldrb.w	r8, [sp, #44]	; 0x2c
 8104d46:	b320      	cbz	r0, 8104d92 <ai_platform_network_create+0x5a>
 8104d48:	6002      	str	r2, [r0, #0]
 8104d4a:	4616      	mov	r6, r2
 8104d4c:	461f      	mov	r7, r3
 8104d4e:	4604      	mov	r4, r0
 8104d50:	f000 f932 	bl	8104fb8 <core_init>
 8104d54:	b970      	cbnz	r0, 8104d74 <ai_platform_network_create+0x3c>
 8104d56:	2530      	movs	r5, #48	; 0x30
 8104d58:	2300      	movs	r3, #0
 8104d5a:	6023      	str	r3, [r4, #0]
 8104d5c:	2410      	movs	r4, #16
 8104d5e:	4642      	mov	r2, r8
 8104d60:	4649      	mov	r1, r9
 8104d62:	4638      	mov	r0, r7
 8104d64:	f006 f886 	bl	810ae74 <ai_version_get>
 8104d68:	60b0      	str	r0, [r6, #8]
 8104d6a:	ea45 2004 	orr.w	r0, r5, r4, lsl #8
 8104d6e:	b003      	add	sp, #12
 8104d70:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8104d74:	2200      	movs	r2, #0
 8104d76:	4649      	mov	r1, r9
 8104d78:	4638      	mov	r0, r7
 8104d7a:	f006 f87b 	bl	810ae74 <ai_version_get>
 8104d7e:	2200      	movs	r2, #0
 8104d80:	4605      	mov	r5, r0
 8104d82:	2105      	movs	r1, #5
 8104d84:	2001      	movs	r0, #1
 8104d86:	f006 f875 	bl	810ae74 <ai_version_get>
 8104d8a:	4285      	cmp	r5, r0
 8104d8c:	d008      	beq.n	8104da0 <ai_platform_network_create+0x68>
 8104d8e:	2501      	movs	r5, #1
 8104d90:	e7e2      	b.n	8104d58 <ai_platform_network_create+0x20>
 8104d92:	2510      	movs	r5, #16
 8104d94:	462c      	mov	r4, r5
 8104d96:	ea45 2004 	orr.w	r0, r5, r4, lsl #8
 8104d9a:	b003      	add	sp, #12
 8104d9c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8104da0:	4b05      	ldr	r3, [pc, #20]	; (8104db8 <ai_platform_network_create+0x80>)
 8104da2:	9301      	str	r3, [sp, #4]
 8104da4:	a801      	add	r0, sp, #4
 8104da6:	f000 faed 	bl	8105384 <ai_check_custom_types>
 8104daa:	b110      	cbz	r0, 8104db2 <ai_platform_network_create+0x7a>
 8104dac:	2400      	movs	r4, #0
 8104dae:	4625      	mov	r5, r4
 8104db0:	e7d5      	b.n	8104d5e <ai_platform_network_create+0x26>
 8104db2:	2502      	movs	r5, #2
 8104db4:	e7d0      	b.n	8104d58 <ai_platform_network_create+0x20>
 8104db6:	bf00      	nop
 8104db8:	84048403 	.word	0x84048403

08104dbc <ai_platform_network_init>:
 8104dbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8104dc0:	4b63      	ldr	r3, [pc, #396]	; (8104f50 <ai_platform_network_init+0x194>)
 8104dc2:	6802      	ldr	r2, [r0, #0]
 8104dc4:	4393      	bics	r3, r2
 8104dc6:	b083      	sub	sp, #12
 8104dc8:	d156      	bne.n	8104e78 <ai_platform_network_init+0xbc>
 8104dca:	4604      	mov	r4, r0
 8104dcc:	460f      	mov	r7, r1
 8104dce:	2900      	cmp	r1, #0
 8104dd0:	f000 80a9 	beq.w	8104f26 <ai_platform_network_init+0x16a>
 8104dd4:	680b      	ldr	r3, [r1, #0]
 8104dd6:	495f      	ldr	r1, [pc, #380]	; (8104f54 <ai_platform_network_init+0x198>)
 8104dd8:	428b      	cmp	r3, r1
 8104dda:	d113      	bne.n	8104e04 <ai_platform_network_init+0x48>
 8104ddc:	495c      	ldr	r1, [pc, #368]	; (8104f50 <ai_platform_network_init+0x194>)
 8104dde:	89bd      	ldrh	r5, [r7, #12]
 8104de0:	f8b7 a00e 	ldrh.w	sl, [r7, #14]
 8104de4:	f8d7 8010 	ldr.w	r8, [r7, #16]
 8104de8:	f8b7 b004 	ldrh.w	fp, [r7, #4]
 8104dec:	f8b7 9006 	ldrh.w	r9, [r7, #6]
 8104df0:	68be      	ldr	r6, [r7, #8]
 8104df2:	428a      	cmp	r2, r1
 8104df4:	d02c      	beq.n	8104e50 <ai_platform_network_init+0x94>
 8104df6:	2303      	movs	r3, #3
 8104df8:	6123      	str	r3, [r4, #16]
 8104dfa:	4627      	mov	r7, r4
 8104dfc:	4638      	mov	r0, r7
 8104dfe:	b003      	add	sp, #12
 8104e00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8104e04:	2101      	movs	r1, #1
 8104e06:	4638      	mov	r0, r7
 8104e08:	9301      	str	r3, [sp, #4]
 8104e0a:	f8d7 b004 	ldr.w	fp, [r7, #4]
 8104e0e:	f7ff fe69 	bl	8104ae4 <ai_buffer_get_size>
 8104e12:	f107 081c 	add.w	r8, r7, #28
 8104e16:	4605      	mov	r5, r0
 8104e18:	2101      	movs	r1, #1
 8104e1a:	4640      	mov	r0, r8
 8104e1c:	463e      	mov	r6, r7
 8104e1e:	6a3f      	ldr	r7, [r7, #32]
 8104e20:	f7ff fe60 	bl	8104ae4 <ai_buffer_get_size>
 8104e24:	2d00      	cmp	r5, #0
 8104e26:	9b01      	ldr	r3, [sp, #4]
 8104e28:	bf0a      	itet	eq
 8104e2a:	46a9      	moveq	r9, r5
 8104e2c:	f04f 0901 	movne.w	r9, #1
 8104e30:	462e      	moveq	r6, r5
 8104e32:	b330      	cbz	r0, 8104e82 <ai_platform_network_init+0xc6>
 8104e34:	2f00      	cmp	r7, #0
 8104e36:	f000 8084 	beq.w	8104f42 <ai_platform_network_init+0x186>
 8104e3a:	f04f 0a01 	mov.w	sl, #1
 8104e3e:	f1bb 0f00 	cmp.w	fp, #0
 8104e42:	d021      	beq.n	8104e88 <ai_platform_network_init+0xcc>
 8104e44:	2500      	movs	r5, #0
 8104e46:	6822      	ldr	r2, [r4, #0]
 8104e48:	4941      	ldr	r1, [pc, #260]	; (8104f50 <ai_platform_network_init+0x194>)
 8104e4a:	428a      	cmp	r2, r1
 8104e4c:	46ab      	mov	fp, r5
 8104e4e:	d1d2      	bne.n	8104df6 <ai_platform_network_init+0x3a>
 8104e50:	8c62      	ldrh	r2, [r4, #34]	; 0x22
 8104e52:	454a      	cmp	r2, r9
 8104e54:	4a3f      	ldr	r2, [pc, #252]	; (8104f54 <ai_platform_network_init+0x198>)
 8104e56:	d221      	bcs.n	8104e9c <ai_platform_network_init+0xe0>
 8104e58:	4293      	cmp	r3, r2
 8104e5a:	d15c      	bne.n	8104f16 <ai_platform_network_init+0x15a>
 8104e5c:	6266      	str	r6, [r4, #36]	; 0x24
 8104e5e:	f8a4 9022 	strh.w	r9, [r4, #34]	; 0x22
 8104e62:	f8a4 b020 	strh.w	fp, [r4, #32]
 8104e66:	f8c4 802c 	str.w	r8, [r4, #44]	; 0x2c
 8104e6a:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
 8104e6e:	8525      	strh	r5, [r4, #40]	; 0x28
 8104e70:	4620      	mov	r0, r4
 8104e72:	f000 fab1 	bl	81053d8 <ai_layers_init_all>
 8104e76:	e7be      	b.n	8104df6 <ai_platform_network_init+0x3a>
 8104e78:	2700      	movs	r7, #0
 8104e7a:	4638      	mov	r0, r7
 8104e7c:	b003      	add	sp, #12
 8104e7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8104e82:	4680      	mov	r8, r0
 8104e84:	4682      	mov	sl, r0
 8104e86:	e7da      	b.n	8104e3e <ai_platform_network_init+0x82>
 8104e88:	2d00      	cmp	r5, #0
 8104e8a:	d0dc      	beq.n	8104e46 <ai_platform_network_init+0x8a>
 8104e8c:	2212      	movs	r2, #18
 8104e8e:	2110      	movs	r1, #16
 8104e90:	f104 000c 	add.w	r0, r4, #12
 8104e94:	f000 f898 	bl	8104fc8 <core_set_error>
 8104e98:	465f      	mov	r7, fp
 8104e9a:	e7af      	b.n	8104dfc <ai_platform_network_init+0x40>
 8104e9c:	4293      	cmp	r3, r2
 8104e9e:	d0dd      	beq.n	8104e5c <ai_platform_network_init+0xa0>
 8104ea0:	f1b9 0f00 	cmp.w	r9, #0
 8104ea4:	d018      	beq.n	8104ed8 <ai_platform_network_init+0x11c>
 8104ea6:	ebc9 03c9 	rsb	r3, r9, r9, lsl #3
 8104eaa:	009b      	lsls	r3, r3, #2
 8104eac:	f8cd 9004 	str.w	r9, [sp, #4]
 8104eb0:	2700      	movs	r7, #0
 8104eb2:	4699      	mov	r9, r3
 8104eb4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8104eb6:	eb06 0e07 	add.w	lr, r6, r7
 8104eba:	eb03 0c07 	add.w	ip, r3, r7
 8104ebe:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8104ec2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8104ec6:	e89e 0007 	ldmia.w	lr, {r0, r1, r2}
 8104eca:	371c      	adds	r7, #28
 8104ecc:	45b9      	cmp	r9, r7
 8104ece:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8104ed2:	d1ef      	bne.n	8104eb4 <ai_platform_network_init+0xf8>
 8104ed4:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8104ed8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8104eda:	f8a4 9022 	strh.w	r9, [r4, #34]	; 0x22
 8104ede:	4553      	cmp	r3, sl
 8104ee0:	f8a4 b020 	strh.w	fp, [r4, #32]
 8104ee4:	d325      	bcc.n	8104f32 <ai_platform_network_init+0x176>
 8104ee6:	f1ba 0f00 	cmp.w	sl, #0
 8104eea:	d0be      	beq.n	8104e6a <ai_platform_network_init+0xae>
 8104eec:	ebca 0eca 	rsb	lr, sl, sl, lsl #3
 8104ef0:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8104ef4:	f04f 0c00 	mov.w	ip, #0
 8104ef8:	eb08 070c 	add.w	r7, r8, ip
 8104efc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8104efe:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8104f00:	4466      	add	r6, ip
 8104f02:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8104f04:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8104f08:	f10c 0c1c 	add.w	ip, ip, #28
 8104f0c:	45f4      	cmp	ip, lr
 8104f0e:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 8104f12:	d1f1      	bne.n	8104ef8 <ai_platform_network_init+0x13c>
 8104f14:	e7a9      	b.n	8104e6a <ai_platform_network_init+0xae>
 8104f16:	2212      	movs	r2, #18
 8104f18:	2116      	movs	r1, #22
 8104f1a:	f104 000c 	add.w	r0, r4, #12
 8104f1e:	f000 f853 	bl	8104fc8 <core_set_error>
 8104f22:	2700      	movs	r7, #0
 8104f24:	e76a      	b.n	8104dfc <ai_platform_network_init+0x40>
 8104f26:	2211      	movs	r2, #17
 8104f28:	2110      	movs	r1, #16
 8104f2a:	300c      	adds	r0, #12
 8104f2c:	f000 f84c 	bl	8104fc8 <core_set_error>
 8104f30:	e764      	b.n	8104dfc <ai_platform_network_init+0x40>
 8104f32:	2213      	movs	r2, #19
 8104f34:	2116      	movs	r1, #22
 8104f36:	f104 000c 	add.w	r0, r4, #12
 8104f3a:	f000 f845 	bl	8104fc8 <core_set_error>
 8104f3e:	2700      	movs	r7, #0
 8104f40:	e75c      	b.n	8104dfc <ai_platform_network_init+0x40>
 8104f42:	2213      	movs	r2, #19
 8104f44:	2110      	movs	r1, #16
 8104f46:	f104 000c 	add.w	r0, r4, #12
 8104f4a:	f000 f83d 	bl	8104fc8 <core_set_error>
 8104f4e:	e755      	b.n	8104dfc <ai_platform_network_init+0x40>
 8104f50:	a1c00100 	.word	0xa1c00100
 8104f54:	a1facade 	.word	0xa1facade

08104f58 <ai_platform_network_post_init>:
 8104f58:	b538      	push	{r3, r4, r5, lr}
 8104f5a:	4b16      	ldr	r3, [pc, #88]	; (8104fb4 <ai_platform_network_post_init+0x5c>)
 8104f5c:	6802      	ldr	r2, [r0, #0]
 8104f5e:	ea02 0103 	and.w	r1, r2, r3
 8104f62:	4393      	bics	r3, r2
 8104f64:	d108      	bne.n	8104f78 <ai_platform_network_post_init+0x20>
 8104f66:	6903      	ldr	r3, [r0, #16]
 8104f68:	f013 0502 	ands.w	r5, r3, #2
 8104f6c:	4604      	mov	r4, r0
 8104f6e:	d005      	beq.n	8104f7c <ai_platform_network_post_init+0x24>
 8104f70:	428a      	cmp	r2, r1
 8104f72:	d00a      	beq.n	8104f8a <ai_platform_network_post_init+0x32>
 8104f74:	2001      	movs	r0, #1
 8104f76:	bd38      	pop	{r3, r4, r5, pc}
 8104f78:	2000      	movs	r0, #0
 8104f7a:	bd38      	pop	{r3, r4, r5, pc}
 8104f7c:	2210      	movs	r2, #16
 8104f7e:	2111      	movs	r1, #17
 8104f80:	300c      	adds	r0, #12
 8104f82:	f000 f821 	bl	8104fc8 <core_set_error>
 8104f86:	4628      	mov	r0, r5
 8104f88:	bd38      	pop	{r3, r4, r5, pc}
 8104f8a:	f000 fa33 	bl	81053f4 <ai_layers_post_init_all>
 8104f8e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8104f90:	2b00      	cmp	r3, #0
 8104f92:	d0ef      	beq.n	8104f74 <ai_platform_network_post_init+0x1c>
 8104f94:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8104f96:	e008      	b.n	8104faa <ai_platform_network_post_init+0x52>
 8104f98:	e9d4 3210 	ldrd	r3, r2, [r4, #64]	; 0x40
 8104f9c:	4798      	blx	r3
 8104f9e:	692b      	ldr	r3, [r5, #16]
 8104fa0:	42ab      	cmp	r3, r5
 8104fa2:	d0e7      	beq.n	8104f74 <ai_platform_network_post_init+0x1c>
 8104fa4:	2b00      	cmp	r3, #0
 8104fa6:	d0e5      	beq.n	8104f74 <ai_platform_network_post_init+0x1c>
 8104fa8:	461d      	mov	r5, r3
 8104faa:	4629      	mov	r1, r5
 8104fac:	2000      	movs	r0, #0
 8104fae:	2d00      	cmp	r5, #0
 8104fb0:	d1f2      	bne.n	8104f98 <ai_platform_network_post_init+0x40>
 8104fb2:	e7df      	b.n	8104f74 <ai_platform_network_post_init+0x1c>
 8104fb4:	a1c00100 	.word	0xa1c00100

08104fb8 <core_init>:
 8104fb8:	2001      	movs	r0, #1
 8104fba:	4770      	bx	lr

08104fbc <core_get_error>:
 8104fbc:	4603      	mov	r3, r0
 8104fbe:	2200      	movs	r2, #0
 8104fc0:	6800      	ldr	r0, [r0, #0]
 8104fc2:	601a      	str	r2, [r3, #0]
 8104fc4:	4770      	bx	lr
 8104fc6:	bf00      	nop

08104fc8 <core_set_error>:
 8104fc8:	4603      	mov	r3, r0
 8104fca:	7800      	ldrb	r0, [r0, #0]
 8104fcc:	b108      	cbz	r0, 8104fd2 <core_set_error+0xa>
 8104fce:	2000      	movs	r0, #0
 8104fd0:	4770      	bx	lr
 8104fd2:	7019      	strb	r1, [r3, #0]
 8104fd4:	6819      	ldr	r1, [r3, #0]
 8104fd6:	f362 211f 	bfi	r1, r2, #8, #24
 8104fda:	2001      	movs	r0, #1
 8104fdc:	6019      	str	r1, [r3, #0]
 8104fde:	4770      	bx	lr

08104fe0 <node_convert>:
 8104fe0:	6982      	ldr	r2, [r0, #24]
 8104fe2:	8813      	ldrh	r3, [r2, #0]
 8104fe4:	2b00      	cmp	r3, #0
 8104fe6:	d038      	beq.n	810505a <node_convert+0x7a>
 8104fe8:	6852      	ldr	r2, [r2, #4]
 8104fea:	6850      	ldr	r0, [r2, #4]
 8104fec:	b100      	cbz	r0, 8104ff0 <node_convert+0x10>
 8104fee:	6800      	ldr	r0, [r0, #0]
 8104ff0:	2b01      	cmp	r3, #1
 8104ff2:	f000 80e5 	beq.w	81051c0 <node_convert+0x1e0>
 8104ff6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8104ff8:	6915      	ldr	r5, [r2, #16]
 8104ffa:	b083      	sub	sp, #12
 8104ffc:	b105      	cbz	r5, 8105000 <node_convert+0x20>
 8104ffe:	682d      	ldr	r5, [r5, #0]
 8105000:	6883      	ldr	r3, [r0, #8]
 8105002:	0a1b      	lsrs	r3, r3, #8
 8105004:	f000 809a 	beq.w	810513c <node_convert+0x15c>
 8105008:	68c1      	ldr	r1, [r0, #12]
 810500a:	2401      	movs	r4, #1
 810500c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8105010:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8105014:	4299      	cmp	r1, r3
 8105016:	fb02 f404 	mul.w	r4, r2, r4
 810501a:	d1f9      	bne.n	8105010 <node_convert+0x30>
 810501c:	6982      	ldr	r2, [r0, #24]
 810501e:	69ae      	ldr	r6, [r5, #24]
 8105020:	6813      	ldr	r3, [r2, #0]
 8105022:	f3c3 4143 	ubfx	r1, r3, #17, #4
 8105026:	2901      	cmp	r1, #1
 8105028:	d019      	beq.n	810505e <node_convert+0x7e>
 810502a:	6801      	ldr	r1, [r0, #0]
 810502c:	68b5      	ldr	r5, [r6, #8]
 810502e:	2900      	cmp	r1, #0
 8105030:	d032      	beq.n	8105098 <node_convert+0xb8>
 8105032:	684e      	ldr	r6, [r1, #4]
 8105034:	6890      	ldr	r0, [r2, #8]
 8105036:	f3c3 52c0 	ubfx	r2, r3, #23, #1
 810503a:	2e00      	cmp	r6, #0
 810503c:	d06a      	beq.n	8105114 <node_convert+0x134>
 810503e:	884b      	ldrh	r3, [r1, #2]
 8105040:	2b00      	cmp	r3, #0
 8105042:	d150      	bne.n	81050e6 <node_convert+0x106>
 8105044:	2a00      	cmp	r2, #0
 8105046:	d067      	beq.n	8105118 <node_convert+0x138>
 8105048:	ed9f 0a5f 	vldr	s0, [pc, #380]	; 81051c8 <node_convert+0x1e8>
 810504c:	4622      	mov	r2, r4
 810504e:	4629      	mov	r1, r5
 8105050:	b003      	add	sp, #12
 8105052:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8105056:	f001 b9c1 	b.w	81063dc <forward_lite_node_convert_integer_is8of32>
 810505a:	685b      	ldr	r3, [r3, #4]
 810505c:	deff      	udf	#255	; 0xff
 810505e:	682d      	ldr	r5, [r5, #0]
 8105060:	6890      	ldr	r0, [r2, #8]
 8105062:	2d00      	cmp	r5, #0
 8105064:	d06c      	beq.n	8105140 <node_convert+0x160>
 8105066:	6833      	ldr	r3, [r6, #0]
 8105068:	686a      	ldr	r2, [r5, #4]
 810506a:	68b1      	ldr	r1, [r6, #8]
 810506c:	f3c3 53c0 	ubfx	r3, r3, #23, #1
 8105070:	2a00      	cmp	r2, #0
 8105072:	d040      	beq.n	81050f6 <node_convert+0x116>
 8105074:	886d      	ldrh	r5, [r5, #2]
 8105076:	2d00      	cmp	r5, #0
 8105078:	d042      	beq.n	8105100 <node_convert+0x120>
 810507a:	6815      	ldr	r5, [r2, #0]
 810507c:	ed95 0a00 	vldr	s0, [r5]
 8105080:	2b00      	cmp	r3, #0
 8105082:	f000 8096 	beq.w	81051b2 <node_convert+0x1d2>
 8105086:	6853      	ldr	r3, [r2, #4]
 8105088:	f993 3000 	ldrsb.w	r3, [r3]
 810508c:	4622      	mov	r2, r4
 810508e:	b003      	add	sp, #12
 8105090:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8105094:	f001 b9a6 	b.w	81063e4 <forward_lite_node_convert_integer_if32os8>
 8105098:	f3c3 11c6 	ubfx	r1, r3, #7, #7
 810509c:	f003 067f 	and.w	r6, r3, #127	; 0x7f
 81050a0:	1b8e      	subs	r6, r1, r6
 81050a2:	3640      	adds	r6, #64	; 0x40
 81050a4:	f3c3 53c0 	ubfx	r3, r3, #23, #1
 81050a8:	2908      	cmp	r1, #8
 81050aa:	6890      	ldr	r0, [r2, #8]
 81050ac:	eba6 0603 	sub.w	r6, r6, r3
 81050b0:	4622      	mov	r2, r4
 81050b2:	4629      	mov	r1, r5
 81050b4:	d06f      	beq.n	8105196 <node_convert+0x1b6>
 81050b6:	f003 fcbb 	bl	8108a30 <st_int16_to_f32>
 81050ba:	b196      	cbz	r6, 81050e2 <node_convert+0x102>
 81050bc:	ee07 6a90 	vmov	s15, r6
 81050c0:	eeb0 0a00 	vmov.f32	s0, #0	; 0x40000000  2.0
 81050c4:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 81050c8:	f006 f882 	bl	810b1d0 <powf>
 81050cc:	b14c      	cbz	r4, 81050e2 <node_convert+0x102>
 81050ce:	2300      	movs	r3, #0
 81050d0:	ecf5 7a01 	vldmia	r5!, {s15}
 81050d4:	3301      	adds	r3, #1
 81050d6:	ee67 7a80 	vmul.f32	s15, s15, s0
 81050da:	42a3      	cmp	r3, r4
 81050dc:	ed45 7a01 	vstr	s15, [r5, #-4]
 81050e0:	d1f6      	bne.n	81050d0 <node_convert+0xf0>
 81050e2:	b003      	add	sp, #12
 81050e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 81050e6:	6833      	ldr	r3, [r6, #0]
 81050e8:	ed93 0a00 	vldr	s0, [r3]
 81050ec:	6873      	ldr	r3, [r6, #4]
 81050ee:	b1ea      	cbz	r2, 810512c <node_convert+0x14c>
 81050f0:	f993 3000 	ldrsb.w	r3, [r3]
 81050f4:	e7aa      	b.n	810504c <node_convert+0x6c>
 81050f6:	b12b      	cbz	r3, 8105104 <node_convert+0x124>
 81050f8:	ed9f 0a33 	vldr	s0, [pc, #204]	; 81051c8 <node_convert+0x1e8>
 81050fc:	4613      	mov	r3, r2
 81050fe:	e7c5      	b.n	810508c <node_convert+0xac>
 8105100:	2b00      	cmp	r3, #0
 8105102:	d159      	bne.n	81051b8 <node_convert+0x1d8>
 8105104:	ed9f 0a30 	vldr	s0, [pc, #192]	; 81051c8 <node_convert+0x1e8>
 8105108:	4622      	mov	r2, r4
 810510a:	b003      	add	sp, #12
 810510c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8105110:	f001 b96a 	b.w	81063e8 <forward_lite_node_convert_integer_if32ou8>
 8105114:	2a00      	cmp	r2, #0
 8105116:	d141      	bne.n	810519c <node_convert+0x1bc>
 8105118:	ed9f 0a2b 	vldr	s0, [pc, #172]	; 81051c8 <node_convert+0x1e8>
 810511c:	2300      	movs	r3, #0
 810511e:	4622      	mov	r2, r4
 8105120:	4629      	mov	r1, r5
 8105122:	b003      	add	sp, #12
 8105124:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8105128:	f001 b95a 	b.w	81063e0 <forward_lite_node_convert_integer_iu8of32>
 810512c:	781b      	ldrb	r3, [r3, #0]
 810512e:	4622      	mov	r2, r4
 8105130:	4629      	mov	r1, r5
 8105132:	b003      	add	sp, #12
 8105134:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8105138:	f001 b952 	b.w	81063e0 <forward_lite_node_convert_integer_iu8of32>
 810513c:	2401      	movs	r4, #1
 810513e:	e76d      	b.n	810501c <node_convert+0x3c>
 8105140:	6832      	ldr	r2, [r6, #0]
 8105142:	f3c2 17c6 	ubfx	r7, r2, #7, #7
 8105146:	f002 037f 	and.w	r3, r2, #127	; 0x7f
 810514a:	1afb      	subs	r3, r7, r3
 810514c:	3340      	adds	r3, #64	; 0x40
 810514e:	f3c2 52c0 	ubfx	r2, r2, #23, #1
 8105152:	1a9b      	subs	r3, r3, r2
 8105154:	d016      	beq.n	8105184 <node_convert+0x1a4>
 8105156:	425b      	negs	r3, r3
 8105158:	ee00 3a90 	vmov	s1, r3
 810515c:	eeb0 0a00 	vmov.f32	s0, #0	; 0x40000000  2.0
 8105160:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 8105164:	9001      	str	r0, [sp, #4]
 8105166:	f006 f833 	bl	810b1d0 <powf>
 810516a:	9801      	ldr	r0, [sp, #4]
 810516c:	b154      	cbz	r4, 8105184 <node_convert+0x1a4>
 810516e:	462b      	mov	r3, r5
 8105170:	4602      	mov	r2, r0
 8105172:	ecf2 7a01 	vldmia	r2!, {s15}
 8105176:	3301      	adds	r3, #1
 8105178:	ee67 7a80 	vmul.f32	s15, s15, s0
 810517c:	42a3      	cmp	r3, r4
 810517e:	ed42 7a01 	vstr	s15, [r2, #-4]
 8105182:	d1f6      	bne.n	8105172 <node_convert+0x192>
 8105184:	2f08      	cmp	r7, #8
 8105186:	d00d      	beq.n	81051a4 <node_convert+0x1c4>
 8105188:	68b1      	ldr	r1, [r6, #8]
 810518a:	4622      	mov	r2, r4
 810518c:	b003      	add	sp, #12
 810518e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8105192:	f003 baa9 	b.w	81086e8 <st_f32_to_int16>
 8105196:	f004 faa7 	bl	81096e8 <st_int8_to_f32>
 810519a:	e78e      	b.n	81050ba <node_convert+0xda>
 810519c:	ed9f 0a0a 	vldr	s0, [pc, #40]	; 81051c8 <node_convert+0x1e8>
 81051a0:	4633      	mov	r3, r6
 81051a2:	e753      	b.n	810504c <node_convert+0x6c>
 81051a4:	68b1      	ldr	r1, [r6, #8]
 81051a6:	4622      	mov	r2, r4
 81051a8:	b003      	add	sp, #12
 81051aa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 81051ae:	f003 bb61 	b.w	8108874 <st_f32_to_int8>
 81051b2:	6853      	ldr	r3, [r2, #4]
 81051b4:	781b      	ldrb	r3, [r3, #0]
 81051b6:	e7a7      	b.n	8105108 <node_convert+0x128>
 81051b8:	ed9f 0a03 	vldr	s0, [pc, #12]	; 81051c8 <node_convert+0x1e8>
 81051bc:	462b      	mov	r3, r5
 81051be:	e765      	b.n	810508c <node_convert+0xac>
 81051c0:	2300      	movs	r3, #0
 81051c2:	685b      	ldr	r3, [r3, #4]
 81051c4:	deff      	udf	#255	; 0xff
 81051c6:	bf00      	nop
 81051c8:	00000000 	.word	0x00000000

081051cc <node_convert_integer>:
 81051cc:	6982      	ldr	r2, [r0, #24]
 81051ce:	8813      	ldrh	r3, [r2, #0]
 81051d0:	2b00      	cmp	r3, #0
 81051d2:	d056      	beq.n	8105282 <node_convert_integer+0xb6>
 81051d4:	b570      	push	{r4, r5, r6, lr}
 81051d6:	6852      	ldr	r2, [r2, #4]
 81051d8:	6855      	ldr	r5, [r2, #4]
 81051da:	b082      	sub	sp, #8
 81051dc:	b105      	cbz	r5, 81051e0 <node_convert_integer+0x14>
 81051de:	682d      	ldr	r5, [r5, #0]
 81051e0:	2b01      	cmp	r3, #1
 81051e2:	f000 80ca 	beq.w	810537a <node_convert_integer+0x1ae>
 81051e6:	6916      	ldr	r6, [r2, #16]
 81051e8:	b106      	cbz	r6, 81051ec <node_convert_integer+0x20>
 81051ea:	6836      	ldr	r6, [r6, #0]
 81051ec:	68ab      	ldr	r3, [r5, #8]
 81051ee:	0a1b      	lsrs	r3, r3, #8
 81051f0:	f000 80a2 	beq.w	8105338 <node_convert_integer+0x16c>
 81051f4:	68e8      	ldr	r0, [r5, #12]
 81051f6:	2201      	movs	r2, #1
 81051f8:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 81051fc:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8105200:	4298      	cmp	r0, r3
 8105202:	fb01 f202 	mul.w	r2, r1, r2
 8105206:	d1f9      	bne.n	81051fc <node_convert_integer+0x30>
 8105208:	682b      	ldr	r3, [r5, #0]
 810520a:	6834      	ldr	r4, [r6, #0]
 810520c:	b17b      	cbz	r3, 810522e <node_convert_integer+0x62>
 810520e:	6859      	ldr	r1, [r3, #4]
 8105210:	b169      	cbz	r1, 810522e <node_convert_integer+0x62>
 8105212:	8858      	ldrh	r0, [r3, #2]
 8105214:	b158      	cbz	r0, 810522e <node_convert_integer+0x62>
 8105216:	6809      	ldr	r1, [r1, #0]
 8105218:	ed91 7a00 	vldr	s14, [r1]
 810521c:	b15c      	cbz	r4, 8105236 <node_convert_integer+0x6a>
 810521e:	6861      	ldr	r1, [r4, #4]
 8105220:	b149      	cbz	r1, 8105236 <node_convert_integer+0x6a>
 8105222:	8860      	ldrh	r0, [r4, #2]
 8105224:	b138      	cbz	r0, 8105236 <node_convert_integer+0x6a>
 8105226:	6809      	ldr	r1, [r1, #0]
 8105228:	edd1 7a00 	vldr	s15, [r1]
 810522c:	e005      	b.n	810523a <node_convert_integer+0x6e>
 810522e:	ed9f 7a54 	vldr	s14, [pc, #336]	; 8105380 <node_convert_integer+0x1b4>
 8105232:	2c00      	cmp	r4, #0
 8105234:	d1f3      	bne.n	810521e <node_convert_integer+0x52>
 8105236:	eddf 7a52 	vldr	s15, [pc, #328]	; 8105380 <node_convert_integer+0x1b4>
 810523a:	69a8      	ldr	r0, [r5, #24]
 810523c:	69b5      	ldr	r5, [r6, #24]
 810523e:	6806      	ldr	r6, [r0, #0]
 8105240:	6829      	ldr	r1, [r5, #0]
 8105242:	0236      	lsls	r6, r6, #8
 8105244:	ee87 0a27 	vdiv.f32	s0, s14, s15
 8105248:	f3c1 51c0 	ubfx	r1, r1, #23, #1
 810524c:	d41b      	bmi.n	8105286 <node_convert_integer+0xba>
 810524e:	2900      	cmp	r1, #0
 8105250:	d153      	bne.n	81052fa <node_convert_integer+0x12e>
 8105252:	6880      	ldr	r0, [r0, #8]
 8105254:	68a9      	ldr	r1, [r5, #8]
 8105256:	b13b      	cbz	r3, 8105268 <node_convert_integer+0x9c>
 8105258:	685d      	ldr	r5, [r3, #4]
 810525a:	2d00      	cmp	r5, #0
 810525c:	f000 8082 	beq.w	8105364 <node_convert_integer+0x198>
 8105260:	885b      	ldrh	r3, [r3, #2]
 8105262:	b10b      	cbz	r3, 8105268 <node_convert_integer+0x9c>
 8105264:	686b      	ldr	r3, [r5, #4]
 8105266:	781b      	ldrb	r3, [r3, #0]
 8105268:	b134      	cbz	r4, 8105278 <node_convert_integer+0xac>
 810526a:	6865      	ldr	r5, [r4, #4]
 810526c:	2d00      	cmp	r5, #0
 810526e:	d06d      	beq.n	810534c <node_convert_integer+0x180>
 8105270:	8864      	ldrh	r4, [r4, #2]
 8105272:	b10c      	cbz	r4, 8105278 <node_convert_integer+0xac>
 8105274:	686c      	ldr	r4, [r5, #4]
 8105276:	7824      	ldrb	r4, [r4, #0]
 8105278:	9400      	str	r4, [sp, #0]
 810527a:	f001 f8bf 	bl	81063fc <forward_lite_node_convert_integer_iu8ou8>
 810527e:	b002      	add	sp, #8
 8105280:	bd70      	pop	{r4, r5, r6, pc}
 8105282:	685b      	ldr	r3, [r3, #4]
 8105284:	deff      	udf	#255	; 0xff
 8105286:	6880      	ldr	r0, [r0, #8]
 8105288:	b1b9      	cbz	r1, 81052ba <node_convert_integer+0xee>
 810528a:	68a9      	ldr	r1, [r5, #8]
 810528c:	b13b      	cbz	r3, 810529e <node_convert_integer+0xd2>
 810528e:	685d      	ldr	r5, [r3, #4]
 8105290:	2d00      	cmp	r5, #0
 8105292:	d057      	beq.n	8105344 <node_convert_integer+0x178>
 8105294:	885b      	ldrh	r3, [r3, #2]
 8105296:	b113      	cbz	r3, 810529e <node_convert_integer+0xd2>
 8105298:	686b      	ldr	r3, [r5, #4]
 810529a:	f993 3000 	ldrsb.w	r3, [r3]
 810529e:	b13c      	cbz	r4, 81052b0 <node_convert_integer+0xe4>
 81052a0:	6865      	ldr	r5, [r4, #4]
 81052a2:	2d00      	cmp	r5, #0
 81052a4:	d04c      	beq.n	8105340 <node_convert_integer+0x174>
 81052a6:	8864      	ldrh	r4, [r4, #2]
 81052a8:	b114      	cbz	r4, 81052b0 <node_convert_integer+0xe4>
 81052aa:	686c      	ldr	r4, [r5, #4]
 81052ac:	f994 4000 	ldrsb.w	r4, [r4]
 81052b0:	9400      	str	r4, [sp, #0]
 81052b2:	f001 f89b 	bl	81063ec <forward_lite_node_convert_integer_is8os8>
 81052b6:	b002      	add	sp, #8
 81052b8:	bd70      	pop	{r4, r5, r6, pc}
 81052ba:	68a9      	ldr	r1, [r5, #8]
 81052bc:	b13b      	cbz	r3, 81052ce <node_convert_integer+0x102>
 81052be:	685d      	ldr	r5, [r3, #4]
 81052c0:	2d00      	cmp	r5, #0
 81052c2:	d04b      	beq.n	810535c <node_convert_integer+0x190>
 81052c4:	885b      	ldrh	r3, [r3, #2]
 81052c6:	b113      	cbz	r3, 81052ce <node_convert_integer+0x102>
 81052c8:	686b      	ldr	r3, [r5, #4]
 81052ca:	f993 3000 	ldrsb.w	r3, [r3]
 81052ce:	b134      	cbz	r4, 81052de <node_convert_integer+0x112>
 81052d0:	6865      	ldr	r5, [r4, #4]
 81052d2:	2d00      	cmp	r5, #0
 81052d4:	d03c      	beq.n	8105350 <node_convert_integer+0x184>
 81052d6:	8864      	ldrh	r4, [r4, #2]
 81052d8:	b10c      	cbz	r4, 81052de <node_convert_integer+0x112>
 81052da:	686c      	ldr	r4, [r5, #4]
 81052dc:	7824      	ldrb	r4, [r4, #0]
 81052de:	9400      	str	r4, [sp, #0]
 81052e0:	eeb4 7a67 	vcmp.f32	s14, s15
 81052e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 81052e8:	d103      	bne.n	81052f2 <node_convert_integer+0x126>
 81052ea:	f103 0580 	add.w	r5, r3, #128	; 0x80
 81052ee:	42a5      	cmp	r5, r4
 81052f0:	d040      	beq.n	8105374 <node_convert_integer+0x1a8>
 81052f2:	f001 f895 	bl	8106420 <forward_lite_node_convert_integer_is8ou8>
 81052f6:	b002      	add	sp, #8
 81052f8:	bd70      	pop	{r4, r5, r6, pc}
 81052fa:	b12b      	cbz	r3, 8105308 <node_convert_integer+0x13c>
 81052fc:	6859      	ldr	r1, [r3, #4]
 81052fe:	b349      	cbz	r1, 8105354 <node_convert_integer+0x188>
 8105300:	885b      	ldrh	r3, [r3, #2]
 8105302:	b10b      	cbz	r3, 8105308 <node_convert_integer+0x13c>
 8105304:	684b      	ldr	r3, [r1, #4]
 8105306:	781b      	ldrb	r3, [r3, #0]
 8105308:	b134      	cbz	r4, 8105318 <node_convert_integer+0x14c>
 810530a:	6861      	ldr	r1, [r4, #4]
 810530c:	b1b1      	cbz	r1, 810533c <node_convert_integer+0x170>
 810530e:	8864      	ldrh	r4, [r4, #2]
 8105310:	b114      	cbz	r4, 8105318 <node_convert_integer+0x14c>
 8105312:	6849      	ldr	r1, [r1, #4]
 8105314:	f991 4000 	ldrsb.w	r4, [r1]
 8105318:	6880      	ldr	r0, [r0, #8]
 810531a:	68a9      	ldr	r1, [r5, #8]
 810531c:	9400      	str	r4, [sp, #0]
 810531e:	eeb4 7a67 	vcmp.f32	s14, s15
 8105322:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8105326:	d103      	bne.n	8105330 <node_convert_integer+0x164>
 8105328:	f104 0580 	add.w	r5, r4, #128	; 0x80
 810532c:	42ab      	cmp	r3, r5
 810532e:	d01e      	beq.n	810536e <node_convert_integer+0x1a2>
 8105330:	f001 f86c 	bl	810640c <forward_lite_node_convert_integer_iu8os8>
 8105334:	b002      	add	sp, #8
 8105336:	bd70      	pop	{r4, r5, r6, pc}
 8105338:	2201      	movs	r2, #1
 810533a:	e765      	b.n	8105208 <node_convert_integer+0x3c>
 810533c:	460c      	mov	r4, r1
 810533e:	e7eb      	b.n	8105318 <node_convert_integer+0x14c>
 8105340:	462c      	mov	r4, r5
 8105342:	e7b5      	b.n	81052b0 <node_convert_integer+0xe4>
 8105344:	462b      	mov	r3, r5
 8105346:	2c00      	cmp	r4, #0
 8105348:	d1aa      	bne.n	81052a0 <node_convert_integer+0xd4>
 810534a:	e7b1      	b.n	81052b0 <node_convert_integer+0xe4>
 810534c:	462c      	mov	r4, r5
 810534e:	e793      	b.n	8105278 <node_convert_integer+0xac>
 8105350:	462c      	mov	r4, r5
 8105352:	e7c4      	b.n	81052de <node_convert_integer+0x112>
 8105354:	460b      	mov	r3, r1
 8105356:	2c00      	cmp	r4, #0
 8105358:	d1d7      	bne.n	810530a <node_convert_integer+0x13e>
 810535a:	e7dd      	b.n	8105318 <node_convert_integer+0x14c>
 810535c:	462b      	mov	r3, r5
 810535e:	2c00      	cmp	r4, #0
 8105360:	d1b6      	bne.n	81052d0 <node_convert_integer+0x104>
 8105362:	e7bc      	b.n	81052de <node_convert_integer+0x112>
 8105364:	462b      	mov	r3, r5
 8105366:	2c00      	cmp	r4, #0
 8105368:	f47f af7f 	bne.w	810526a <node_convert_integer+0x9e>
 810536c:	e784      	b.n	8105278 <node_convert_integer+0xac>
 810536e:	f001 f855 	bl	810641c <forward_lite_node_convert_integer_iu8os8_fast>
 8105372:	e784      	b.n	810527e <node_convert_integer+0xb2>
 8105374:	f001 f85c 	bl	8106430 <forward_lite_node_convert_integer_is8ou8_fast>
 8105378:	e781      	b.n	810527e <node_convert_integer+0xb2>
 810537a:	2300      	movs	r3, #0
 810537c:	685b      	ldr	r3, [r3, #4]
 810537e:	deff      	udf	#255	; 0xff
 8105380:	00000000 	.word	0x00000000

08105384 <ai_check_custom_types>:
 8105384:	b082      	sub	sp, #8
 8105386:	4b13      	ldr	r3, [pc, #76]	; (81053d4 <ai_check_custom_types+0x50>)
 8105388:	9301      	str	r3, [sp, #4]
 810538a:	b118      	cbz	r0, 8105394 <ai_check_custom_types+0x10>
 810538c:	7803      	ldrb	r3, [r0, #0]
 810538e:	2b03      	cmp	r3, #3
 8105390:	d002      	beq.n	8105398 <ai_check_custom_types+0x14>
 8105392:	2000      	movs	r0, #0
 8105394:	b002      	add	sp, #8
 8105396:	4770      	bx	lr
 8105398:	f89d 2004 	ldrb.w	r2, [sp, #4]
 810539c:	4293      	cmp	r3, r2
 810539e:	d004      	beq.n	81053aa <ai_check_custom_types+0x26>
 81053a0:	2001      	movs	r0, #1
 81053a2:	f080 0001 	eor.w	r0, r0, #1
 81053a6:	b002      	add	sp, #8
 81053a8:	4770      	bx	lr
 81053aa:	7842      	ldrb	r2, [r0, #1]
 81053ac:	f89d 3005 	ldrb.w	r3, [sp, #5]
 81053b0:	429a      	cmp	r2, r3
 81053b2:	f100 0001 	add.w	r0, r0, #1
 81053b6:	d1f3      	bne.n	81053a0 <ai_check_custom_types+0x1c>
 81053b8:	f810 2f01 	ldrb.w	r2, [r0, #1]!
 81053bc:	f89d 3006 	ldrb.w	r3, [sp, #6]
 81053c0:	429a      	cmp	r2, r3
 81053c2:	d1ed      	bne.n	81053a0 <ai_check_custom_types+0x1c>
 81053c4:	7842      	ldrb	r2, [r0, #1]
 81053c6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 81053ca:	429a      	cmp	r2, r3
 81053cc:	d1e8      	bne.n	81053a0 <ai_check_custom_types+0x1c>
 81053ce:	2000      	movs	r0, #0
 81053d0:	e7e7      	b.n	81053a2 <ai_check_custom_types+0x1e>
 81053d2:	bf00      	nop
 81053d4:	84048403 	.word	0x84048403

081053d8 <ai_layers_init_all>:
 81053d8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 81053da:	2100      	movs	r1, #0
 81053dc:	b143      	cbz	r3, 81053f0 <ai_layers_init_all+0x18>
 81053de:	691a      	ldr	r2, [r3, #16]
 81053e0:	60d8      	str	r0, [r3, #12]
 81053e2:	429a      	cmp	r2, r3
 81053e4:	f101 0101 	add.w	r1, r1, #1
 81053e8:	d002      	beq.n	81053f0 <ai_layers_init_all+0x18>
 81053ea:	b10a      	cbz	r2, 81053f0 <ai_layers_init_all+0x18>
 81053ec:	4613      	mov	r3, r2
 81053ee:	e7f5      	b.n	81053dc <ai_layers_init_all+0x4>
 81053f0:	4608      	mov	r0, r1
 81053f2:	4770      	bx	lr

081053f4 <ai_layers_post_init_all>:
 81053f4:	b538      	push	{r3, r4, r5, lr}
 81053f6:	6b84      	ldr	r4, [r0, #56]	; 0x38
 81053f8:	2500      	movs	r5, #0
 81053fa:	b16c      	cbz	r4, 8105418 <ai_layers_post_init_all+0x24>
 81053fc:	6863      	ldr	r3, [r4, #4]
 81053fe:	07db      	lsls	r3, r3, #31
 8105400:	d504      	bpl.n	810540c <ai_layers_post_init_all+0x18>
 8105402:	6a23      	ldr	r3, [r4, #32]
 8105404:	4620      	mov	r0, r4
 8105406:	b10b      	cbz	r3, 810540c <ai_layers_post_init_all+0x18>
 8105408:	4798      	blx	r3
 810540a:	3501      	adds	r5, #1
 810540c:	6923      	ldr	r3, [r4, #16]
 810540e:	42a3      	cmp	r3, r4
 8105410:	d002      	beq.n	8105418 <ai_layers_post_init_all+0x24>
 8105412:	b10b      	cbz	r3, 8105418 <ai_layers_post_init_all+0x24>
 8105414:	461c      	mov	r4, r3
 8105416:	e7f0      	b.n	81053fa <ai_layers_post_init_all+0x6>
 8105418:	4628      	mov	r0, r5
 810541a:	bd38      	pop	{r3, r4, r5, pc}

0810541c <forward_conv2d_rgb_sssa8_ch>:
 810541c:	6982      	ldr	r2, [r0, #24]
 810541e:	8813      	ldrh	r3, [r2, #0]
 8105420:	2b00      	cmp	r3, #0
 8105422:	f000 80a8 	beq.w	8105576 <forward_conv2d_rgb_sssa8_ch+0x15a>
 8105426:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 810542a:	6854      	ldr	r4, [r2, #4]
 810542c:	6861      	ldr	r1, [r4, #4]
 810542e:	b097      	sub	sp, #92	; 0x5c
 8105430:	b101      	cbz	r1, 8105434 <forward_conv2d_rgb_sssa8_ch+0x18>
 8105432:	6809      	ldr	r1, [r1, #0]
 8105434:	2b01      	cmp	r3, #1
 8105436:	f000 80b7 	beq.w	81055a8 <forward_conv2d_rgb_sssa8_ch+0x18c>
 810543a:	6922      	ldr	r2, [r4, #16]
 810543c:	b102      	cbz	r2, 8105440 <forward_conv2d_rgb_sssa8_ch+0x24>
 810543e:	6812      	ldr	r2, [r2, #0]
 8105440:	2b02      	cmp	r3, #2
 8105442:	f000 80ac 	beq.w	810559e <forward_conv2d_rgb_sssa8_ch+0x182>
 8105446:	69e5      	ldr	r5, [r4, #28]
 8105448:	2d00      	cmp	r5, #0
 810544a:	f000 80a0 	beq.w	810558e <forward_conv2d_rgb_sssa8_ch+0x172>
 810544e:	8b26      	ldrh	r6, [r4, #24]
 8105450:	f8d5 e000 	ldr.w	lr, [r5]
 8105454:	2e01      	cmp	r6, #1
 8105456:	f240 809c 	bls.w	8105592 <forward_conv2d_rgb_sssa8_ch+0x176>
 810545a:	686d      	ldr	r5, [r5, #4]
 810545c:	2b03      	cmp	r3, #3
 810545e:	f000 80a6 	beq.w	81055ae <forward_conv2d_rgb_sssa8_ch+0x192>
 8105462:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8105464:	2b00      	cmp	r3, #0
 8105466:	f000 8096 	beq.w	8105596 <forward_conv2d_rgb_sssa8_ch+0x17a>
 810546a:	6a44      	ldr	r4, [r0, #36]	; 0x24
 810546c:	b104      	cbz	r4, 8105470 <forward_conv2d_rgb_sssa8_ch+0x54>
 810546e:	685a      	ldr	r2, [r3, #4]
 8105470:	681c      	ldr	r4, [r3, #0]
 8105472:	69ab      	ldr	r3, [r5, #24]
 8105474:	f8d4 c018 	ldr.w	ip, [r4, #24]
 8105478:	689b      	ldr	r3, [r3, #8]
 810547a:	9314      	str	r3, [sp, #80]	; 0x50
 810547c:	68cb      	ldr	r3, [r1, #12]
 810547e:	68d4      	ldr	r4, [r2, #12]
 8105480:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8105484:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8105486:	680d      	ldr	r5, [r1, #0]
 8105488:	889b      	ldrh	r3, [r3, #4]
 810548a:	9313      	str	r3, [sp, #76]	; 0x4c
 810548c:	f8de 300c 	ldr.w	r3, [lr, #12]
 8105490:	f8de 6000 	ldr.w	r6, [lr]
 8105494:	f8d3 a004 	ldr.w	sl, [r3, #4]
 8105498:	88a3      	ldrh	r3, [r4, #4]
 810549a:	68a4      	ldr	r4, [r4, #8]
 810549c:	9411      	str	r4, [sp, #68]	; 0x44
 810549e:	8d04      	ldrh	r4, [r0, #40]	; 0x28
 81054a0:	9412      	str	r4, [sp, #72]	; 0x48
 81054a2:	f8dc 4008 	ldr.w	r4, [ip, #8]
 81054a6:	9415      	str	r4, [sp, #84]	; 0x54
 81054a8:	6814      	ldr	r4, [r2, #0]
 81054aa:	2d00      	cmp	r5, #0
 81054ac:	d068      	beq.n	8105580 <forward_conv2d_rgb_sssa8_ch+0x164>
 81054ae:	686f      	ldr	r7, [r5, #4]
 81054b0:	2f00      	cmp	r7, #0
 81054b2:	d065      	beq.n	8105580 <forward_conv2d_rgb_sssa8_ch+0x164>
 81054b4:	f8b5 8002 	ldrh.w	r8, [r5, #2]
 81054b8:	f1b8 0f00 	cmp.w	r8, #0
 81054bc:	d060      	beq.n	8105580 <forward_conv2d_rgb_sssa8_ch+0x164>
 81054be:	683f      	ldr	r7, [r7, #0]
 81054c0:	ed97 0a00 	vldr	s0, [r7]
 81054c4:	2c00      	cmp	r4, #0
 81054c6:	d058      	beq.n	810557a <forward_conv2d_rgb_sssa8_ch+0x15e>
 81054c8:	6867      	ldr	r7, [r4, #4]
 81054ca:	2f00      	cmp	r7, #0
 81054cc:	d055      	beq.n	810557a <forward_conv2d_rgb_sssa8_ch+0x15e>
 81054ce:	f8b4 8002 	ldrh.w	r8, [r4, #2]
 81054d2:	f1b8 0f00 	cmp.w	r8, #0
 81054d6:	d050      	beq.n	810557a <forward_conv2d_rgb_sssa8_ch+0x15e>
 81054d8:	683f      	ldr	r7, [r7, #0]
 81054da:	edd7 0a00 	vldr	s1, [r7]
 81054de:	6997      	ldr	r7, [r2, #24]
 81054e0:	6989      	ldr	r1, [r1, #24]
 81054e2:	f8de 2018 	ldr.w	r2, [lr, #24]
 81054e6:	f8d7 b008 	ldr.w	fp, [r7, #8]
 81054ea:	f890 8041 	ldrb.w	r8, [r0, #65]	; 0x41
 81054ee:	688f      	ldr	r7, [r1, #8]
 81054f0:	6892      	ldr	r2, [r2, #8]
 81054f2:	b116      	cbz	r6, 81054fa <forward_conv2d_rgb_sssa8_ch+0xde>
 81054f4:	6876      	ldr	r6, [r6, #4]
 81054f6:	b106      	cbz	r6, 81054fa <forward_conv2d_rgb_sssa8_ch+0xde>
 81054f8:	6836      	ldr	r6, [r6, #0]
 81054fa:	b13d      	cbz	r5, 810550c <forward_conv2d_rgb_sssa8_ch+0xf0>
 81054fc:	6869      	ldr	r1, [r5, #4]
 81054fe:	2900      	cmp	r1, #0
 8105500:	d041      	beq.n	8105586 <forward_conv2d_rgb_sssa8_ch+0x16a>
 8105502:	886d      	ldrh	r5, [r5, #2]
 8105504:	b115      	cbz	r5, 810550c <forward_conv2d_rgb_sssa8_ch+0xf0>
 8105506:	6849      	ldr	r1, [r1, #4]
 8105508:	f991 5000 	ldrsb.w	r5, [r1]
 810550c:	b13c      	cbz	r4, 810551e <forward_conv2d_rgb_sssa8_ch+0x102>
 810550e:	6861      	ldr	r1, [r4, #4]
 8105510:	2900      	cmp	r1, #0
 8105512:	d03a      	beq.n	810558a <forward_conv2d_rgb_sssa8_ch+0x16e>
 8105514:	8864      	ldrh	r4, [r4, #2]
 8105516:	b114      	cbz	r4, 810551e <forward_conv2d_rgb_sssa8_ch+0x102>
 8105518:	6849      	ldr	r1, [r1, #4]
 810551a:	f991 4000 	ldrsb.w	r4, [r1]
 810551e:	edcd 0a0e 	vstr	s1, [sp, #56]	; 0x38
 8105522:	e9dc 0100 	ldrd	r0, r1, [ip]
 8105526:	e9cd 320f 	strd	r3, r2, [sp, #60]	; 0x3c
 810552a:	ed8d 0a0d 	vstr	s0, [sp, #52]	; 0x34
 810552e:	f005 fc79 	bl	810ae24 <ai_array_get_byte_size>
 8105532:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8105534:	f8bd 1044 	ldrh.w	r1, [sp, #68]	; 0x44
 8105538:	9109      	str	r1, [sp, #36]	; 0x24
 810553a:	e9cd 030a 	strd	r0, r3, [sp, #40]	; 0x28
 810553e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8105540:	9303      	str	r3, [sp, #12]
 8105542:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8105544:	9302      	str	r3, [sp, #8]
 8105546:	fa1f f18a 	uxth.w	r1, sl
 810554a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 810554c:	9301      	str	r3, [sp, #4]
 810554e:	9100      	str	r1, [sp, #0]
 8105550:	e9cd 8b07 	strd	r8, fp, [sp, #28]
 8105554:	e9cd 4605 	strd	r4, r6, [sp, #20]
 8105558:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	; 0x3c
 810555c:	eddd 0a0e 	vldr	s1, [sp, #56]	; 0x38
 8105560:	ed9d 0a0d 	vldr	s0, [sp, #52]	; 0x34
 8105564:	9504      	str	r5, [sp, #16]
 8105566:	fa1f f189 	uxth.w	r1, r9
 810556a:	4638      	mov	r0, r7
 810556c:	f002 f8c4 	bl	81076f8 <forward_lite_conv2d_rgb_sssa8_ch>
 8105570:	b017      	add	sp, #92	; 0x5c
 8105572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8105576:	685b      	ldr	r3, [r3, #4]
 8105578:	deff      	udf	#255	; 0xff
 810557a:	eddf 0a0e 	vldr	s1, [pc, #56]	; 81055b4 <forward_conv2d_rgb_sssa8_ch+0x198>
 810557e:	e7ae      	b.n	81054de <forward_conv2d_rgb_sssa8_ch+0xc2>
 8105580:	ed9f 0a0c 	vldr	s0, [pc, #48]	; 81055b4 <forward_conv2d_rgb_sssa8_ch+0x198>
 8105584:	e79e      	b.n	81054c4 <forward_conv2d_rgb_sssa8_ch+0xa8>
 8105586:	460d      	mov	r5, r1
 8105588:	e7c0      	b.n	810550c <forward_conv2d_rgb_sssa8_ch+0xf0>
 810558a:	460c      	mov	r4, r1
 810558c:	e7c7      	b.n	810551e <forward_conv2d_rgb_sssa8_ch+0x102>
 810558e:	46ae      	mov	lr, r5
 8105590:	e764      	b.n	810545c <forward_conv2d_rgb_sssa8_ch+0x40>
 8105592:	2500      	movs	r5, #0
 8105594:	e762      	b.n	810545c <forward_conv2d_rgb_sssa8_ch+0x40>
 8105596:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8105598:	b922      	cbnz	r2, 81055a4 <forward_conv2d_rgb_sssa8_ch+0x188>
 810559a:	6993      	ldr	r3, [r2, #24]
 810559c:	deff      	udf	#255	; 0xff
 810559e:	2300      	movs	r3, #0
 81055a0:	685b      	ldr	r3, [r3, #4]
 81055a2:	deff      	udf	#255	; 0xff
 81055a4:	68db      	ldr	r3, [r3, #12]
 81055a6:	deff      	udf	#255	; 0xff
 81055a8:	2300      	movs	r3, #0
 81055aa:	685b      	ldr	r3, [r3, #4]
 81055ac:	deff      	udf	#255	; 0xff
 81055ae:	2300      	movs	r3, #0
 81055b0:	685b      	ldr	r3, [r3, #4]
 81055b2:	deff      	udf	#255	; 0xff
 81055b4:	00000000 	.word	0x00000000

081055b8 <forward_dense_integer_SSSA>:
 81055b8:	6983      	ldr	r3, [r0, #24]
 81055ba:	8819      	ldrh	r1, [r3, #0]
 81055bc:	2900      	cmp	r1, #0
 81055be:	f000 8085 	beq.w	81056cc <forward_dense_integer_SSSA+0x114>
 81055c2:	6858      	ldr	r0, [r3, #4]
 81055c4:	6842      	ldr	r2, [r0, #4]
 81055c6:	b102      	cbz	r2, 81055ca <forward_dense_integer_SSSA+0x12>
 81055c8:	6812      	ldr	r2, [r2, #0]
 81055ca:	2901      	cmp	r1, #1
 81055cc:	f000 8106 	beq.w	81057dc <forward_dense_integer_SSSA+0x224>
 81055d0:	6903      	ldr	r3, [r0, #16]
 81055d2:	b103      	cbz	r3, 81055d6 <forward_dense_integer_SSSA+0x1e>
 81055d4:	681b      	ldr	r3, [r3, #0]
 81055d6:	2902      	cmp	r1, #2
 81055d8:	f000 8103 	beq.w	81057e2 <forward_dense_integer_SSSA+0x22a>
 81055dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 81055e0:	69c5      	ldr	r5, [r0, #28]
 81055e2:	b089      	sub	sp, #36	; 0x24
 81055e4:	2d00      	cmp	r5, #0
 81055e6:	f000 80b4 	beq.w	8105752 <forward_dense_integer_SSSA+0x19a>
 81055ea:	8b04      	ldrh	r4, [r0, #24]
 81055ec:	682f      	ldr	r7, [r5, #0]
 81055ee:	2c01      	cmp	r4, #1
 81055f0:	f240 80d6 	bls.w	81057a0 <forward_dense_integer_SSSA+0x1e8>
 81055f4:	686d      	ldr	r5, [r5, #4]
 81055f6:	2903      	cmp	r1, #3
 81055f8:	f000 80f6 	beq.w	81057e8 <forward_dense_integer_SSSA+0x230>
 81055fc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 81055fe:	69a9      	ldr	r1, [r5, #24]
 8105600:	2c00      	cmp	r4, #0
 8105602:	f000 80bd 	beq.w	8105780 <forward_dense_integer_SSSA+0x1c8>
 8105606:	f8d1 e008 	ldr.w	lr, [r1, #8]
 810560a:	68d1      	ldr	r1, [r2, #12]
 810560c:	68dd      	ldr	r5, [r3, #12]
 810560e:	8889      	ldrh	r1, [r1, #4]
 8105610:	9107      	str	r1, [sp, #28]
 8105612:	e9d5 1002 	ldrd	r1, r0, [r5, #8]
 8105616:	6824      	ldr	r4, [r4, #0]
 8105618:	f8b5 b004 	ldrh.w	fp, [r5, #4]
 810561c:	f8d2 9018 	ldr.w	r9, [r2, #24]
 8105620:	fb00 fa01 	mul.w	sl, r0, r1
 8105624:	6998      	ldr	r0, [r3, #24]
 8105626:	b10c      	cbz	r4, 810562c <forward_dense_integer_SSSA+0x74>
 8105628:	69a1      	ldr	r1, [r4, #24]
 810562a:	688c      	ldr	r4, [r1, #8]
 810562c:	6815      	ldr	r5, [r2, #0]
 810562e:	681e      	ldr	r6, [r3, #0]
 8105630:	f8d7 c018 	ldr.w	ip, [r7, #24]
 8105634:	683b      	ldr	r3, [r7, #0]
 8105636:	2d00      	cmp	r5, #0
 8105638:	d04a      	beq.n	81056d0 <forward_dense_integer_SSSA+0x118>
 810563a:	686a      	ldr	r2, [r5, #4]
 810563c:	2a00      	cmp	r2, #0
 810563e:	d06f      	beq.n	8105720 <forward_dense_integer_SSSA+0x168>
 8105640:	886f      	ldrh	r7, [r5, #2]
 8105642:	2f00      	cmp	r7, #0
 8105644:	d05d      	beq.n	8105702 <forward_dense_integer_SSSA+0x14a>
 8105646:	6811      	ldr	r1, [r2, #0]
 8105648:	ed91 0a00 	vldr	s0, [r1]
 810564c:	2e00      	cmp	r6, #0
 810564e:	d05c      	beq.n	810570a <forward_dense_integer_SSSA+0x152>
 8105650:	f8d6 8004 	ldr.w	r8, [r6, #4]
 8105654:	f1b8 0f00 	cmp.w	r8, #0
 8105658:	d06a      	beq.n	8105730 <forward_dense_integer_SSSA+0x178>
 810565a:	8877      	ldrh	r7, [r6, #2]
 810565c:	2f00      	cmp	r7, #0
 810565e:	d043      	beq.n	81056e8 <forward_dense_integer_SSSA+0x130>
 8105660:	f8d8 1000 	ldr.w	r1, [r8]
 8105664:	6880      	ldr	r0, [r0, #8]
 8105666:	f8d9 9008 	ldr.w	r9, [r9, #8]
 810566a:	f8dc c008 	ldr.w	ip, [ip, #8]
 810566e:	edd1 0a00 	vldr	s1, [r1]
 8105672:	2a00      	cmp	r2, #0
 8105674:	d043      	beq.n	81056fe <forward_dense_integer_SSSA+0x146>
 8105676:	886d      	ldrh	r5, [r5, #2]
 8105678:	2d00      	cmp	r5, #0
 810567a:	d064      	beq.n	8105746 <forward_dense_integer_SSSA+0x18e>
 810567c:	6852      	ldr	r2, [r2, #4]
 810567e:	f992 5000 	ldrsb.w	r5, [r2]
 8105682:	2e00      	cmp	r6, #0
 8105684:	d063      	beq.n	810574e <forward_dense_integer_SSSA+0x196>
 8105686:	f1b8 0f00 	cmp.w	r8, #0
 810568a:	d060      	beq.n	810574e <forward_dense_integer_SSSA+0x196>
 810568c:	8877      	ldrh	r7, [r6, #2]
 810568e:	b11f      	cbz	r7, 8105698 <forward_dense_integer_SSSA+0xe0>
 8105690:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8105694:	f992 7000 	ldrsb.w	r7, [r2]
 8105698:	2b00      	cmp	r3, #0
 810569a:	f000 809c 	beq.w	81057d6 <forward_dense_integer_SSSA+0x21e>
 810569e:	685b      	ldr	r3, [r3, #4]
 81056a0:	2b00      	cmp	r3, #0
 81056a2:	f000 8098 	beq.w	81057d6 <forward_dense_integer_SSSA+0x21e>
 81056a6:	681b      	ldr	r3, [r3, #0]
 81056a8:	ed93 1a00 	vldr	s2, [r3]
 81056ac:	9b07      	ldr	r3, [sp, #28]
 81056ae:	f8cd b00c 	str.w	fp, [sp, #12]
 81056b2:	e9cd 7301 	strd	r7, r3, [sp, #4]
 81056b6:	e9cd a404 	strd	sl, r4, [sp, #16]
 81056ba:	9500      	str	r5, [sp, #0]
 81056bc:	4673      	mov	r3, lr
 81056be:	4662      	mov	r2, ip
 81056c0:	4649      	mov	r1, r9
 81056c2:	f000 feb7 	bl	8106434 <forward_lite_dense_is8os8ws8>
 81056c6:	b009      	add	sp, #36	; 0x24
 81056c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 81056cc:	684b      	ldr	r3, [r1, #4]
 81056ce:	deff      	udf	#255	; 0xff
 81056d0:	2e00      	cmp	r6, #0
 81056d2:	d045      	beq.n	8105760 <forward_dense_integer_SSSA+0x1a8>
 81056d4:	f8d6 8004 	ldr.w	r8, [r6, #4]
 81056d8:	f1b8 0f00 	cmp.w	r8, #0
 81056dc:	d04c      	beq.n	8105778 <forward_dense_integer_SSSA+0x1c0>
 81056de:	8877      	ldrh	r7, [r6, #2]
 81056e0:	2f00      	cmp	r7, #0
 81056e2:	d15f      	bne.n	81057a4 <forward_dense_integer_SSSA+0x1ec>
 81056e4:	ed9f 0a42 	vldr	s0, [pc, #264]	; 81057f0 <forward_dense_integer_SSSA+0x238>
 81056e8:	6880      	ldr	r0, [r0, #8]
 81056ea:	f8d9 9008 	ldr.w	r9, [r9, #8]
 81056ee:	f8dc c008 	ldr.w	ip, [ip, #8]
 81056f2:	b38d      	cbz	r5, 8105758 <forward_dense_integer_SSSA+0x1a0>
 81056f4:	686a      	ldr	r2, [r5, #4]
 81056f6:	eddf 0a3e 	vldr	s1, [pc, #248]	; 81057f0 <forward_dense_integer_SSSA+0x238>
 81056fa:	2a00      	cmp	r2, #0
 81056fc:	d1bb      	bne.n	8105676 <forward_dense_integer_SSSA+0xbe>
 81056fe:	4615      	mov	r5, r2
 8105700:	e7c5      	b.n	810568e <forward_dense_integer_SSSA+0xd6>
 8105702:	ed9f 0a3b 	vldr	s0, [pc, #236]	; 81057f0 <forward_dense_integer_SSSA+0x238>
 8105706:	2e00      	cmp	r6, #0
 8105708:	d1a2      	bne.n	8105650 <forward_dense_integer_SSSA+0x98>
 810570a:	6880      	ldr	r0, [r0, #8]
 810570c:	f8d9 9008 	ldr.w	r9, [r9, #8]
 8105710:	f8dc c008 	ldr.w	ip, [ip, #8]
 8105714:	2f00      	cmp	r7, #0
 8105716:	d151      	bne.n	81057bc <forward_dense_integer_SSSA+0x204>
 8105718:	eddf 0a35 	vldr	s1, [pc, #212]	; 81057f0 <forward_dense_integer_SSSA+0x238>
 810571c:	463d      	mov	r5, r7
 810571e:	e7bb      	b.n	8105698 <forward_dense_integer_SSSA+0xe0>
 8105720:	b1f6      	cbz	r6, 8105760 <forward_dense_integer_SSSA+0x1a8>
 8105722:	f8d6 8004 	ldr.w	r8, [r6, #4]
 8105726:	ed9f 0a32 	vldr	s0, [pc, #200]	; 81057f0 <forward_dense_integer_SSSA+0x238>
 810572a:	f1b8 0f00 	cmp.w	r8, #0
 810572e:	d194      	bne.n	810565a <forward_dense_integer_SSSA+0xa2>
 8105730:	6880      	ldr	r0, [r0, #8]
 8105732:	f8d9 9008 	ldr.w	r9, [r9, #8]
 8105736:	f8dc c008 	ldr.w	ip, [ip, #8]
 810573a:	b162      	cbz	r2, 8105756 <forward_dense_integer_SSSA+0x19e>
 810573c:	886d      	ldrh	r5, [r5, #2]
 810573e:	2d00      	cmp	r5, #0
 8105740:	d143      	bne.n	81057ca <forward_dense_integer_SSSA+0x212>
 8105742:	eddf 0a2b 	vldr	s1, [pc, #172]	; 81057f0 <forward_dense_integer_SSSA+0x238>
 8105746:	2500      	movs	r5, #0
 8105748:	f1b8 0f00 	cmp.w	r8, #0
 810574c:	d19e      	bne.n	810568c <forward_dense_integer_SSSA+0xd4>
 810574e:	2700      	movs	r7, #0
 8105750:	e7a2      	b.n	8105698 <forward_dense_integer_SSSA+0xe0>
 8105752:	462f      	mov	r7, r5
 8105754:	e74f      	b.n	81055f6 <forward_dense_integer_SSSA+0x3e>
 8105756:	4615      	mov	r5, r2
 8105758:	eddf 0a25 	vldr	s1, [pc, #148]	; 81057f0 <forward_dense_integer_SSSA+0x238>
 810575c:	462f      	mov	r7, r5
 810575e:	e79b      	b.n	8105698 <forward_dense_integer_SSSA+0xe0>
 8105760:	ed9f 0a23 	vldr	s0, [pc, #140]	; 81057f0 <forward_dense_integer_SSSA+0x238>
 8105764:	4635      	mov	r5, r6
 8105766:	6880      	ldr	r0, [r0, #8]
 8105768:	f8d9 9008 	ldr.w	r9, [r9, #8]
 810576c:	f8dc c008 	ldr.w	ip, [ip, #8]
 8105770:	eef0 0a40 	vmov.f32	s1, s0
 8105774:	462f      	mov	r7, r5
 8105776:	e78f      	b.n	8105698 <forward_dense_integer_SSSA+0xe0>
 8105778:	ed9f 0a1d 	vldr	s0, [pc, #116]	; 81057f0 <forward_dense_integer_SSSA+0x238>
 810577c:	4645      	mov	r5, r8
 810577e:	e7f2      	b.n	8105766 <forward_dense_integer_SSSA+0x1ae>
 8105780:	f8d1 e008 	ldr.w	lr, [r1, #8]
 8105784:	68d1      	ldr	r1, [r2, #12]
 8105786:	68dd      	ldr	r5, [r3, #12]
 8105788:	8889      	ldrh	r1, [r1, #4]
 810578a:	9107      	str	r1, [sp, #28]
 810578c:	e9d5 1002 	ldrd	r1, r0, [r5, #8]
 8105790:	f8b5 b004 	ldrh.w	fp, [r5, #4]
 8105794:	f8d2 9018 	ldr.w	r9, [r2, #24]
 8105798:	fb00 fa01 	mul.w	sl, r0, r1
 810579c:	6998      	ldr	r0, [r3, #24]
 810579e:	e745      	b.n	810562c <forward_dense_integer_SSSA+0x74>
 81057a0:	2500      	movs	r5, #0
 81057a2:	e728      	b.n	81055f6 <forward_dense_integer_SSSA+0x3e>
 81057a4:	f8d8 2000 	ldr.w	r2, [r8]
 81057a8:	6880      	ldr	r0, [r0, #8]
 81057aa:	f8d9 9008 	ldr.w	r9, [r9, #8]
 81057ae:	f8dc c008 	ldr.w	ip, [ip, #8]
 81057b2:	ed9f 0a0f 	vldr	s0, [pc, #60]	; 81057f0 <forward_dense_integer_SSSA+0x238>
 81057b6:	edd2 0a00 	vldr	s1, [r2]
 81057ba:	e769      	b.n	8105690 <forward_dense_integer_SSSA+0xd8>
 81057bc:	6852      	ldr	r2, [r2, #4]
 81057be:	eddf 0a0c 	vldr	s1, [pc, #48]	; 81057f0 <forward_dense_integer_SSSA+0x238>
 81057c2:	f992 5000 	ldrsb.w	r5, [r2]
 81057c6:	4637      	mov	r7, r6
 81057c8:	e766      	b.n	8105698 <forward_dense_integer_SSSA+0xe0>
 81057ca:	6852      	ldr	r2, [r2, #4]
 81057cc:	eddf 0a08 	vldr	s1, [pc, #32]	; 81057f0 <forward_dense_integer_SSSA+0x238>
 81057d0:	f992 5000 	ldrsb.w	r5, [r2]
 81057d4:	e7bb      	b.n	810574e <forward_dense_integer_SSSA+0x196>
 81057d6:	2300      	movs	r3, #0
 81057d8:	681b      	ldr	r3, [r3, #0]
 81057da:	deff      	udf	#255	; 0xff
 81057dc:	2300      	movs	r3, #0
 81057de:	685b      	ldr	r3, [r3, #4]
 81057e0:	deff      	udf	#255	; 0xff
 81057e2:	2300      	movs	r3, #0
 81057e4:	685b      	ldr	r3, [r3, #4]
 81057e6:	deff      	udf	#255	; 0xff
 81057e8:	2300      	movs	r3, #0
 81057ea:	685b      	ldr	r3, [r3, #4]
 81057ec:	deff      	udf	#255	; 0xff
 81057ee:	bf00      	nop
 81057f0:	00000000 	.word	0x00000000

081057f4 <forward_dw_3x3_sssa8_ch>:
 81057f4:	6982      	ldr	r2, [r0, #24]
 81057f6:	8813      	ldrh	r3, [r2, #0]
 81057f8:	2b00      	cmp	r3, #0
 81057fa:	f000 80a6 	beq.w	810594a <forward_dw_3x3_sssa8_ch+0x156>
 81057fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8105802:	6854      	ldr	r4, [r2, #4]
 8105804:	6861      	ldr	r1, [r4, #4]
 8105806:	b099      	sub	sp, #100	; 0x64
 8105808:	b101      	cbz	r1, 810580c <forward_dw_3x3_sssa8_ch+0x18>
 810580a:	6809      	ldr	r1, [r1, #0]
 810580c:	2b01      	cmp	r3, #1
 810580e:	f000 80b5 	beq.w	810597c <forward_dw_3x3_sssa8_ch+0x188>
 8105812:	6922      	ldr	r2, [r4, #16]
 8105814:	b102      	cbz	r2, 8105818 <forward_dw_3x3_sssa8_ch+0x24>
 8105816:	6812      	ldr	r2, [r2, #0]
 8105818:	2b02      	cmp	r3, #2
 810581a:	f000 80aa 	beq.w	8105972 <forward_dw_3x3_sssa8_ch+0x17e>
 810581e:	69e5      	ldr	r5, [r4, #28]
 8105820:	2d00      	cmp	r5, #0
 8105822:	f000 809e 	beq.w	8105962 <forward_dw_3x3_sssa8_ch+0x16e>
 8105826:	8b26      	ldrh	r6, [r4, #24]
 8105828:	682f      	ldr	r7, [r5, #0]
 810582a:	2e01      	cmp	r6, #1
 810582c:	f240 809b 	bls.w	8105966 <forward_dw_3x3_sssa8_ch+0x172>
 8105830:	686d      	ldr	r5, [r5, #4]
 8105832:	2b03      	cmp	r3, #3
 8105834:	f000 80a5 	beq.w	8105982 <forward_dw_3x3_sssa8_ch+0x18e>
 8105838:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 810583a:	2b00      	cmp	r3, #0
 810583c:	f000 8095 	beq.w	810596a <forward_dw_3x3_sssa8_ch+0x176>
 8105840:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8105842:	b104      	cbz	r4, 8105846 <forward_dw_3x3_sssa8_ch+0x52>
 8105844:	685a      	ldr	r2, [r3, #4]
 8105846:	681c      	ldr	r4, [r3, #0]
 8105848:	68d6      	ldr	r6, [r2, #12]
 810584a:	f8d1 e00c 	ldr.w	lr, [r1, #12]
 810584e:	f8d4 c018 	ldr.w	ip, [r4, #24]
 8105852:	68f4      	ldr	r4, [r6, #12]
 8105854:	9412      	str	r4, [sp, #72]	; 0x48
 8105856:	e9de 4a02 	ldrd	r4, sl, [lr, #8]
 810585a:	69ab      	ldr	r3, [r5, #24]
 810585c:	9413      	str	r4, [sp, #76]	; 0x4c
 810585e:	680d      	ldr	r5, [r1, #0]
 8105860:	8d04      	ldrh	r4, [r0, #40]	; 0x28
 8105862:	8d80      	ldrh	r0, [r0, #44]	; 0x2c
 8105864:	689b      	ldr	r3, [r3, #8]
 8105866:	9015      	str	r0, [sp, #84]	; 0x54
 8105868:	f8dc 0008 	ldr.w	r0, [ip, #8]
 810586c:	f8d6 b008 	ldr.w	fp, [r6, #8]
 8105870:	9316      	str	r3, [sp, #88]	; 0x58
 8105872:	9414      	str	r4, [sp, #80]	; 0x50
 8105874:	f8be 3004 	ldrh.w	r3, [lr, #4]
 8105878:	6814      	ldr	r4, [r2, #0]
 810587a:	683e      	ldr	r6, [r7, #0]
 810587c:	9017      	str	r0, [sp, #92]	; 0x5c
 810587e:	2d00      	cmp	r5, #0
 8105880:	d068      	beq.n	8105954 <forward_dw_3x3_sssa8_ch+0x160>
 8105882:	6868      	ldr	r0, [r5, #4]
 8105884:	2800      	cmp	r0, #0
 8105886:	d065      	beq.n	8105954 <forward_dw_3x3_sssa8_ch+0x160>
 8105888:	f8b5 e002 	ldrh.w	lr, [r5, #2]
 810588c:	f1be 0f00 	cmp.w	lr, #0
 8105890:	d060      	beq.n	8105954 <forward_dw_3x3_sssa8_ch+0x160>
 8105892:	6800      	ldr	r0, [r0, #0]
 8105894:	ed90 0a00 	vldr	s0, [r0]
 8105898:	2c00      	cmp	r4, #0
 810589a:	d058      	beq.n	810594e <forward_dw_3x3_sssa8_ch+0x15a>
 810589c:	6860      	ldr	r0, [r4, #4]
 810589e:	2800      	cmp	r0, #0
 81058a0:	d055      	beq.n	810594e <forward_dw_3x3_sssa8_ch+0x15a>
 81058a2:	f8b4 e002 	ldrh.w	lr, [r4, #2]
 81058a6:	f1be 0f00 	cmp.w	lr, #0
 81058aa:	d050      	beq.n	810594e <forward_dw_3x3_sssa8_ch+0x15a>
 81058ac:	6800      	ldr	r0, [r0, #0]
 81058ae:	edd0 0a00 	vldr	s1, [r0]
 81058b2:	6988      	ldr	r0, [r1, #24]
 81058b4:	6992      	ldr	r2, [r2, #24]
 81058b6:	69b9      	ldr	r1, [r7, #24]
 81058b8:	f8d2 9008 	ldr.w	r9, [r2, #8]
 81058bc:	6887      	ldr	r7, [r0, #8]
 81058be:	f8d1 8008 	ldr.w	r8, [r1, #8]
 81058c2:	b116      	cbz	r6, 81058ca <forward_dw_3x3_sssa8_ch+0xd6>
 81058c4:	6876      	ldr	r6, [r6, #4]
 81058c6:	b106      	cbz	r6, 81058ca <forward_dw_3x3_sssa8_ch+0xd6>
 81058c8:	6836      	ldr	r6, [r6, #0]
 81058ca:	b13d      	cbz	r5, 81058dc <forward_dw_3x3_sssa8_ch+0xe8>
 81058cc:	6869      	ldr	r1, [r5, #4]
 81058ce:	2900      	cmp	r1, #0
 81058d0:	d043      	beq.n	810595a <forward_dw_3x3_sssa8_ch+0x166>
 81058d2:	886d      	ldrh	r5, [r5, #2]
 81058d4:	b115      	cbz	r5, 81058dc <forward_dw_3x3_sssa8_ch+0xe8>
 81058d6:	6849      	ldr	r1, [r1, #4]
 81058d8:	f991 5000 	ldrsb.w	r5, [r1]
 81058dc:	b13c      	cbz	r4, 81058ee <forward_dw_3x3_sssa8_ch+0xfa>
 81058de:	6861      	ldr	r1, [r4, #4]
 81058e0:	2900      	cmp	r1, #0
 81058e2:	d03c      	beq.n	810595e <forward_dw_3x3_sssa8_ch+0x16a>
 81058e4:	8864      	ldrh	r4, [r4, #2]
 81058e6:	b114      	cbz	r4, 81058ee <forward_dw_3x3_sssa8_ch+0xfa>
 81058e8:	6849      	ldr	r1, [r1, #4]
 81058ea:	f991 4000 	ldrsb.w	r4, [r1]
 81058ee:	9311      	str	r3, [sp, #68]	; 0x44
 81058f0:	e9dc 0100 	ldrd	r0, r1, [ip]
 81058f4:	edcd 0a10 	vstr	s1, [sp, #64]	; 0x40
 81058f8:	ed8d 0a0f 	vstr	s0, [sp, #60]	; 0x3c
 81058fc:	f005 fa92 	bl	810ae24 <ai_array_get_byte_size>
 8105900:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8105902:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 8105906:	9209      	str	r2, [sp, #36]	; 0x24
 8105908:	e9cd 030b 	strd	r0, r3, [sp, #44]	; 0x2c
 810590c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 810590e:	9303      	str	r3, [sp, #12]
 8105910:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8105912:	9302      	str	r3, [sp, #8]
 8105914:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8105916:	eddd 0a10 	vldr	s1, [sp, #64]	; 0x40
 810591a:	ed9d 0a0f 	vldr	s0, [sp, #60]	; 0x3c
 810591e:	f8bd 104c 	ldrh.w	r1, [sp, #76]	; 0x4c
 8105922:	fa1f f28b 	uxth.w	r2, fp
 8105926:	e9cd 5404 	strd	r5, r4, [sp, #16]
 810592a:	e9cd 8300 	strd	r8, r3, [sp]
 810592e:	9208      	str	r2, [sp, #32]
 8105930:	e9cd 6906 	strd	r6, r9, [sp, #24]
 8105934:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8105936:	fa1f f28a 	uxth.w	r2, sl
 810593a:	4638      	mov	r0, r7
 810593c:	2400      	movs	r4, #0
 810593e:	940a      	str	r4, [sp, #40]	; 0x28
 8105940:	f000 ff98 	bl	8106874 <forward_lite_dw_3x3_sssa8_ch>
 8105944:	b019      	add	sp, #100	; 0x64
 8105946:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 810594a:	685b      	ldr	r3, [r3, #4]
 810594c:	deff      	udf	#255	; 0xff
 810594e:	eddf 0a0e 	vldr	s1, [pc, #56]	; 8105988 <forward_dw_3x3_sssa8_ch+0x194>
 8105952:	e7ae      	b.n	81058b2 <forward_dw_3x3_sssa8_ch+0xbe>
 8105954:	ed9f 0a0c 	vldr	s0, [pc, #48]	; 8105988 <forward_dw_3x3_sssa8_ch+0x194>
 8105958:	e79e      	b.n	8105898 <forward_dw_3x3_sssa8_ch+0xa4>
 810595a:	460d      	mov	r5, r1
 810595c:	e7be      	b.n	81058dc <forward_dw_3x3_sssa8_ch+0xe8>
 810595e:	460c      	mov	r4, r1
 8105960:	e7c5      	b.n	81058ee <forward_dw_3x3_sssa8_ch+0xfa>
 8105962:	462f      	mov	r7, r5
 8105964:	e765      	b.n	8105832 <forward_dw_3x3_sssa8_ch+0x3e>
 8105966:	2500      	movs	r5, #0
 8105968:	e763      	b.n	8105832 <forward_dw_3x3_sssa8_ch+0x3e>
 810596a:	6a42      	ldr	r2, [r0, #36]	; 0x24
 810596c:	b922      	cbnz	r2, 8105978 <forward_dw_3x3_sssa8_ch+0x184>
 810596e:	6993      	ldr	r3, [r2, #24]
 8105970:	deff      	udf	#255	; 0xff
 8105972:	2300      	movs	r3, #0
 8105974:	685b      	ldr	r3, [r3, #4]
 8105976:	deff      	udf	#255	; 0xff
 8105978:	68db      	ldr	r3, [r3, #12]
 810597a:	deff      	udf	#255	; 0xff
 810597c:	2300      	movs	r3, #0
 810597e:	685b      	ldr	r3, [r3, #4]
 8105980:	deff      	udf	#255	; 0xff
 8105982:	2300      	movs	r3, #0
 8105984:	685b      	ldr	r3, [r3, #4]
 8105986:	deff      	udf	#255	; 0xff
 8105988:	00000000 	.word	0x00000000

0810598c <forward_pad>:
 810598c:	7f03      	ldrb	r3, [r0, #28]
 810598e:	2b03      	cmp	r3, #3
 8105990:	d80b      	bhi.n	81059aa <forward_pad+0x1e>
 8105992:	e8df f003 	tbb	[pc, r3]
 8105996:	0608      	.short	0x0608
 8105998:	0204      	.short	0x0204
 810599a:	f000 b85f 	b.w	8105a5c <forward_pad_8bit_ch1st_3x3_constant>
 810599e:	f000 b8ed 	b.w	8105b7c <forward_pad_edge>
 81059a2:	f000 b92d 	b.w	8105c00 <forward_pad_reflect>
 81059a6:	f000 b8a1 	b.w	8105aec <forward_pad_constant>
 81059aa:	4770      	bx	lr

081059ac <forward_nl_integer>:
 81059ac:	6982      	ldr	r2, [r0, #24]
 81059ae:	8813      	ldrh	r3, [r2, #0]
 81059b0:	2b00      	cmp	r3, #0
 81059b2:	d02f      	beq.n	8105a14 <forward_nl_integer+0x68>
 81059b4:	b470      	push	{r4, r5, r6}
 81059b6:	6852      	ldr	r2, [r2, #4]
 81059b8:	6855      	ldr	r5, [r2, #4]
 81059ba:	b105      	cbz	r5, 81059be <forward_nl_integer+0x12>
 81059bc:	682d      	ldr	r5, [r5, #0]
 81059be:	2b01      	cmp	r3, #1
 81059c0:	d048      	beq.n	8105a54 <forward_nl_integer+0xa8>
 81059c2:	6916      	ldr	r6, [r2, #16]
 81059c4:	b106      	cbz	r6, 81059c8 <forward_nl_integer+0x1c>
 81059c6:	6836      	ldr	r6, [r6, #0]
 81059c8:	68ab      	ldr	r3, [r5, #8]
 81059ca:	0a1b      	lsrs	r3, r3, #8
 81059cc:	d033      	beq.n	8105a36 <forward_nl_integer+0x8a>
 81059ce:	68ec      	ldr	r4, [r5, #12]
 81059d0:	2201      	movs	r2, #1
 81059d2:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 81059d6:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 81059da:	429c      	cmp	r4, r3
 81059dc:	fb01 f202 	mul.w	r2, r1, r2
 81059e0:	d1f9      	bne.n	81059d6 <forward_nl_integer+0x2a>
 81059e2:	69ab      	ldr	r3, [r5, #24]
 81059e4:	69c0      	ldr	r0, [r0, #28]
 81059e6:	6819      	ldr	r1, [r3, #0]
 81059e8:	6884      	ldr	r4, [r0, #8]
 81059ea:	69b0      	ldr	r0, [r6, #24]
 81059ec:	020d      	lsls	r5, r1, #8
 81059ee:	d513      	bpl.n	8105a18 <forward_nl_integer+0x6c>
 81059f0:	689e      	ldr	r6, [r3, #8]
 81059f2:	6885      	ldr	r5, [r0, #8]
 81059f4:	b162      	cbz	r2, 8105a10 <forward_nl_integer+0x64>
 81059f6:	1e70      	subs	r0, r6, #1
 81059f8:	4603      	mov	r3, r0
 81059fa:	f810 1f01 	ldrb.w	r1, [r0, #1]!
 81059fe:	3302      	adds	r3, #2
 8105a00:	f081 0180 	eor.w	r1, r1, #128	; 0x80
 8105a04:	1b9b      	subs	r3, r3, r6
 8105a06:	5c61      	ldrb	r1, [r4, r1]
 8105a08:	f805 1b01 	strb.w	r1, [r5], #1
 8105a0c:	429a      	cmp	r2, r3
 8105a0e:	d8f3      	bhi.n	81059f8 <forward_nl_integer+0x4c>
 8105a10:	bc70      	pop	{r4, r5, r6}
 8105a12:	4770      	bx	lr
 8105a14:	685b      	ldr	r3, [r3, #4]
 8105a16:	deff      	udf	#255	; 0xff
 8105a18:	6899      	ldr	r1, [r3, #8]
 8105a1a:	6883      	ldr	r3, [r0, #8]
 8105a1c:	2a00      	cmp	r2, #0
 8105a1e:	d0f7      	beq.n	8105a10 <forward_nl_integer+0x64>
 8105a20:	3901      	subs	r1, #1
 8105a22:	441a      	add	r2, r3
 8105a24:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8105a28:	5c20      	ldrb	r0, [r4, r0]
 8105a2a:	f803 0b01 	strb.w	r0, [r3], #1
 8105a2e:	4293      	cmp	r3, r2
 8105a30:	d1f8      	bne.n	8105a24 <forward_nl_integer+0x78>
 8105a32:	bc70      	pop	{r4, r5, r6}
 8105a34:	4770      	bx	lr
 8105a36:	69ab      	ldr	r3, [r5, #24]
 8105a38:	69c2      	ldr	r2, [r0, #28]
 8105a3a:	6819      	ldr	r1, [r3, #0]
 8105a3c:	6894      	ldr	r4, [r2, #8]
 8105a3e:	69b2      	ldr	r2, [r6, #24]
 8105a40:	0209      	lsls	r1, r1, #8
 8105a42:	d503      	bpl.n	8105a4c <forward_nl_integer+0xa0>
 8105a44:	6895      	ldr	r5, [r2, #8]
 8105a46:	689e      	ldr	r6, [r3, #8]
 8105a48:	2201      	movs	r2, #1
 8105a4a:	e7d4      	b.n	81059f6 <forward_nl_integer+0x4a>
 8105a4c:	6899      	ldr	r1, [r3, #8]
 8105a4e:	6893      	ldr	r3, [r2, #8]
 8105a50:	2201      	movs	r2, #1
 8105a52:	e7e5      	b.n	8105a20 <forward_nl_integer+0x74>
 8105a54:	2300      	movs	r3, #0
 8105a56:	685b      	ldr	r3, [r3, #4]
 8105a58:	deff      	udf	#255	; 0xff
 8105a5a:	bf00      	nop

08105a5c <forward_pad_8bit_ch1st_3x3_constant>:
 8105a5c:	6982      	ldr	r2, [r0, #24]
 8105a5e:	8813      	ldrh	r3, [r2, #0]
 8105a60:	b36b      	cbz	r3, 8105abe <forward_pad_8bit_ch1st_3x3_constant+0x62>
 8105a62:	6852      	ldr	r2, [r2, #4]
 8105a64:	6851      	ldr	r1, [r2, #4]
 8105a66:	b101      	cbz	r1, 8105a6a <forward_pad_8bit_ch1st_3x3_constant+0xe>
 8105a68:	6809      	ldr	r1, [r1, #0]
 8105a6a:	2b01      	cmp	r3, #1
 8105a6c:	d03b      	beq.n	8105ae6 <forward_pad_8bit_ch1st_3x3_constant+0x8a>
 8105a6e:	6913      	ldr	r3, [r2, #16]
 8105a70:	2b00      	cmp	r3, #0
 8105a72:	d036      	beq.n	8105ae2 <forward_pad_8bit_ch1st_3x3_constant+0x86>
 8105a74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8105a78:	e9d0 5209 	ldrd	r5, r2, [r0, #36]	; 0x24
 8105a7c:	e9d5 0400 	ldrd	r0, r4, [r5]
 8105a80:	681f      	ldr	r7, [r3, #0]
 8105a82:	68cb      	ldr	r3, [r1, #12]
 8105a84:	6892      	ldr	r2, [r2, #8]
 8105a86:	f8d3 c004 	ldr.w	ip, [r3, #4]
 8105a8a:	f8d5 800c 	ldr.w	r8, [r5, #12]
 8105a8e:	68db      	ldr	r3, [r3, #12]
 8105a90:	e9d1 6105 	ldrd	r6, r1, [r1, #20]
 8105a94:	4320      	orrs	r0, r4
 8105a96:	b204      	sxth	r4, r0
 8105a98:	6888      	ldr	r0, [r1, #8]
 8105a9a:	e9d7 7105 	ldrd	r7, r1, [r7, #20]
 8105a9e:	b084      	sub	sp, #16
 8105aa0:	f8d7 e00c 	ldr.w	lr, [r7, #12]
 8105aa4:	6889      	ldr	r1, [r1, #8]
 8105aa6:	68f7      	ldr	r7, [r6, #12]
 8105aa8:	6876      	ldr	r6, [r6, #4]
 8105aaa:	b154      	cbz	r4, 8105ac2 <forward_pad_8bit_ch1st_3x3_constant+0x66>
 8105aac:	e9cd 7e02 	strd	r7, lr, [sp, #8]
 8105ab0:	e9cd c600 	strd	ip, r6, [sp]
 8105ab4:	f002 f8cc 	bl	8107c50 <forward_lite_pad_8bit_ch1st_3x3_constant_P1111>
 8105ab8:	b004      	add	sp, #16
 8105aba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8105abe:	685b      	ldr	r3, [r3, #4]
 8105ac0:	deff      	udf	#255	; 0xff
 8105ac2:	f9b5 4008 	ldrsh.w	r4, [r5, #8]
 8105ac6:	2c02      	cmp	r4, #2
 8105ac8:	d1f0      	bne.n	8105aac <forward_pad_8bit_ch1st_3x3_constant+0x50>
 8105aca:	fa0f f888 	sxth.w	r8, r8
 8105ace:	f1b8 0f02 	cmp.w	r8, #2
 8105ad2:	d1eb      	bne.n	8105aac <forward_pad_8bit_ch1st_3x3_constant+0x50>
 8105ad4:	e9cd 7e02 	strd	r7, lr, [sp, #8]
 8105ad8:	e9cd c600 	strd	ip, r6, [sp]
 8105adc:	f002 f884 	bl	8107be8 <forward_lite_pad_8bit_ch1st_3x3_constant_P0022>
 8105ae0:	e7ea      	b.n	8105ab8 <forward_pad_8bit_ch1st_3x3_constant+0x5c>
 8105ae2:	699b      	ldr	r3, [r3, #24]
 8105ae4:	deff      	udf	#255	; 0xff
 8105ae6:	2300      	movs	r3, #0
 8105ae8:	685b      	ldr	r3, [r3, #4]
 8105aea:	deff      	udf	#255	; 0xff

08105aec <forward_pad_constant>:
 8105aec:	6982      	ldr	r2, [r0, #24]
 8105aee:	8813      	ldrh	r3, [r2, #0]
 8105af0:	2b00      	cmp	r3, #0
 8105af2:	d03b      	beq.n	8105b6c <forward_pad_constant+0x80>
 8105af4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8105af8:	6852      	ldr	r2, [r2, #4]
 8105afa:	6854      	ldr	r4, [r2, #4]
 8105afc:	b088      	sub	sp, #32
 8105afe:	b104      	cbz	r4, 8105b02 <forward_pad_constant+0x16>
 8105b00:	6824      	ldr	r4, [r4, #0]
 8105b02:	2b01      	cmp	r3, #1
 8105b04:	d034      	beq.n	8105b70 <forward_pad_constant+0x84>
 8105b06:	6913      	ldr	r3, [r2, #16]
 8105b08:	2b00      	cmp	r3, #0
 8105b0a:	d034      	beq.n	8105b76 <forward_pad_constant+0x8a>
 8105b0c:	6819      	ldr	r1, [r3, #0]
 8105b0e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8105b10:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8105b12:	f9b5 600c 	ldrsh.w	r6, [r5, #12]
 8105b16:	69a3      	ldr	r3, [r4, #24]
 8105b18:	6967      	ldr	r7, [r4, #20]
 8105b1a:	f8d3 8000 	ldr.w	r8, [r3]
 8105b1e:	6892      	ldr	r2, [r2, #8]
 8105b20:	e9d1 0105 	ldrd	r0, r1, [r1, #20]
 8105b24:	e9d0 ec02 	ldrd	lr, ip, [r0, #8]
 8105b28:	fb0e f606 	mul.w	r6, lr, r6
 8105b2c:	6898      	ldr	r0, [r3, #8]
 8105b2e:	6889      	ldr	r1, [r1, #8]
 8105b30:	9606      	str	r6, [sp, #24]
 8105b32:	f9b5 6004 	ldrsh.w	r6, [r5, #4]
 8105b36:	fb0e f606 	mul.w	r6, lr, r6
 8105b3a:	9605      	str	r6, [sp, #20]
 8105b3c:	f9b5 6008 	ldrsh.w	r6, [r5, #8]
 8105b40:	fb0c f606 	mul.w	r6, ip, r6
 8105b44:	9604      	str	r6, [sp, #16]
 8105b46:	f9b5 5000 	ldrsh.w	r5, [r5]
 8105b4a:	fb0c f505 	mul.w	r5, ip, r5
 8105b4e:	9503      	str	r5, [sp, #12]
 8105b50:	68fd      	ldr	r5, [r7, #12]
 8105b52:	9502      	str	r5, [sp, #8]
 8105b54:	687d      	ldr	r5, [r7, #4]
 8105b56:	9501      	str	r5, [sp, #4]
 8105b58:	68e4      	ldr	r4, [r4, #12]
 8105b5a:	68e4      	ldr	r4, [r4, #12]
 8105b5c:	9400      	str	r4, [sp, #0]
 8105b5e:	f3c8 13c6 	ubfx	r3, r8, #7, #7
 8105b62:	f002 f92d 	bl	8107dc0 <forward_lite_pad_constant>
 8105b66:	b008      	add	sp, #32
 8105b68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8105b6c:	685b      	ldr	r3, [r3, #4]
 8105b6e:	deff      	udf	#255	; 0xff
 8105b70:	2300      	movs	r3, #0
 8105b72:	685b      	ldr	r3, [r3, #4]
 8105b74:	deff      	udf	#255	; 0xff
 8105b76:	699b      	ldr	r3, [r3, #24]
 8105b78:	deff      	udf	#255	; 0xff
 8105b7a:	bf00      	nop

08105b7c <forward_pad_edge>:
 8105b7c:	6982      	ldr	r2, [r0, #24]
 8105b7e:	8813      	ldrh	r3, [r2, #0]
 8105b80:	2b00      	cmp	r3, #0
 8105b82:	d035      	beq.n	8105bf0 <forward_pad_edge+0x74>
 8105b84:	6851      	ldr	r1, [r2, #4]
 8105b86:	684a      	ldr	r2, [r1, #4]
 8105b88:	b102      	cbz	r2, 8105b8c <forward_pad_edge+0x10>
 8105b8a:	6812      	ldr	r2, [r2, #0]
 8105b8c:	2b01      	cmp	r3, #1
 8105b8e:	d031      	beq.n	8105bf4 <forward_pad_edge+0x78>
 8105b90:	690b      	ldr	r3, [r1, #16]
 8105b92:	2b00      	cmp	r3, #0
 8105b94:	d031      	beq.n	8105bfa <forward_pad_edge+0x7e>
 8105b96:	b5f0      	push	{r4, r5, r6, r7, lr}
 8105b98:	681b      	ldr	r3, [r3, #0]
 8105b9a:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8105b9c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8105ba0:	f9b5 6008 	ldrsh.w	r6, [r5, #8]
 8105ba4:	6990      	ldr	r0, [r2, #24]
 8105ba6:	6957      	ldr	r7, [r2, #20]
 8105ba8:	6880      	ldr	r0, [r0, #8]
 8105baa:	f8de 200c 	ldr.w	r2, [lr, #12]
 8105bae:	e9d3 c105 	ldrd	ip, r1, [r3, #20]
 8105bb2:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8105bb6:	f9b5 3000 	ldrsh.w	r3, [r5]
 8105bba:	6889      	ldr	r1, [r1, #8]
 8105bbc:	b089      	sub	sp, #36	; 0x24
 8105bbe:	fb04 f606 	mul.w	r6, r4, r6
 8105bc2:	9606      	str	r6, [sp, #24]
 8105bc4:	f8dc c008 	ldr.w	ip, [ip, #8]
 8105bc8:	f9b5 6004 	ldrsh.w	r6, [r5, #4]
 8105bcc:	9403      	str	r4, [sp, #12]
 8105bce:	fb0c f606 	mul.w	r6, ip, r6
 8105bd2:	fb03 f404 	mul.w	r4, r3, r4
 8105bd6:	9605      	str	r6, [sp, #20]
 8105bd8:	9404      	str	r4, [sp, #16]
 8105bda:	68bc      	ldr	r4, [r7, #8]
 8105bdc:	9402      	str	r4, [sp, #8]
 8105bde:	68fc      	ldr	r4, [r7, #12]
 8105be0:	9401      	str	r4, [sp, #4]
 8105be2:	f9b5 400c 	ldrsh.w	r4, [r5, #12]
 8105be6:	9400      	str	r4, [sp, #0]
 8105be8:	f002 f988 	bl	8107efc <forward_lite_pad_edge>
 8105bec:	b009      	add	sp, #36	; 0x24
 8105bee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8105bf0:	685b      	ldr	r3, [r3, #4]
 8105bf2:	deff      	udf	#255	; 0xff
 8105bf4:	2300      	movs	r3, #0
 8105bf6:	685b      	ldr	r3, [r3, #4]
 8105bf8:	deff      	udf	#255	; 0xff
 8105bfa:	699b      	ldr	r3, [r3, #24]
 8105bfc:	deff      	udf	#255	; 0xff
 8105bfe:	bf00      	nop

08105c00 <forward_pad_reflect>:
 8105c00:	6982      	ldr	r2, [r0, #24]
 8105c02:	8813      	ldrh	r3, [r2, #0]
 8105c04:	2b00      	cmp	r3, #0
 8105c06:	d045      	beq.n	8105c94 <forward_pad_reflect+0x94>
 8105c08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8105c0c:	6852      	ldr	r2, [r2, #4]
 8105c0e:	6857      	ldr	r7, [r2, #4]
 8105c10:	b08f      	sub	sp, #60	; 0x3c
 8105c12:	b107      	cbz	r7, 8105c16 <forward_pad_reflect+0x16>
 8105c14:	683f      	ldr	r7, [r7, #0]
 8105c16:	2b01      	cmp	r3, #1
 8105c18:	d03e      	beq.n	8105c98 <forward_pad_reflect+0x98>
 8105c1a:	6913      	ldr	r3, [r2, #16]
 8105c1c:	2b00      	cmp	r3, #0
 8105c1e:	d03e      	beq.n	8105c9e <forward_pad_reflect+0x9e>
 8105c20:	6819      	ldr	r1, [r3, #0]
 8105c22:	68fa      	ldr	r2, [r7, #12]
 8105c24:	e9d2 8302 	ldrd	r8, r3, [r2, #8]
 8105c28:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 8105c2c:	f5b4 6fa0 	cmp.w	r4, #1280	; 0x500
 8105c30:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8105c32:	e9d1 0105 	ldrd	r0, r1, [r1, #20]
 8105c36:	e9d0 5c02 	ldrd	r5, ip, [r0, #8]
 8105c3a:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8105c3e:	f9b4 e004 	ldrsh.w	lr, [r4, #4]
 8105c42:	f9b4 b000 	ldrsh.w	fp, [r4]
 8105c46:	6889      	ldr	r1, [r1, #8]
 8105c48:	e9d7 7005 	ldrd	r7, r0, [r7, #20]
 8105c4c:	fb05 f606 	mul.w	r6, r5, r6
 8105c50:	e9d2 a902 	ldrd	sl, r9, [r2, #8]
 8105c54:	6880      	ldr	r0, [r0, #8]
 8105c56:	bf28      	it	cs
 8105c58:	6912      	ldrcs	r2, [r2, #16]
 8105c5a:	960c      	str	r6, [sp, #48]	; 0x30
 8105c5c:	fb05 f60e 	mul.w	r6, r5, lr
 8105c60:	960b      	str	r6, [sp, #44]	; 0x2c
 8105c62:	fb0c f60b 	mul.w	r6, ip, fp
 8105c66:	960a      	str	r6, [sp, #40]	; 0x28
 8105c68:	f9b4 4008 	ldrsh.w	r4, [r4, #8]
 8105c6c:	f8cd c014 	str.w	ip, [sp, #20]
 8105c70:	e9cd 5e06 	strd	r5, lr, [sp, #24]
 8105c74:	e9cd b408 	strd	fp, r4, [sp, #32]
 8105c78:	68bc      	ldr	r4, [r7, #8]
 8105c7a:	9404      	str	r4, [sp, #16]
 8105c7c:	68fc      	ldr	r4, [r7, #12]
 8105c7e:	bf38      	it	cc
 8105c80:	2201      	movcc	r2, #1
 8105c82:	e9cd a402 	strd	sl, r4, [sp, #8]
 8105c86:	e9cd 8900 	strd	r8, r9, [sp]
 8105c8a:	f002 f9ab 	bl	8107fe4 <forward_lite_pad_reflect>
 8105c8e:	b00f      	add	sp, #60	; 0x3c
 8105c90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8105c94:	685b      	ldr	r3, [r3, #4]
 8105c96:	deff      	udf	#255	; 0xff
 8105c98:	2300      	movs	r3, #0
 8105c9a:	685b      	ldr	r3, [r3, #4]
 8105c9c:	deff      	udf	#255	; 0xff
 8105c9e:	68db      	ldr	r3, [r3, #12]
 8105ca0:	deff      	udf	#255	; 0xff
 8105ca2:	bf00      	nop

08105ca4 <forward_ap_integer_INT8>:
 8105ca4:	6983      	ldr	r3, [r0, #24]
 8105ca6:	881a      	ldrh	r2, [r3, #0]
 8105ca8:	2a00      	cmp	r2, #0
 8105caa:	d074      	beq.n	8105d96 <forward_ap_integer_INT8+0xf2>
 8105cac:	6859      	ldr	r1, [r3, #4]
 8105cae:	684b      	ldr	r3, [r1, #4]
 8105cb0:	b103      	cbz	r3, 8105cb4 <forward_ap_integer_INT8+0x10>
 8105cb2:	681b      	ldr	r3, [r3, #0]
 8105cb4:	2a01      	cmp	r2, #1
 8105cb6:	f000 80e0 	beq.w	8105e7a <forward_ap_integer_INT8+0x1d6>
 8105cba:	690a      	ldr	r2, [r1, #16]
 8105cbc:	2a00      	cmp	r2, #0
 8105cbe:	f000 80df 	beq.w	8105e80 <forward_ap_integer_INT8+0x1dc>
 8105cc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8105cc6:	68de      	ldr	r6, [r3, #12]
 8105cc8:	6811      	ldr	r1, [r2, #0]
 8105cca:	6b07      	ldr	r7, [r0, #48]	; 0x30
 8105ccc:	681c      	ldr	r4, [r3, #0]
 8105cce:	f8d3 b018 	ldr.w	fp, [r3, #24]
 8105cd2:	f8b6 8004 	ldrh.w	r8, [r6, #4]
 8105cd6:	8932      	ldrh	r2, [r6, #8]
 8105cd8:	89b3      	ldrh	r3, [r6, #12]
 8105cda:	8b86      	ldrh	r6, [r0, #28]
 8105cdc:	68cd      	ldr	r5, [r1, #12]
 8105cde:	f8d1 a018 	ldr.w	sl, [r1, #24]
 8105ce2:	f8b5 c008 	ldrh.w	ip, [r5, #8]
 8105ce6:	f8b5 e00c 	ldrh.w	lr, [r5, #12]
 8105cea:	b095      	sub	sp, #84	; 0x54
 8105cec:	960d      	str	r6, [sp, #52]	; 0x34
 8105cee:	8c06      	ldrh	r6, [r0, #32]
 8105cf0:	960e      	str	r6, [sp, #56]	; 0x38
 8105cf2:	88be      	ldrh	r6, [r7, #4]
 8105cf4:	960f      	str	r6, [sp, #60]	; 0x3c
 8105cf6:	883e      	ldrh	r6, [r7, #0]
 8105cf8:	9610      	str	r6, [sp, #64]	; 0x40
 8105cfa:	8c86      	ldrh	r6, [r0, #36]	; 0x24
 8105cfc:	8d00      	ldrh	r0, [r0, #40]	; 0x28
 8105cfe:	9611      	str	r6, [sp, #68]	; 0x44
 8105d00:	9012      	str	r0, [sp, #72]	; 0x48
 8105d02:	680e      	ldr	r6, [r1, #0]
 8105d04:	2c00      	cmp	r4, #0
 8105d06:	d060      	beq.n	8105dca <forward_ap_integer_INT8+0x126>
 8105d08:	f8d4 9004 	ldr.w	r9, [r4, #4]
 8105d0c:	f1b9 0f00 	cmp.w	r9, #0
 8105d10:	d043      	beq.n	8105d9a <forward_ap_integer_INT8+0xf6>
 8105d12:	8865      	ldrh	r5, [r4, #2]
 8105d14:	2d00      	cmp	r5, #0
 8105d16:	d06e      	beq.n	8105df6 <forward_ap_integer_INT8+0x152>
 8105d18:	f8d9 1000 	ldr.w	r1, [r9]
 8105d1c:	ed91 0a00 	vldr	s0, [r1]
 8105d20:	2e00      	cmp	r6, #0
 8105d22:	d06c      	beq.n	8105dfe <forward_ap_integer_INT8+0x15a>
 8105d24:	6877      	ldr	r7, [r6, #4]
 8105d26:	2f00      	cmp	r7, #0
 8105d28:	d03e      	beq.n	8105da8 <forward_ap_integer_INT8+0x104>
 8105d2a:	8871      	ldrh	r1, [r6, #2]
 8105d2c:	9113      	str	r1, [sp, #76]	; 0x4c
 8105d2e:	2900      	cmp	r1, #0
 8105d30:	d053      	beq.n	8105dda <forward_ap_integer_INT8+0x136>
 8105d32:	683d      	ldr	r5, [r7, #0]
 8105d34:	f8db 0008 	ldr.w	r0, [fp, #8]
 8105d38:	f8da 1008 	ldr.w	r1, [sl, #8]
 8105d3c:	edd5 0a00 	vldr	s1, [r5]
 8105d40:	f1b9 0f00 	cmp.w	r9, #0
 8105d44:	d055      	beq.n	8105df2 <forward_ap_integer_INT8+0x14e>
 8105d46:	8864      	ldrh	r4, [r4, #2]
 8105d48:	2c00      	cmp	r4, #0
 8105d4a:	d039      	beq.n	8105dc0 <forward_ap_integer_INT8+0x11c>
 8105d4c:	f8d9 4004 	ldr.w	r4, [r9, #4]
 8105d50:	f994 4000 	ldrsb.w	r4, [r4]
 8105d54:	2e00      	cmp	r6, #0
 8105d56:	d036      	beq.n	8105dc6 <forward_ap_integer_INT8+0x122>
 8105d58:	2f00      	cmp	r7, #0
 8105d5a:	d034      	beq.n	8105dc6 <forward_ap_integer_INT8+0x122>
 8105d5c:	8875      	ldrh	r5, [r6, #2]
 8105d5e:	9513      	str	r5, [sp, #76]	; 0x4c
 8105d60:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8105d62:	b115      	cbz	r5, 8105d6a <forward_ap_integer_INT8+0xc6>
 8105d64:	687d      	ldr	r5, [r7, #4]
 8105d66:	f995 5000 	ldrsb.w	r5, [r5]
 8105d6a:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
 8105d6e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8105d70:	9406      	str	r4, [sp, #24]
 8105d72:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8105d74:	9405      	str	r4, [sp, #20]
 8105d76:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8105d78:	9404      	str	r4, [sp, #16]
 8105d7a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8105d7c:	9403      	str	r4, [sp, #12]
 8105d7e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8105d80:	9402      	str	r4, [sp, #8]
 8105d82:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8105d84:	e9cd ce07 	strd	ip, lr, [sp, #28]
 8105d88:	e9cd 8400 	strd	r8, r4, [sp]
 8105d8c:	f000 fb92 	bl	81064b4 <forward_lite_avepool_is8os8>
 8105d90:	b015      	add	sp, #84	; 0x54
 8105d92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8105d96:	6853      	ldr	r3, [r2, #4]
 8105d98:	deff      	udf	#255	; 0xff
 8105d9a:	2e00      	cmp	r6, #0
 8105d9c:	d039      	beq.n	8105e12 <forward_ap_integer_INT8+0x16e>
 8105d9e:	6877      	ldr	r7, [r6, #4]
 8105da0:	ed9f 0a38 	vldr	s0, [pc, #224]	; 8105e84 <forward_ap_integer_INT8+0x1e0>
 8105da4:	2f00      	cmp	r7, #0
 8105da6:	d1c0      	bne.n	8105d2a <forward_ap_integer_INT8+0x86>
 8105da8:	f8db 0008 	ldr.w	r0, [fp, #8]
 8105dac:	f8da 1008 	ldr.w	r1, [sl, #8]
 8105db0:	f1b9 0f00 	cmp.w	r9, #0
 8105db4:	d05c      	beq.n	8105e70 <forward_ap_integer_INT8+0x1cc>
 8105db6:	8864      	ldrh	r4, [r4, #2]
 8105db8:	2c00      	cmp	r4, #0
 8105dba:	d152      	bne.n	8105e62 <forward_ap_integer_INT8+0x1be>
 8105dbc:	eddf 0a31 	vldr	s1, [pc, #196]	; 8105e84 <forward_ap_integer_INT8+0x1e0>
 8105dc0:	2400      	movs	r4, #0
 8105dc2:	2f00      	cmp	r7, #0
 8105dc4:	d1ca      	bne.n	8105d5c <forward_ap_integer_INT8+0xb8>
 8105dc6:	2500      	movs	r5, #0
 8105dc8:	e7cf      	b.n	8105d6a <forward_ap_integer_INT8+0xc6>
 8105dca:	b316      	cbz	r6, 8105e12 <forward_ap_integer_INT8+0x16e>
 8105dcc:	6877      	ldr	r7, [r6, #4]
 8105dce:	b35f      	cbz	r7, 8105e28 <forward_ap_integer_INT8+0x184>
 8105dd0:	8871      	ldrh	r1, [r6, #2]
 8105dd2:	9113      	str	r1, [sp, #76]	; 0x4c
 8105dd4:	bb99      	cbnz	r1, 8105e3e <forward_ap_integer_INT8+0x19a>
 8105dd6:	ed9f 0a2b 	vldr	s0, [pc, #172]	; 8105e84 <forward_ap_integer_INT8+0x1e0>
 8105dda:	f8db 0008 	ldr.w	r0, [fp, #8]
 8105dde:	f8da 1008 	ldr.w	r1, [sl, #8]
 8105de2:	b194      	cbz	r4, 8105e0a <forward_ap_integer_INT8+0x166>
 8105de4:	f8d4 9004 	ldr.w	r9, [r4, #4]
 8105de8:	eddf 0a26 	vldr	s1, [pc, #152]	; 8105e84 <forward_ap_integer_INT8+0x1e0>
 8105dec:	f1b9 0f00 	cmp.w	r9, #0
 8105df0:	d1a9      	bne.n	8105d46 <forward_ap_integer_INT8+0xa2>
 8105df2:	464c      	mov	r4, r9
 8105df4:	e7b4      	b.n	8105d60 <forward_ap_integer_INT8+0xbc>
 8105df6:	ed9f 0a23 	vldr	s0, [pc, #140]	; 8105e84 <forward_ap_integer_INT8+0x1e0>
 8105dfa:	2e00      	cmp	r6, #0
 8105dfc:	d192      	bne.n	8105d24 <forward_ap_integer_INT8+0x80>
 8105dfe:	f8db 0008 	ldr.w	r0, [fp, #8]
 8105e02:	f8da 1008 	ldr.w	r1, [sl, #8]
 8105e06:	bb25      	cbnz	r5, 8105e52 <forward_ap_integer_INT8+0x1ae>
 8105e08:	462c      	mov	r4, r5
 8105e0a:	eddf 0a1e 	vldr	s1, [pc, #120]	; 8105e84 <forward_ap_integer_INT8+0x1e0>
 8105e0e:	4625      	mov	r5, r4
 8105e10:	e7ab      	b.n	8105d6a <forward_ap_integer_INT8+0xc6>
 8105e12:	ed9f 0a1c 	vldr	s0, [pc, #112]	; 8105e84 <forward_ap_integer_INT8+0x1e0>
 8105e16:	f8db 0008 	ldr.w	r0, [fp, #8]
 8105e1a:	f8da 1008 	ldr.w	r1, [sl, #8]
 8105e1e:	4634      	mov	r4, r6
 8105e20:	eef0 0a40 	vmov.f32	s1, s0
 8105e24:	4635      	mov	r5, r6
 8105e26:	e7a0      	b.n	8105d6a <forward_ap_integer_INT8+0xc6>
 8105e28:	ed9f 0a16 	vldr	s0, [pc, #88]	; 8105e84 <forward_ap_integer_INT8+0x1e0>
 8105e2c:	f8db 0008 	ldr.w	r0, [fp, #8]
 8105e30:	f8da 1008 	ldr.w	r1, [sl, #8]
 8105e34:	463c      	mov	r4, r7
 8105e36:	eef0 0a40 	vmov.f32	s1, s0
 8105e3a:	463d      	mov	r5, r7
 8105e3c:	e795      	b.n	8105d6a <forward_ap_integer_INT8+0xc6>
 8105e3e:	683d      	ldr	r5, [r7, #0]
 8105e40:	f8db 0008 	ldr.w	r0, [fp, #8]
 8105e44:	f8da 1008 	ldr.w	r1, [sl, #8]
 8105e48:	ed9f 0a0e 	vldr	s0, [pc, #56]	; 8105e84 <forward_ap_integer_INT8+0x1e0>
 8105e4c:	edd5 0a00 	vldr	s1, [r5]
 8105e50:	e788      	b.n	8105d64 <forward_ap_integer_INT8+0xc0>
 8105e52:	f8d9 4004 	ldr.w	r4, [r9, #4]
 8105e56:	eddf 0a0b 	vldr	s1, [pc, #44]	; 8105e84 <forward_ap_integer_INT8+0x1e0>
 8105e5a:	f994 4000 	ldrsb.w	r4, [r4]
 8105e5e:	4635      	mov	r5, r6
 8105e60:	e783      	b.n	8105d6a <forward_ap_integer_INT8+0xc6>
 8105e62:	f8d9 4004 	ldr.w	r4, [r9, #4]
 8105e66:	eddf 0a07 	vldr	s1, [pc, #28]	; 8105e84 <forward_ap_integer_INT8+0x1e0>
 8105e6a:	f994 4000 	ldrsb.w	r4, [r4]
 8105e6e:	e7aa      	b.n	8105dc6 <forward_ap_integer_INT8+0x122>
 8105e70:	eddf 0a04 	vldr	s1, [pc, #16]	; 8105e84 <forward_ap_integer_INT8+0x1e0>
 8105e74:	464c      	mov	r4, r9
 8105e76:	464d      	mov	r5, r9
 8105e78:	e777      	b.n	8105d6a <forward_ap_integer_INT8+0xc6>
 8105e7a:	2300      	movs	r3, #0
 8105e7c:	685b      	ldr	r3, [r3, #4]
 8105e7e:	deff      	udf	#255	; 0xff
 8105e80:	68d3      	ldr	r3, [r2, #12]
 8105e82:	deff      	udf	#255	; 0xff
 8105e84:	00000000 	.word	0x00000000

08105e88 <forward_pw_sssa8_ch>:
 8105e88:	6982      	ldr	r2, [r0, #24]
 8105e8a:	8813      	ldrh	r3, [r2, #0]
 8105e8c:	2b00      	cmp	r3, #0
 8105e8e:	f000 80a4 	beq.w	8105fda <forward_pw_sssa8_ch+0x152>
 8105e92:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8105e96:	6854      	ldr	r4, [r2, #4]
 8105e98:	6861      	ldr	r1, [r4, #4]
 8105e9a:	b099      	sub	sp, #100	; 0x64
 8105e9c:	b101      	cbz	r1, 8105ea0 <forward_pw_sssa8_ch+0x18>
 8105e9e:	6809      	ldr	r1, [r1, #0]
 8105ea0:	2b01      	cmp	r3, #1
 8105ea2:	f000 80b3 	beq.w	810600c <forward_pw_sssa8_ch+0x184>
 8105ea6:	6922      	ldr	r2, [r4, #16]
 8105ea8:	b102      	cbz	r2, 8105eac <forward_pw_sssa8_ch+0x24>
 8105eaa:	6812      	ldr	r2, [r2, #0]
 8105eac:	2b02      	cmp	r3, #2
 8105eae:	f000 80a8 	beq.w	8106002 <forward_pw_sssa8_ch+0x17a>
 8105eb2:	69e5      	ldr	r5, [r4, #28]
 8105eb4:	2d00      	cmp	r5, #0
 8105eb6:	f000 809c 	beq.w	8105ff2 <forward_pw_sssa8_ch+0x16a>
 8105eba:	8b26      	ldrh	r6, [r4, #24]
 8105ebc:	f8d5 e000 	ldr.w	lr, [r5]
 8105ec0:	2e01      	cmp	r6, #1
 8105ec2:	f240 8098 	bls.w	8105ff6 <forward_pw_sssa8_ch+0x16e>
 8105ec6:	686d      	ldr	r5, [r5, #4]
 8105ec8:	2b03      	cmp	r3, #3
 8105eca:	f000 80a2 	beq.w	8106012 <forward_pw_sssa8_ch+0x18a>
 8105ece:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8105ed0:	2b00      	cmp	r3, #0
 8105ed2:	f000 8092 	beq.w	8105ffa <forward_pw_sssa8_ch+0x172>
 8105ed6:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8105ed8:	b104      	cbz	r4, 8105edc <forward_pw_sssa8_ch+0x54>
 8105eda:	685a      	ldr	r2, [r3, #4]
 8105edc:	681c      	ldr	r4, [r3, #0]
 8105ede:	69ab      	ldr	r3, [r5, #24]
 8105ee0:	f8d4 c018 	ldr.w	ip, [r4, #24]
 8105ee4:	689b      	ldr	r3, [r3, #8]
 8105ee6:	68d4      	ldr	r4, [r2, #12]
 8105ee8:	9316      	str	r3, [sp, #88]	; 0x58
 8105eea:	68cb      	ldr	r3, [r1, #12]
 8105eec:	88a4      	ldrh	r4, [r4, #4]
 8105eee:	9413      	str	r4, [sp, #76]	; 0x4c
 8105ef0:	889c      	ldrh	r4, [r3, #4]
 8105ef2:	9412      	str	r4, [sp, #72]	; 0x48
 8105ef4:	e9d3 3b02 	ldrd	r3, fp, [r3, #8]
 8105ef8:	8d84      	ldrh	r4, [r0, #44]	; 0x2c
 8105efa:	680d      	ldr	r5, [r1, #0]
 8105efc:	9415      	str	r4, [sp, #84]	; 0x54
 8105efe:	f8dc 4008 	ldr.w	r4, [ip, #8]
 8105f02:	9314      	str	r3, [sp, #80]	; 0x50
 8105f04:	9417      	str	r4, [sp, #92]	; 0x5c
 8105f06:	8d03      	ldrh	r3, [r0, #40]	; 0x28
 8105f08:	6814      	ldr	r4, [r2, #0]
 8105f0a:	f8de 6000 	ldr.w	r6, [lr]
 8105f0e:	2d00      	cmp	r5, #0
 8105f10:	d068      	beq.n	8105fe4 <forward_pw_sssa8_ch+0x15c>
 8105f12:	686f      	ldr	r7, [r5, #4]
 8105f14:	2f00      	cmp	r7, #0
 8105f16:	d065      	beq.n	8105fe4 <forward_pw_sssa8_ch+0x15c>
 8105f18:	f8b5 8002 	ldrh.w	r8, [r5, #2]
 8105f1c:	f1b8 0f00 	cmp.w	r8, #0
 8105f20:	d060      	beq.n	8105fe4 <forward_pw_sssa8_ch+0x15c>
 8105f22:	683f      	ldr	r7, [r7, #0]
 8105f24:	ed97 0a00 	vldr	s0, [r7]
 8105f28:	2c00      	cmp	r4, #0
 8105f2a:	d058      	beq.n	8105fde <forward_pw_sssa8_ch+0x156>
 8105f2c:	6867      	ldr	r7, [r4, #4]
 8105f2e:	2f00      	cmp	r7, #0
 8105f30:	d055      	beq.n	8105fde <forward_pw_sssa8_ch+0x156>
 8105f32:	f8b4 8002 	ldrh.w	r8, [r4, #2]
 8105f36:	f1b8 0f00 	cmp.w	r8, #0
 8105f3a:	d050      	beq.n	8105fde <forward_pw_sssa8_ch+0x156>
 8105f3c:	683f      	ldr	r7, [r7, #0]
 8105f3e:	edd7 0a00 	vldr	s1, [r7]
 8105f42:	698f      	ldr	r7, [r1, #24]
 8105f44:	6992      	ldr	r2, [r2, #24]
 8105f46:	f8de 1018 	ldr.w	r1, [lr, #24]
 8105f4a:	f890 9041 	ldrb.w	r9, [r0, #65]	; 0x41
 8105f4e:	f8d2 a008 	ldr.w	sl, [r2, #8]
 8105f52:	68bf      	ldr	r7, [r7, #8]
 8105f54:	f8d1 8008 	ldr.w	r8, [r1, #8]
 8105f58:	b116      	cbz	r6, 8105f60 <forward_pw_sssa8_ch+0xd8>
 8105f5a:	6876      	ldr	r6, [r6, #4]
 8105f5c:	b106      	cbz	r6, 8105f60 <forward_pw_sssa8_ch+0xd8>
 8105f5e:	6836      	ldr	r6, [r6, #0]
 8105f60:	b13d      	cbz	r5, 8105f72 <forward_pw_sssa8_ch+0xea>
 8105f62:	6869      	ldr	r1, [r5, #4]
 8105f64:	2900      	cmp	r1, #0
 8105f66:	d040      	beq.n	8105fea <forward_pw_sssa8_ch+0x162>
 8105f68:	886d      	ldrh	r5, [r5, #2]
 8105f6a:	b115      	cbz	r5, 8105f72 <forward_pw_sssa8_ch+0xea>
 8105f6c:	6849      	ldr	r1, [r1, #4]
 8105f6e:	f991 5000 	ldrsb.w	r5, [r1]
 8105f72:	b13c      	cbz	r4, 8105f84 <forward_pw_sssa8_ch+0xfc>
 8105f74:	6861      	ldr	r1, [r4, #4]
 8105f76:	2900      	cmp	r1, #0
 8105f78:	d039      	beq.n	8105fee <forward_pw_sssa8_ch+0x166>
 8105f7a:	8864      	ldrh	r4, [r4, #2]
 8105f7c:	b114      	cbz	r4, 8105f84 <forward_pw_sssa8_ch+0xfc>
 8105f7e:	6849      	ldr	r1, [r1, #4]
 8105f80:	f991 4000 	ldrsb.w	r4, [r1]
 8105f84:	9311      	str	r3, [sp, #68]	; 0x44
 8105f86:	e9dc 0100 	ldrd	r0, r1, [ip]
 8105f8a:	edcd 0a10 	vstr	s1, [sp, #64]	; 0x40
 8105f8e:	ed8d 0a0f 	vstr	s0, [sp, #60]	; 0x3c
 8105f92:	f004 ff47 	bl	810ae24 <ai_array_get_byte_size>
 8105f96:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8105f98:	eddd 0a10 	vldr	s1, [sp, #64]	; 0x40
 8105f9c:	ed9d 0a0f 	vldr	s0, [sp, #60]	; 0x3c
 8105fa0:	f8bd 1050 	ldrh.w	r1, [sp, #80]	; 0x50
 8105fa4:	9505      	str	r5, [sp, #20]
 8105fa6:	e9cd 030b 	strd	r0, r3, [sp, #44]	; 0x2c
 8105faa:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8105fac:	9304      	str	r3, [sp, #16]
 8105fae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8105fb0:	e9cd 8302 	strd	r8, r3, [sp, #8]
 8105fb4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8105fb6:	9301      	str	r3, [sp, #4]
 8105fb8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8105fba:	9300      	str	r3, [sp, #0]
 8105fbc:	e9cd 4606 	strd	r4, r6, [sp, #24]
 8105fc0:	e9cd 9a08 	strd	r9, sl, [sp, #32]
 8105fc4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8105fc6:	fa1f f28b 	uxth.w	r2, fp
 8105fca:	4638      	mov	r0, r7
 8105fcc:	2401      	movs	r4, #1
 8105fce:	940a      	str	r4, [sp, #40]	; 0x28
 8105fd0:	f001 f9e6 	bl	81073a0 <forward_lite_pw_sssa8_ch>
 8105fd4:	b019      	add	sp, #100	; 0x64
 8105fd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8105fda:	685b      	ldr	r3, [r3, #4]
 8105fdc:	deff      	udf	#255	; 0xff
 8105fde:	eddf 0a0e 	vldr	s1, [pc, #56]	; 8106018 <forward_pw_sssa8_ch+0x190>
 8105fe2:	e7ae      	b.n	8105f42 <forward_pw_sssa8_ch+0xba>
 8105fe4:	ed9f 0a0c 	vldr	s0, [pc, #48]	; 8106018 <forward_pw_sssa8_ch+0x190>
 8105fe8:	e79e      	b.n	8105f28 <forward_pw_sssa8_ch+0xa0>
 8105fea:	460d      	mov	r5, r1
 8105fec:	e7c1      	b.n	8105f72 <forward_pw_sssa8_ch+0xea>
 8105fee:	460c      	mov	r4, r1
 8105ff0:	e7c8      	b.n	8105f84 <forward_pw_sssa8_ch+0xfc>
 8105ff2:	46ae      	mov	lr, r5
 8105ff4:	e768      	b.n	8105ec8 <forward_pw_sssa8_ch+0x40>
 8105ff6:	2500      	movs	r5, #0
 8105ff8:	e766      	b.n	8105ec8 <forward_pw_sssa8_ch+0x40>
 8105ffa:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8105ffc:	b922      	cbnz	r2, 8106008 <forward_pw_sssa8_ch+0x180>
 8105ffe:	6993      	ldr	r3, [r2, #24]
 8106000:	deff      	udf	#255	; 0xff
 8106002:	2300      	movs	r3, #0
 8106004:	685b      	ldr	r3, [r3, #4]
 8106006:	deff      	udf	#255	; 0xff
 8106008:	68db      	ldr	r3, [r3, #12]
 810600a:	deff      	udf	#255	; 0xff
 810600c:	2300      	movs	r3, #0
 810600e:	685b      	ldr	r3, [r3, #4]
 8106010:	deff      	udf	#255	; 0xff
 8106012:	2300      	movs	r3, #0
 8106014:	685b      	ldr	r3, [r3, #4]
 8106016:	deff      	udf	#255	; 0xff
 8106018:	00000000 	.word	0x00000000

0810601c <forward_eltwise_integer_INT8>:
 810601c:	6982      	ldr	r2, [r0, #24]
 810601e:	8813      	ldrh	r3, [r2, #0]
 8106020:	2b00      	cmp	r3, #0
 8106022:	f000 8104 	beq.w	810622e <forward_eltwise_integer_INT8+0x212>
 8106026:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 810602a:	ed2d 8b02 	vpush	{d8}
 810602e:	6852      	ldr	r2, [r2, #4]
 8106030:	6854      	ldr	r4, [r2, #4]
 8106032:	b0ab      	sub	sp, #172	; 0xac
 8106034:	2c00      	cmp	r4, #0
 8106036:	f000 8109 	beq.w	810624c <forward_eltwise_integer_INT8+0x230>
 810603a:	e9d4 5400 	ldrd	r5, r4, [r4]
 810603e:	2b01      	cmp	r3, #1
 8106040:	f000 81c6 	beq.w	81063d0 <forward_eltwise_integer_INT8+0x3b4>
 8106044:	6916      	ldr	r6, [r2, #16]
 8106046:	b106      	cbz	r6, 810604a <forward_eltwise_integer_INT8+0x2e>
 8106048:	6836      	ldr	r6, [r6, #0]
 810604a:	e9d0 7307 	ldrd	r7, r3, [r0, #28]
 810604e:	68a0      	ldr	r0, [r4, #8]
 8106050:	930d      	str	r3, [sp, #52]	; 0x34
 8106052:	68ab      	ldr	r3, [r5, #8]
 8106054:	ea83 0200 	eor.w	r2, r3, r0
 8106058:	f032 02ff 	bics.w	r2, r2, #255	; 0xff
 810605c:	f105 0108 	add.w	r1, r5, #8
 8106060:	f104 0b08 	add.w	fp, r4, #8
 8106064:	f3c3 2c17 	ubfx	ip, r3, #8, #24
 8106068:	d10e      	bne.n	8106088 <forward_eltwise_integer_INT8+0x6c>
 810606a:	4663      	mov	r3, ip
 810606c:	4686      	mov	lr, r0
 810606e:	2b00      	cmp	r3, #0
 8106070:	f000 80e8 	beq.w	8106244 <forward_eltwise_integer_INT8+0x228>
 8106074:	3b01      	subs	r3, #1
 8106076:	68e2      	ldr	r2, [r4, #12]
 8106078:	68e8      	ldr	r0, [r5, #12]
 810607a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 810607e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8106082:	4290      	cmp	r0, r2
 8106084:	d0f3      	beq.n	810606e <forward_eltwise_integer_INT8+0x52>
 8106086:	4670      	mov	r0, lr
 8106088:	f04f 0900 	mov.w	r9, #0
 810608c:	f10c 33ff 	add.w	r3, ip, #4294967295	; 0xffffffff
 8106090:	009b      	lsls	r3, r3, #2
 8106092:	e006      	b.n	81060a2 <forward_eltwise_integer_INT8+0x86>
 8106094:	68ea      	ldr	r2, [r5, #12]
 8106096:	58d2      	ldr	r2, [r2, r3]
 8106098:	2a01      	cmp	r2, #1
 810609a:	f1a3 0304 	sub.w	r3, r3, #4
 810609e:	f040 80ce 	bne.w	810623e <forward_eltwise_integer_INT8+0x222>
 81060a2:	1d1a      	adds	r2, r3, #4
 81060a4:	d1f6      	bne.n	8106094 <forward_eltwise_integer_INT8+0x78>
 81060a6:	f04f 0a01 	mov.w	sl, #1
 81060aa:	f3c0 2017 	ubfx	r0, r0, #8, #24
 81060ae:	b140      	cbz	r0, 81060c2 <forward_eltwise_integer_INT8+0xa6>
 81060b0:	68e3      	ldr	r3, [r4, #12]
 81060b2:	3801      	subs	r0, #1
 81060b4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 81060b8:	2b01      	cmp	r3, #1
 81060ba:	d0f8      	beq.n	81060ae <forward_eltwise_integer_INT8+0x92>
 81060bc:	2300      	movs	r3, #0
 81060be:	930a      	str	r3, [sp, #40]	; 0x28
 81060c0:	e001      	b.n	81060c6 <forward_eltwise_integer_INT8+0xaa>
 81060c2:	2301      	movs	r3, #1
 81060c4:	930a      	str	r3, [sp, #40]	; 0x28
 81060c6:	6972      	ldr	r2, [r6, #20]
 81060c8:	696b      	ldr	r3, [r5, #20]
 81060ca:	f8d2 8004 	ldr.w	r8, [r2, #4]
 81060ce:	685b      	ldr	r3, [r3, #4]
 81060d0:	930c      	str	r3, [sp, #48]	; 0x30
 81060d2:	aa1b      	add	r2, sp, #108	; 0x6c
 81060d4:	2000      	movs	r0, #0
 81060d6:	9216      	str	r2, [sp, #88]	; 0x58
 81060d8:	f240 5201 	movw	r2, #1281	; 0x501
 81060dc:	e9cd 001b 	strd	r0, r0, [sp, #108]	; 0x6c
 81060e0:	e9cd 001d 	strd	r0, r0, [sp, #116]	; 0x74
 81060e4:	901f      	str	r0, [sp, #124]	; 0x7c
 81060e6:	9215      	str	r2, [sp, #84]	; 0x54
 81060e8:	a815      	add	r0, sp, #84	; 0x54
 81060ea:	465a      	mov	r2, fp
 81060ec:	910b      	str	r1, [sp, #44]	; 0x2c
 81060ee:	f004 fec7 	bl	810ae80 <core_get_broadcasted_shape>
 81060f2:	f8d5 c000 	ldr.w	ip, [r5]
 81060f6:	69ab      	ldr	r3, [r5, #24]
 81060f8:	9309      	str	r3, [sp, #36]	; 0x24
 81060fa:	6832      	ldr	r2, [r6, #0]
 81060fc:	6820      	ldr	r0, [r4, #0]
 81060fe:	e9dd 130b 	ldrd	r1, r3, [sp, #44]	; 0x2c
 8106102:	f1bc 0f00 	cmp.w	ip, #0
 8106106:	d018      	beq.n	810613a <forward_eltwise_integer_INT8+0x11e>
 8106108:	f8dc 5004 	ldr.w	r5, [ip, #4]
 810610c:	b1ad      	cbz	r5, 810613a <forward_eltwise_integer_INT8+0x11e>
 810610e:	f8bc e002 	ldrh.w	lr, [ip, #2]
 8106112:	f1be 0f00 	cmp.w	lr, #0
 8106116:	d010      	beq.n	810613a <forward_eltwise_integer_INT8+0x11e>
 8106118:	682d      	ldr	r5, [r5, #0]
 810611a:	682d      	ldr	r5, [r5, #0]
 810611c:	950f      	str	r5, [sp, #60]	; 0x3c
 810611e:	b980      	cbnz	r0, 8106142 <forward_eltwise_integer_INT8+0x126>
 8106120:	2500      	movs	r5, #0
 8106122:	9510      	str	r5, [sp, #64]	; 0x40
 8106124:	b1d2      	cbz	r2, 810615c <forward_eltwise_integer_INT8+0x140>
 8106126:	6855      	ldr	r5, [r2, #4]
 8106128:	b1c5      	cbz	r5, 810615c <forward_eltwise_integer_INT8+0x140>
 810612a:	f8b2 e002 	ldrh.w	lr, [r2, #2]
 810612e:	f1be 0f00 	cmp.w	lr, #0
 8106132:	d013      	beq.n	810615c <forward_eltwise_integer_INT8+0x140>
 8106134:	682d      	ldr	r5, [r5, #0]
 8106136:	682d      	ldr	r5, [r5, #0]
 8106138:	e011      	b.n	810615e <forward_eltwise_integer_INT8+0x142>
 810613a:	2500      	movs	r5, #0
 810613c:	950f      	str	r5, [sp, #60]	; 0x3c
 810613e:	2800      	cmp	r0, #0
 8106140:	d0ee      	beq.n	8106120 <forward_eltwise_integer_INT8+0x104>
 8106142:	6845      	ldr	r5, [r0, #4]
 8106144:	2d00      	cmp	r5, #0
 8106146:	d0eb      	beq.n	8106120 <forward_eltwise_integer_INT8+0x104>
 8106148:	f8b0 e002 	ldrh.w	lr, [r0, #2]
 810614c:	f1be 0f00 	cmp.w	lr, #0
 8106150:	d0e6      	beq.n	8106120 <forward_eltwise_integer_INT8+0x104>
 8106152:	682d      	ldr	r5, [r5, #0]
 8106154:	682d      	ldr	r5, [r5, #0]
 8106156:	9510      	str	r5, [sp, #64]	; 0x40
 8106158:	2a00      	cmp	r2, #0
 810615a:	d1e4      	bne.n	8106126 <forward_eltwise_integer_INT8+0x10a>
 810615c:	2500      	movs	r5, #0
 810615e:	69b6      	ldr	r6, [r6, #24]
 8106160:	9511      	str	r5, [sp, #68]	; 0x44
 8106162:	69a5      	ldr	r5, [r4, #24]
 8106164:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8106166:	68ad      	ldr	r5, [r5, #8]
 8106168:	68a4      	ldr	r4, [r4, #8]
 810616a:	68b6      	ldr	r6, [r6, #8]
 810616c:	f1bc 0f00 	cmp.w	ip, #0
 8106170:	d00d      	beq.n	810618e <forward_eltwise_integer_INT8+0x172>
 8106172:	f8dc e004 	ldr.w	lr, [ip, #4]
 8106176:	f1be 0f00 	cmp.w	lr, #0
 810617a:	d05c      	beq.n	8106236 <forward_eltwise_integer_INT8+0x21a>
 810617c:	f8bc c002 	ldrh.w	ip, [ip, #2]
 8106180:	f1bc 0f00 	cmp.w	ip, #0
 8106184:	d003      	beq.n	810618e <forward_eltwise_integer_INT8+0x172>
 8106186:	f8de c004 	ldr.w	ip, [lr, #4]
 810618a:	f99c c000 	ldrsb.w	ip, [ip]
 810618e:	f88d c039 	strb.w	ip, [sp, #57]	; 0x39
 8106192:	b150      	cbz	r0, 81061aa <forward_eltwise_integer_INT8+0x18e>
 8106194:	f8d0 c004 	ldr.w	ip, [r0, #4]
 8106198:	f1bc 0f00 	cmp.w	ip, #0
 810619c:	d049      	beq.n	8106232 <forward_eltwise_integer_INT8+0x216>
 810619e:	8840      	ldrh	r0, [r0, #2]
 81061a0:	b118      	cbz	r0, 81061aa <forward_eltwise_integer_INT8+0x18e>
 81061a2:	f8dc 0004 	ldr.w	r0, [ip, #4]
 81061a6:	f990 0000 	ldrsb.w	r0, [r0]
 81061aa:	f88d 003a 	strb.w	r0, [sp, #58]	; 0x3a
 81061ae:	b13a      	cbz	r2, 81061c0 <forward_eltwise_integer_INT8+0x1a4>
 81061b0:	6850      	ldr	r0, [r2, #4]
 81061b2:	2800      	cmp	r0, #0
 81061b4:	d041      	beq.n	810623a <forward_eltwise_integer_INT8+0x21e>
 81061b6:	8852      	ldrh	r2, [r2, #2]
 81061b8:	b112      	cbz	r2, 81061c0 <forward_eltwise_integer_INT8+0x1a4>
 81061ba:	6842      	ldr	r2, [r0, #4]
 81061bc:	f992 2000 	ldrsb.w	r2, [r2]
 81061c0:	f88d 203b 	strb.w	r2, [sp, #59]	; 0x3b
 81061c4:	f1b9 0f00 	cmp.w	r9, #0
 81061c8:	d12c      	bne.n	8106224 <forward_eltwise_integer_INT8+0x208>
 81061ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 81061cc:	4552      	cmp	r2, sl
 81061ce:	d03f      	beq.n	8106250 <forward_eltwise_integer_INT8+0x234>
 81061d0:	f1ca 0702 	rsb	r7, sl, #2
 81061d4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 81061d6:	0a1b      	lsrs	r3, r3, #8
 81061d8:	f000 80f8 	beq.w	81063cc <forward_eltwise_integer_INT8+0x3b0>
 81061dc:	9816      	ldr	r0, [sp, #88]	; 0x58
 81061de:	eb00 0283 	add.w	r2, r0, r3, lsl #2
 81061e2:	2301      	movs	r3, #1
 81061e4:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 81061e8:	4290      	cmp	r0, r2
 81061ea:	fb01 f303 	mul.w	r3, r1, r3
 81061ee:	d1f9      	bne.n	81061e4 <forward_eltwise_integer_INT8+0x1c8>
 81061f0:	4621      	mov	r1, r4
 81061f2:	f10d 043b 	add.w	r4, sp, #59	; 0x3b
 81061f6:	9405      	str	r4, [sp, #20]
 81061f8:	ac11      	add	r4, sp, #68	; 0x44
 81061fa:	9404      	str	r4, [sp, #16]
 81061fc:	f10d 043a 	add.w	r4, sp, #58	; 0x3a
 8106200:	9403      	str	r4, [sp, #12]
 8106202:	ac10      	add	r4, sp, #64	; 0x40
 8106204:	9402      	str	r4, [sp, #8]
 8106206:	f10d 0439 	add.w	r4, sp, #57	; 0x39
 810620a:	9401      	str	r4, [sp, #4]
 810620c:	ac0f      	add	r4, sp, #60	; 0x3c
 810620e:	9400      	str	r4, [sp, #0]
 8106210:	9706      	str	r7, [sp, #24]
 8106212:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8106214:	462a      	mov	r2, r5
 8106216:	4630      	mov	r0, r6
 8106218:	47a0      	blx	r4
 810621a:	b02b      	add	sp, #172	; 0xac
 810621c:	ecbd 8b02 	vpop	{d8}
 8106220:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8106224:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8106226:	4553      	cmp	r3, sl
 8106228:	d1d2      	bne.n	81061d0 <forward_eltwise_integer_INT8+0x1b4>
 810622a:	2700      	movs	r7, #0
 810622c:	e7d2      	b.n	81061d4 <forward_eltwise_integer_INT8+0x1b8>
 810622e:	685b      	ldr	r3, [r3, #4]
 8106230:	deff      	udf	#255	; 0xff
 8106232:	4660      	mov	r0, ip
 8106234:	e7b9      	b.n	81061aa <forward_eltwise_integer_INT8+0x18e>
 8106236:	46f4      	mov	ip, lr
 8106238:	e7a9      	b.n	810618e <forward_eltwise_integer_INT8+0x172>
 810623a:	4602      	mov	r2, r0
 810623c:	e7c0      	b.n	81061c0 <forward_eltwise_integer_INT8+0x1a4>
 810623e:	f04f 0a00 	mov.w	sl, #0
 8106242:	e732      	b.n	81060aa <forward_eltwise_integer_INT8+0x8e>
 8106244:	4670      	mov	r0, lr
 8106246:	f04f 0901 	mov.w	r9, #1
 810624a:	e71f      	b.n	810608c <forward_eltwise_integer_INT8+0x70>
 810624c:	4625      	mov	r5, r4
 810624e:	e6f6      	b.n	810603e <forward_eltwise_integer_INT8+0x22>
 8106250:	aa20      	add	r2, sp, #128	; 0x80
 8106252:	9218      	str	r2, [sp, #96]	; 0x60
 8106254:	aa25      	add	r2, sp, #148	; 0x94
 8106256:	921a      	str	r2, [sp, #104]	; 0x68
 8106258:	f240 5202 	movw	r2, #1282	; 0x502
 810625c:	9217      	str	r2, [sp, #92]	; 0x5c
 810625e:	9219      	str	r2, [sp, #100]	; 0x64
 8106260:	a817      	add	r0, sp, #92	; 0x5c
 8106262:	aa15      	add	r2, sp, #84	; 0x54
 8106264:	9309      	str	r3, [sp, #36]	; 0x24
 8106266:	e9cd 9921 	strd	r9, r9, [sp, #132]	; 0x84
 810626a:	e9cd 9923 	strd	r9, r9, [sp, #140]	; 0x8c
 810626e:	e9cd 9926 	strd	r9, r9, [sp, #152]	; 0x98
 8106272:	e9cd 9928 	strd	r9, r9, [sp, #160]	; 0xa0
 8106276:	f8cd 9080 	str.w	r9, [sp, #128]	; 0x80
 810627a:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
 810627e:	f004 fe2b 	bl	810aed8 <core_compute_offsets>
 8106282:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8106284:	aa15      	add	r2, sp, #84	; 0x54
 8106286:	4659      	mov	r1, fp
 8106288:	a819      	add	r0, sp, #100	; 0x64
 810628a:	f004 fe25 	bl	810aed8 <core_compute_offsets>
 810628e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8106290:	68d3      	ldr	r3, [r2, #12]
 8106292:	2b00      	cmp	r3, #0
 8106294:	d0c1      	beq.n	810621a <forward_eltwise_integer_INT8+0x1fe>
 8106296:	eddf 8a50 	vldr	s17, [pc, #320]	; 81063d8 <forward_eltwise_integer_INT8+0x3bc>
 810629a:	6891      	ldr	r1, [r2, #8]
 810629c:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 81062a0:	2900      	cmp	r1, #0
 81062a2:	d0ba      	beq.n	810621a <forward_eltwise_integer_INT8+0x1fe>
 81062a4:	9815      	ldr	r0, [sp, #84]	; 0x54
 81062a6:	f04f 0b00 	mov.w	fp, #0
 81062aa:	f3c0 2017 	ubfx	r0, r0, #8, #24
 81062ae:	f04f 0a00 	mov.w	sl, #0
 81062b2:	2804      	cmp	r0, #4
 81062b4:	bf8c      	ite	hi
 81062b6:	6911      	ldrhi	r1, [r2, #16]
 81062b8:	2101      	movls	r1, #1
 81062ba:	458a      	cmp	sl, r1
 81062bc:	d26b      	bcs.n	8106396 <forward_eltwise_integer_INT8+0x37a>
 81062be:	6851      	ldr	r1, [r2, #4]
 81062c0:	2900      	cmp	r1, #0
 81062c2:	d057      	beq.n	8106374 <forward_eltwise_integer_INT8+0x358>
 81062c4:	f04f 0900 	mov.w	r9, #0
 81062c8:	eeb6 8a00 	vmov.f32	s16, #96	; 0x3f000000  0.5
 81062cc:	f994 2000 	ldrsb.w	r2, [r4]
 81062d0:	f99d 1039 	ldrsb.w	r1, [sp, #57]	; 0x39
 81062d4:	eddd 6a0f 	vldr	s13, [sp, #60]	; 0x3c
 81062d8:	ed9d 7a10 	vldr	s14, [sp, #64]	; 0x40
 81062dc:	1a53      	subs	r3, r2, r1
 81062de:	ee07 3a90 	vmov	s15, r3
 81062e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 81062e6:	f99d 103a 	ldrsb.w	r1, [sp, #58]	; 0x3a
 81062ea:	ee67 7aa6 	vmul.f32	s15, s15, s13
 81062ee:	a814      	add	r0, sp, #80	; 0x50
 81062f0:	edcd 7a12 	vstr	s15, [sp, #72]	; 0x48
 81062f4:	f995 2000 	ldrsb.w	r2, [r5]
 81062f8:	1a53      	subs	r3, r2, r1
 81062fa:	ee07 3a90 	vmov	s15, r3
 81062fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8106302:	aa13      	add	r2, sp, #76	; 0x4c
 8106304:	ee67 7a87 	vmul.f32	s15, s15, s14
 8106308:	a912      	add	r1, sp, #72	; 0x48
 810630a:	edcd 7a13 	vstr	s15, [sp, #76]	; 0x4c
 810630e:	47b8      	blx	r7
 8106310:	ed9d 6a14 	vldr	s12, [sp, #80]	; 0x50
 8106314:	eddd 6a11 	vldr	s13, [sp, #68]	; 0x44
 8106318:	f99d 303b 	ldrsb.w	r3, [sp, #59]	; 0x3b
 810631c:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8106320:	ee07 3a10 	vmov	s14, r3
 8106324:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8106328:	ee77 7a87 	vadd.f32	s15, s15, s14
 810632c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8106330:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8106334:	bfd4      	ite	le
 8106336:	eeb0 7a68 	vmovle.f32	s14, s17
 810633a:	eeb0 7a48 	vmovgt.f32	s14, s16
 810633e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8106342:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8106346:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 810634a:	ee17 2a10 	vmov	r2, s14
 810634e:	f302 0207 	ssat	r2, #8, r2
 8106352:	7032      	strb	r2, [r6, #0]
 8106354:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8106356:	6852      	ldr	r2, [r2, #4]
 8106358:	4414      	add	r4, r2
 810635a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 810635c:	6852      	ldr	r2, [r2, #4]
 810635e:	4415      	add	r5, r2
 8106360:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8106362:	6851      	ldr	r1, [r2, #4]
 8106364:	f109 0901 	add.w	r9, r9, #1
 8106368:	4549      	cmp	r1, r9
 810636a:	4446      	add	r6, r8
 810636c:	d8ae      	bhi.n	81062cc <forward_eltwise_integer_INT8+0x2b0>
 810636e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8106370:	f3c0 2017 	ubfx	r0, r0, #8, #24
 8106374:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8106376:	f5b1 6fa0 	cmp.w	r1, #1280	; 0x500
 810637a:	d302      	bcc.n	8106382 <forward_eltwise_integer_INT8+0x366>
 810637c:	9918      	ldr	r1, [sp, #96]	; 0x60
 810637e:	6909      	ldr	r1, [r1, #16]
 8106380:	440c      	add	r4, r1
 8106382:	9919      	ldr	r1, [sp, #100]	; 0x64
 8106384:	f5b1 6fa0 	cmp.w	r1, #1280	; 0x500
 8106388:	d302      	bcc.n	8106390 <forward_eltwise_integer_INT8+0x374>
 810638a:	991a      	ldr	r1, [sp, #104]	; 0x68
 810638c:	6909      	ldr	r1, [r1, #16]
 810638e:	440d      	add	r5, r1
 8106390:	f10a 0a01 	add.w	sl, sl, #1
 8106394:	e78d      	b.n	81062b2 <forward_eltwise_integer_INT8+0x296>
 8106396:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 810639a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 810639c:	f8de 1008 	ldr.w	r1, [lr, #8]
 81063a0:	440c      	add	r4, r1
 81063a2:	6899      	ldr	r1, [r3, #8]
 81063a4:	440d      	add	r5, r1
 81063a6:	6891      	ldr	r1, [r2, #8]
 81063a8:	f10b 0b01 	add.w	fp, fp, #1
 81063ac:	4559      	cmp	r1, fp
 81063ae:	f63f af7e 	bhi.w	81062ae <forward_eltwise_integer_INT8+0x292>
 81063b2:	f8de 000c 	ldr.w	r0, [lr, #12]
 81063b6:	4404      	add	r4, r0
 81063b8:	68d8      	ldr	r0, [r3, #12]
 81063ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 81063bc:	4405      	add	r5, r0
 81063be:	68d0      	ldr	r0, [r2, #12]
 81063c0:	3301      	adds	r3, #1
 81063c2:	4298      	cmp	r0, r3
 81063c4:	9309      	str	r3, [sp, #36]	; 0x24
 81063c6:	f63f af6b 	bhi.w	81062a0 <forward_eltwise_integer_INT8+0x284>
 81063ca:	e726      	b.n	810621a <forward_eltwise_integer_INT8+0x1fe>
 81063cc:	2301      	movs	r3, #1
 81063ce:	e70f      	b.n	81061f0 <forward_eltwise_integer_INT8+0x1d4>
 81063d0:	2300      	movs	r3, #0
 81063d2:	685b      	ldr	r3, [r3, #4]
 81063d4:	deff      	udf	#255	; 0xff
 81063d6:	bf00      	nop
 81063d8:	befffffc 	.word	0xbefffffc

081063dc <forward_lite_node_convert_integer_is8of32>:
 81063dc:	f000 b890 	b.w	8106500 <lite_convert_is8of32>

081063e0 <forward_lite_node_convert_integer_iu8of32>:
 81063e0:	f000 b8a0 	b.w	8106524 <lite_convert_iu8of32>

081063e4 <forward_lite_node_convert_integer_if32os8>:
 81063e4:	f000 b8b0 	b.w	8106548 <lite_convert_if32os8>

081063e8 <forward_lite_node_convert_integer_if32ou8>:
 81063e8:	f000 b8e4 	b.w	81065b4 <lite_convert_if32ou8>

081063ec <forward_lite_node_convert_integer_is8os8>:
 81063ec:	b410      	push	{r4}
 81063ee:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 81063f2:	9401      	str	r4, [sp, #4]
 81063f4:	f85d 4b04 	ldr.w	r4, [sp], #4
 81063f8:	f000 b8fc 	b.w	81065f4 <lite_convert_is8os8>

081063fc <forward_lite_node_convert_integer_iu8ou8>:
 81063fc:	b410      	push	{r4}
 81063fe:	f89d 4004 	ldrb.w	r4, [sp, #4]
 8106402:	9401      	str	r4, [sp, #4]
 8106404:	f85d 4b04 	ldr.w	r4, [sp], #4
 8106408:	f000 b934 	b.w	8106674 <lite_convert_iu8ou8>

0810640c <forward_lite_node_convert_integer_iu8os8>:
 810640c:	b410      	push	{r4}
 810640e:	f99d 4004 	ldrsb.w	r4, [sp, #4]
 8106412:	9401      	str	r4, [sp, #4]
 8106414:	f85d 4b04 	ldr.w	r4, [sp], #4
 8106418:	f000 b956 	b.w	81066c8 <lite_convert_iu8os8>

0810641c <forward_lite_node_convert_integer_iu8os8_fast>:
 810641c:	f000 b994 	b.w	8106748 <lite_convert_iu8os8_fast>

08106420 <forward_lite_node_convert_integer_is8ou8>:
 8106420:	b410      	push	{r4}
 8106422:	f89d 4004 	ldrb.w	r4, [sp, #4]
 8106426:	9401      	str	r4, [sp, #4]
 8106428:	f85d 4b04 	ldr.w	r4, [sp], #4
 810642c:	f000 b9c4 	b.w	81067b8 <lite_convert_is8ou8>

08106430 <forward_lite_node_convert_integer_is8ou8_fast>:
 8106430:	f000 b9ec 	b.w	810680c <lite_convert_is8ou8_fast>

08106434 <forward_lite_dense_is8os8ws8>:
 8106434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8106438:	b08f      	sub	sp, #60	; 0x3c
 810643a:	ee21 0a00 	vmul.f32	s0, s2, s0
 810643e:	f99d 4060 	ldrsb.w	r4, [sp, #96]	; 0x60
 8106442:	940a      	str	r4, [sp, #40]	; 0x28
 8106444:	f10d 0932 	add.w	r9, sp, #50	; 0x32
 8106448:	2400      	movs	r4, #0
 810644a:	ee80 0a20 	vdiv.f32	s0, s0, s1
 810644e:	4605      	mov	r5, r0
 8106450:	469b      	mov	fp, r3
 8106452:	4648      	mov	r0, r9
 8106454:	f99d 3064 	ldrsb.w	r3, [sp, #100]	; 0x64
 8106458:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
 810645c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 8106460:	f8bd 806c 	ldrh.w	r8, [sp, #108]	; 0x6c
 8106464:	9209      	str	r2, [sp, #36]	; 0x24
 8106466:	460e      	mov	r6, r1
 8106468:	f8ad 4032 	strh.w	r4, [sp, #50]	; 0x32
 810646c:	940d      	str	r4, [sp, #52]	; 0x34
 810646e:	930b      	str	r3, [sp, #44]	; 0x2c
 8106470:	f001 fe5e 	bl	8108130 <align_factor>
 8106474:	900d      	str	r0, [sp, #52]	; 0x34
 8106476:	f1ba 0f00 	cmp.w	sl, #0
 810647a:	d018      	beq.n	81064ae <forward_lite_dense_is8os8ws8+0x7a>
 810647c:	9909      	ldr	r1, [sp, #36]	; 0x24
 810647e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8106480:	9306      	str	r3, [sp, #24]
 8106482:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8106484:	9303      	str	r3, [sp, #12]
 8106486:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8106488:	9505      	str	r5, [sp, #20]
 810648a:	e9cd 9301 	strd	r9, r3, [sp, #4]
 810648e:	ab0d      	add	r3, sp, #52	; 0x34
 8106490:	9300      	str	r3, [sp, #0]
 8106492:	4630      	mov	r0, r6
 8106494:	f8cd b010 	str.w	fp, [sp, #16]
 8106498:	3401      	adds	r4, #1
 810649a:	4643      	mov	r3, r8
 810649c:	463a      	mov	r2, r7
 810649e:	9109      	str	r1, [sp, #36]	; 0x24
 81064a0:	f002 fbba 	bl	8108c18 <st_sssa8_fully_connected>
 81064a4:	45a2      	cmp	sl, r4
 81064a6:	9909      	ldr	r1, [sp, #36]	; 0x24
 81064a8:	4445      	add	r5, r8
 81064aa:	443e      	add	r6, r7
 81064ac:	d1e7      	bne.n	810647e <forward_lite_dense_is8os8ws8+0x4a>
 81064ae:	b00f      	add	sp, #60	; 0x3c
 81064b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

081064b4 <forward_lite_avepool_is8os8>:
 81064b4:	b410      	push	{r4}
 81064b6:	f8bd 4004 	ldrh.w	r4, [sp, #4]
 81064ba:	9401      	str	r4, [sp, #4]
 81064bc:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 81064c0:	9402      	str	r4, [sp, #8]
 81064c2:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 81064c6:	9403      	str	r4, [sp, #12]
 81064c8:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 81064cc:	9404      	str	r4, [sp, #16]
 81064ce:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 81064d2:	9405      	str	r4, [sp, #20]
 81064d4:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 81064d8:	9406      	str	r4, [sp, #24]
 81064da:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 81064de:	9407      	str	r4, [sp, #28]
 81064e0:	f8bd 4020 	ldrh.w	r4, [sp, #32]
 81064e4:	9408      	str	r4, [sp, #32]
 81064e6:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 81064ea:	9409      	str	r4, [sp, #36]	; 0x24
 81064ec:	f99d 4028 	ldrsb.w	r4, [sp, #40]	; 0x28
 81064f0:	940a      	str	r4, [sp, #40]	; 0x28
 81064f2:	f99d 402c 	ldrsb.w	r4, [sp, #44]	; 0x2c
 81064f6:	940b      	str	r4, [sp, #44]	; 0x2c
 81064f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 81064fc:	f001 bff8 	b.w	81084f0 <st_int8_avepool>

08106500 <lite_convert_is8of32>:
 8106500:	2a00      	cmp	r2, #0
 8106502:	dd0e      	ble.n	8106522 <lite_convert_is8of32+0x22>
 8106504:	4402      	add	r2, r0
 8106506:	f910 cb01 	ldrsb.w	ip, [r0], #1
 810650a:	ebac 0c03 	sub.w	ip, ip, r3
 810650e:	ee07 ca90 	vmov	s15, ip
 8106512:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8106516:	4290      	cmp	r0, r2
 8106518:	ee67 7a80 	vmul.f32	s15, s15, s0
 810651c:	ece1 7a01 	vstmia	r1!, {s15}
 8106520:	d1f1      	bne.n	8106506 <lite_convert_is8of32+0x6>
 8106522:	4770      	bx	lr

08106524 <lite_convert_iu8of32>:
 8106524:	2a00      	cmp	r2, #0
 8106526:	dd0e      	ble.n	8106546 <lite_convert_iu8of32+0x22>
 8106528:	4402      	add	r2, r0
 810652a:	f810 cb01 	ldrb.w	ip, [r0], #1
 810652e:	ebac 0c03 	sub.w	ip, ip, r3
 8106532:	ee07 ca90 	vmov	s15, ip
 8106536:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 810653a:	4290      	cmp	r0, r2
 810653c:	ee67 7a80 	vmul.f32	s15, s15, s0
 8106540:	ece1 7a01 	vstmia	r1!, {s15}
 8106544:	d1f1      	bne.n	810652a <lite_convert_iu8of32+0x6>
 8106546:	4770      	bx	lr

08106548 <lite_convert_if32os8>:
 8106548:	ee07 3a90 	vmov	s15, r3
 810654c:	2a00      	cmp	r2, #0
 810654e:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8106552:	dd2c      	ble.n	81065ae <lite_convert_if32os8+0x66>
 8106554:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8106558:	eec7 4a80 	vdiv.f32	s9, s15, s0
 810655c:	440a      	add	r2, r1
 810655e:	ed9f 5a14 	vldr	s10, [pc, #80]	; 81065b0 <lite_convert_if32os8+0x68>
 8106562:	eef6 5a00 	vmov.f32	s11, #96	; 0x3f000000  0.5
 8106566:	ecf0 7a01 	vldmia	r0!, {s15}
 810656a:	eef0 6a46 	vmov.f32	s13, s12
 810656e:	eee7 6aa4 	vfma.f32	s13, s15, s9
 8106572:	ee76 7aa5 	vadd.f32	s15, s13, s11
 8106576:	ee36 7ac5 	vsub.f32	s14, s13, s10
 810657a:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 810657e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8106582:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8106586:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 810658a:	db08      	blt.n	810659e <lite_convert_if32os8+0x56>
 810658c:	ee17 3a90 	vmov	r3, s15
 8106590:	f303 0307 	ssat	r3, #8, r3
 8106594:	f801 3b01 	strb.w	r3, [r1], #1
 8106598:	428a      	cmp	r2, r1
 810659a:	d1e4      	bne.n	8106566 <lite_convert_if32os8+0x1e>
 810659c:	4770      	bx	lr
 810659e:	ee17 3a10 	vmov	r3, s14
 81065a2:	f303 0307 	ssat	r3, #8, r3
 81065a6:	f801 3b01 	strb.w	r3, [r1], #1
 81065aa:	4291      	cmp	r1, r2
 81065ac:	d1db      	bne.n	8106566 <lite_convert_if32os8+0x1e>
 81065ae:	4770      	bx	lr
 81065b0:	3efffffc 	.word	0x3efffffc

081065b4 <lite_convert_if32ou8>:
 81065b4:	ee07 3a90 	vmov	s15, r3
 81065b8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 81065bc:	2a00      	cmp	r2, #0
 81065be:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 81065c2:	ee76 6aa7 	vadd.f32	s13, s13, s15
 81065c6:	dd14      	ble.n	81065f2 <lite_convert_if32ou8+0x3e>
 81065c8:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 81065cc:	ee87 6a80 	vdiv.f32	s12, s15, s0
 81065d0:	440a      	add	r2, r1
 81065d2:	ecb0 7a01 	vldmia	r0!, {s14}
 81065d6:	eef0 7a66 	vmov.f32	s15, s13
 81065da:	eee7 7a06 	vfma.f32	s15, s14, s12
 81065de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 81065e2:	ee17 3a90 	vmov	r3, s15
 81065e6:	f383 0308 	usat	r3, #8, r3
 81065ea:	f801 3b01 	strb.w	r3, [r1], #1
 81065ee:	4291      	cmp	r1, r2
 81065f0:	d1ef      	bne.n	81065d2 <lite_convert_if32ou8+0x1e>
 81065f2:	4770      	bx	lr

081065f4 <lite_convert_is8os8>:
 81065f4:	b500      	push	{lr}
 81065f6:	eb00 0e02 	add.w	lr, r0, r2
 81065fa:	4570      	cmp	r0, lr
 81065fc:	f9bd c004 	ldrsh.w	ip, [sp, #4]
 8106600:	d22a      	bcs.n	8106658 <lite_convert_is8os8+0x64>
 8106602:	ee07 ca90 	vmov	s15, ip
 8106606:	ed9f 5a1a 	vldr	s10, [pc, #104]	; 8106670 <lite_convert_is8os8+0x7c>
 810660a:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 810660e:	3801      	subs	r0, #1
 8106610:	440a      	add	r2, r1
 8106612:	eef6 5a00 	vmov.f32	s11, #96	; 0x3f000000  0.5
 8106616:	f910 cf01 	ldrsb.w	ip, [r0, #1]!
 810661a:	ebac 0c03 	sub.w	ip, ip, r3
 810661e:	ee07 ca90 	vmov	s15, ip
 8106622:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8106626:	eef0 6a46 	vmov.f32	s13, s12
 810662a:	eee7 6a80 	vfma.f32	s13, s15, s0
 810662e:	ee76 7aa5 	vadd.f32	s15, s13, s11
 8106632:	ee36 7ac5 	vsub.f32	s14, s13, s10
 8106636:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 810663a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 810663e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8106642:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8106646:	dd09      	ble.n	810665c <lite_convert_is8os8+0x68>
 8106648:	ee17 ca90 	vmov	ip, s15
 810664c:	f30c 0c07 	ssat	ip, #8, ip
 8106650:	f801 cb01 	strb.w	ip, [r1], #1
 8106654:	4291      	cmp	r1, r2
 8106656:	d1de      	bne.n	8106616 <lite_convert_is8os8+0x22>
 8106658:	f85d fb04 	ldr.w	pc, [sp], #4
 810665c:	ee17 ca10 	vmov	ip, s14
 8106660:	f30c 0c07 	ssat	ip, #8, ip
 8106664:	f801 cb01 	strb.w	ip, [r1], #1
 8106668:	4291      	cmp	r1, r2
 810666a:	d1d4      	bne.n	8106616 <lite_convert_is8os8+0x22>
 810666c:	f85d fb04 	ldr.w	pc, [sp], #4
 8106670:	3efffffc 	.word	0x3efffffc

08106674 <lite_convert_iu8ou8>:
 8106674:	f89d c000 	ldrb.w	ip, [sp]
 8106678:	ee06 ca90 	vmov	s13, ip
 810667c:	ee07 3a90 	vmov	s15, r3
 8106680:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8106684:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8106688:	eef8 7a67 	vcvt.f32.u32	s15, s15
 810668c:	ee76 6a87 	vadd.f32	s13, s13, s14
 8106690:	1883      	adds	r3, r0, r2
 8106692:	4298      	cmp	r0, r3
 8106694:	eee7 6ac0 	vfms.f32	s13, s15, s0
 8106698:	d215      	bcs.n	81066c6 <lite_convert_iu8ou8+0x52>
 810669a:	3801      	subs	r0, #1
 810669c:	440a      	add	r2, r1
 810669e:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 81066a2:	ee07 3a10 	vmov	s14, r3
 81066a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 81066aa:	eef0 7a66 	vmov.f32	s15, s13
 81066ae:	eee7 7a00 	vfma.f32	s15, s14, s0
 81066b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 81066b6:	ee17 3a90 	vmov	r3, s15
 81066ba:	f383 0308 	usat	r3, #8, r3
 81066be:	f801 3b01 	strb.w	r3, [r1], #1
 81066c2:	4291      	cmp	r1, r2
 81066c4:	d1eb      	bne.n	810669e <lite_convert_iu8ou8+0x2a>
 81066c6:	4770      	bx	lr

081066c8 <lite_convert_iu8os8>:
 81066c8:	f99d c000 	ldrsb.w	ip, [sp]
 81066cc:	ee07 3a90 	vmov	s15, r3
 81066d0:	ee06 ca10 	vmov	s12, ip
 81066d4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 81066d8:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 81066dc:	1883      	adds	r3, r0, r2
 81066de:	4298      	cmp	r0, r3
 81066e0:	eea7 6ac0 	vfms.f32	s12, s15, s0
 81066e4:	d22d      	bcs.n	8106742 <lite_convert_iu8os8+0x7a>
 81066e6:	ed9f 5a17 	vldr	s10, [pc, #92]	; 8106744 <lite_convert_iu8os8+0x7c>
 81066ea:	3801      	subs	r0, #1
 81066ec:	440a      	add	r2, r1
 81066ee:	eef6 5a00 	vmov.f32	s11, #96	; 0x3f000000  0.5
 81066f2:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 81066f6:	ee07 3a90 	vmov	s15, r3
 81066fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 81066fe:	eef0 6a46 	vmov.f32	s13, s12
 8106702:	eee7 6a80 	vfma.f32	s13, s15, s0
 8106706:	ee76 7aa5 	vadd.f32	s15, s13, s11
 810670a:	ee36 7ac5 	vsub.f32	s14, s13, s10
 810670e:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8106712:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8106716:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 810671a:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 810671e:	dd08      	ble.n	8106732 <lite_convert_iu8os8+0x6a>
 8106720:	ee17 3a90 	vmov	r3, s15
 8106724:	f303 0307 	ssat	r3, #8, r3
 8106728:	f801 3b01 	strb.w	r3, [r1], #1
 810672c:	4291      	cmp	r1, r2
 810672e:	d1e0      	bne.n	81066f2 <lite_convert_iu8os8+0x2a>
 8106730:	4770      	bx	lr
 8106732:	ee17 3a10 	vmov	r3, s14
 8106736:	f303 0307 	ssat	r3, #8, r3
 810673a:	f801 3b01 	strb.w	r3, [r1], #1
 810673e:	4291      	cmp	r1, r2
 8106740:	d1d7      	bne.n	81066f2 <lite_convert_iu8os8+0x2a>
 8106742:	4770      	bx	lr
 8106744:	3efffffc 	.word	0x3efffffc

08106748 <lite_convert_iu8os8_fast>:
 8106748:	b570      	push	{r4, r5, r6, lr}
 810674a:	1095      	asrs	r5, r2, #2
 810674c:	2d00      	cmp	r5, #0
 810674e:	dd31      	ble.n	81067b4 <lite_convert_iu8os8_fast+0x6c>
 8106750:	00ae      	lsls	r6, r5, #2
 8106752:	460c      	mov	r4, r1
 8106754:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8106758:	f04f 1e80 	mov.w	lr, #8388736	; 0x800080
 810675c:	f850 3b04 	ldr.w	r3, [r0], #4
 8106760:	ea4f 2c33 	mov.w	ip, r3, ror #8
 8106764:	fa3f fc8c 	uxtb16	ip, ip
 8106768:	fadc fc0e 	ssub16	ip, ip, lr
 810676c:	fa3f f383 	uxtb16	r3, r3
 8106770:	fad3 f30e 	ssub16	r3, r3, lr
 8106774:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
 8106778:	f00c 2cff 	and.w	ip, ip, #4278255360	; 0xff00ff00
 810677c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8106780:	ea43 030c 	orr.w	r3, r3, ip
 8106784:	42a8      	cmp	r0, r5
 8106786:	f844 3b04 	str.w	r3, [r4], #4
 810678a:	d1e7      	bne.n	810675c <lite_convert_iu8os8_fast+0x14>
 810678c:	4431      	add	r1, r6
 810678e:	f012 0203 	ands.w	r2, r2, #3
 8106792:	d00e      	beq.n	81067b2 <lite_convert_iu8os8_fast+0x6a>
 8106794:	782b      	ldrb	r3, [r5, #0]
 8106796:	3a01      	subs	r2, #1
 8106798:	f1a3 0380 	sub.w	r3, r3, #128	; 0x80
 810679c:	700b      	strb	r3, [r1, #0]
 810679e:	d008      	beq.n	81067b2 <lite_convert_iu8os8_fast+0x6a>
 81067a0:	786b      	ldrb	r3, [r5, #1]
 81067a2:	2a01      	cmp	r2, #1
 81067a4:	f1a3 0380 	sub.w	r3, r3, #128	; 0x80
 81067a8:	704b      	strb	r3, [r1, #1]
 81067aa:	d002      	beq.n	81067b2 <lite_convert_iu8os8_fast+0x6a>
 81067ac:	78ab      	ldrb	r3, [r5, #2]
 81067ae:	3b80      	subs	r3, #128	; 0x80
 81067b0:	708b      	strb	r3, [r1, #2]
 81067b2:	bd70      	pop	{r4, r5, r6, pc}
 81067b4:	4605      	mov	r5, r0
 81067b6:	e7ea      	b.n	810678e <lite_convert_iu8os8_fast+0x46>

081067b8 <lite_convert_is8ou8>:
 81067b8:	ee07 3a90 	vmov	s15, r3
 81067bc:	f89d 3000 	ldrb.w	r3, [sp]
 81067c0:	ee06 3a90 	vmov	s13, r3
 81067c4:	eef8 6a66 	vcvt.f32.u32	s13, s13
 81067c8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 81067cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 81067d0:	ee76 6a87 	vadd.f32	s13, s13, s14
 81067d4:	1883      	adds	r3, r0, r2
 81067d6:	4298      	cmp	r0, r3
 81067d8:	eee7 6ac0 	vfms.f32	s13, s15, s0
 81067dc:	d215      	bcs.n	810680a <lite_convert_is8ou8+0x52>
 81067de:	3801      	subs	r0, #1
 81067e0:	440a      	add	r2, r1
 81067e2:	f910 3f01 	ldrsb.w	r3, [r0, #1]!
 81067e6:	ee07 3a10 	vmov	s14, r3
 81067ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 81067ee:	eef0 7a66 	vmov.f32	s15, s13
 81067f2:	eee7 7a00 	vfma.f32	s15, s14, s0
 81067f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 81067fa:	ee17 3a90 	vmov	r3, s15
 81067fe:	f383 0308 	usat	r3, #8, r3
 8106802:	f801 3b01 	strb.w	r3, [r1], #1
 8106806:	4291      	cmp	r1, r2
 8106808:	d1eb      	bne.n	81067e2 <lite_convert_is8ou8+0x2a>
 810680a:	4770      	bx	lr

0810680c <lite_convert_is8ou8_fast>:
 810680c:	b570      	push	{r4, r5, r6, lr}
 810680e:	1095      	asrs	r5, r2, #2
 8106810:	2d00      	cmp	r5, #0
 8106812:	dd2d      	ble.n	8106870 <lite_convert_is8ou8_fast+0x64>
 8106814:	00ae      	lsls	r6, r5, #2
 8106816:	460c      	mov	r4, r1
 8106818:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 810681c:	f04f 1e80 	mov.w	lr, #8388736	; 0x800080
 8106820:	f850 3b04 	ldr.w	r3, [r0], #4
 8106824:	ea4f 2c33 	mov.w	ip, r3, ror #8
 8106828:	fa2f fc8c 	sxtb16	ip, ip
 810682c:	fa9c fc0e 	sadd16	ip, ip, lr
 8106830:	fa2f f383 	sxtb16	r3, r3
 8106834:	fa93 f30e 	sadd16	r3, r3, lr
 8106838:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 810683c:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
 8106840:	42a8      	cmp	r0, r5
 8106842:	f844 3b04 	str.w	r3, [r4], #4
 8106846:	d1eb      	bne.n	8106820 <lite_convert_is8ou8_fast+0x14>
 8106848:	4431      	add	r1, r6
 810684a:	f012 0203 	ands.w	r2, r2, #3
 810684e:	d00e      	beq.n	810686e <lite_convert_is8ou8_fast+0x62>
 8106850:	782b      	ldrb	r3, [r5, #0]
 8106852:	3a01      	subs	r2, #1
 8106854:	f1a3 0380 	sub.w	r3, r3, #128	; 0x80
 8106858:	700b      	strb	r3, [r1, #0]
 810685a:	d008      	beq.n	810686e <lite_convert_is8ou8_fast+0x62>
 810685c:	786b      	ldrb	r3, [r5, #1]
 810685e:	2a01      	cmp	r2, #1
 8106860:	f1a3 0380 	sub.w	r3, r3, #128	; 0x80
 8106864:	704b      	strb	r3, [r1, #1]
 8106866:	d002      	beq.n	810686e <lite_convert_is8ou8_fast+0x62>
 8106868:	78ab      	ldrb	r3, [r5, #2]
 810686a:	3b80      	subs	r3, #128	; 0x80
 810686c:	708b      	strb	r3, [r1, #2]
 810686e:	bd70      	pop	{r4, r5, r6, pc}
 8106870:	4605      	mov	r5, r0
 8106872:	e7ea      	b.n	810684a <lite_convert_is8ou8_fast+0x3e>

08106874 <forward_lite_dw_3x3_sssa8_ch>:
 8106874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8106878:	b09d      	sub	sp, #116	; 0x74
 810687a:	461e      	mov	r6, r3
 810687c:	f8bd 209c 	ldrh.w	r2, [sp, #156]	; 0x9c
 8106880:	9206      	str	r2, [sp, #24]
 8106882:	f8bd 20a0 	ldrh.w	r2, [sp, #160]	; 0xa0
 8106886:	9207      	str	r2, [sp, #28]
 8106888:	f99d 20a8 	ldrsb.w	r2, [sp, #168]	; 0xa8
 810688c:	920f      	str	r2, [sp, #60]	; 0x3c
 810688e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8106890:	f8bd 20b8 	ldrh.w	r2, [sp, #184]	; 0xb8
 8106894:	9213      	str	r2, [sp, #76]	; 0x4c
 8106896:	f8bd 20bc 	ldrh.w	r2, [sp, #188]	; 0xbc
 810689a:	f8dd e098 	ldr.w	lr, [sp, #152]	; 0x98
 810689e:	f99d 70ac 	ldrsb.w	r7, [sp, #172]	; 0xac
 81068a2:	f8dd b0b4 	ldr.w	fp, [sp, #180]	; 0xb4
 81068a6:	9019      	str	r0, [sp, #100]	; 0x64
 81068a8:	9105      	str	r1, [sp, #20]
 81068aa:	9217      	str	r2, [sp, #92]	; 0x5c
 81068ac:	ea4f 09c6 	mov.w	r9, r6, lsl #3
 81068b0:	2b00      	cmp	r3, #0
 81068b2:	f000 8430 	beq.w	8107116 <forward_lite_dw_3x3_sssa8_ch+0x8a2>
 81068b6:	ea4f 0846 	mov.w	r8, r6, lsl #1
 81068ba:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 81068bc:	982c      	ldr	r0, [sp, #176]	; 0xb0
 81068be:	eb03 0209 	add.w	r2, r3, r9
 81068c2:	eb09 0306 	add.w	r3, r9, r6
 81068c6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 81068ca:	9210      	str	r2, [sp, #64]	; 0x40
 81068cc:	4631      	mov	r1, r6
 81068ce:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 81068d0:	9312      	str	r3, [sp, #72]	; 0x48
 81068d2:	461c      	mov	r4, r3
 81068d4:	f001 fc80 	bl	81081d8 <align_factor_ch>
 81068d8:	f06f 0315 	mvn.w	r3, #21
 81068dc:	fb03 4306 	mla	r3, r3, r6, r4
 81068e0:	9311      	str	r3, [sp, #68]	; 0x44
 81068e2:	b1de      	cbz	r6, 810691c <forward_lite_dw_3x3_sssa8_ch+0xa8>
 81068e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 81068e6:	1e9c      	subs	r4, r3, #2
 81068e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 81068ea:	2100      	movs	r1, #0
 81068ec:	1d18      	adds	r0, r3, #4
 81068ee:	f04f 0c01 	mov.w	ip, #1
 81068f2:	f934 3f02 	ldrsh.w	r3, [r4, #2]!
 81068f6:	1e5a      	subs	r2, r3, #1
 81068f8:	b292      	uxth	r2, r2
 81068fa:	fa0c f503 	lsl.w	r5, ip, r3
 81068fe:	2a14      	cmp	r2, #20
 8106900:	fa07 f303 	lsl.w	r3, r7, r3
 8106904:	eb03 0355 	add.w	r3, r3, r5, lsr #1
 8106908:	f101 0101 	add.w	r1, r1, #1
 810690c:	f200 83fb 	bhi.w	8107106 <forward_lite_dw_3x3_sssa8_ch+0x892>
 8106910:	428e      	cmp	r6, r1
 8106912:	f840 3c04 	str.w	r3, [r0, #-4]
 8106916:	f100 0004 	add.w	r0, r0, #4
 810691a:	dcea      	bgt.n	81068f2 <forward_lite_dw_3x3_sssa8_ch+0x7e>
 810691c:	9b05      	ldr	r3, [sp, #20]
 810691e:	9a07      	ldr	r2, [sp, #28]
 8106920:	fb06 f303 	mul.w	r3, r6, r3
 8106924:	fb03 f202 	mul.w	r2, r3, r2
 8106928:	eba3 0308 	sub.w	r3, r3, r8
 810692c:	9307      	str	r3, [sp, #28]
 810692e:	9b06      	ldr	r3, [sp, #24]
 8106930:	9218      	str	r2, [sp, #96]	; 0x60
 8106932:	fb06 f303 	mul.w	r3, r6, r3
 8106936:	9314      	str	r3, [sp, #80]	; 0x50
 8106938:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 810693a:	2e03      	cmp	r6, #3
 810693c:	f1c3 0300 	rsb	r3, r3, #0
 8106940:	eac3 4503 	pkhbt	r5, r3, r3, lsl #16
 8106944:	bf8c      	ite	hi
 8106946:	1ef3      	subhi	r3, r6, #3
 8106948:	2300      	movls	r3, #0
 810694a:	930b      	str	r3, [sp, #44]	; 0x2c
 810694c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 810694e:	2b00      	cmp	r3, #0
 8106950:	f000 82b2 	beq.w	8106eb8 <forward_lite_dw_3x3_sssa8_ch+0x644>
 8106954:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8106956:	f006 0303 	and.w	r3, r6, #3
 810695a:	930d      	str	r3, [sp, #52]	; 0x34
 810695c:	2a00      	cmp	r2, #0
 810695e:	f000 82ab 	beq.w	8106eb8 <forward_lite_dw_3x3_sssa8_ch+0x644>
 8106962:	3b01      	subs	r3, #1
 8106964:	b29b      	uxth	r3, r3
 8106966:	9315      	str	r3, [sp, #84]	; 0x54
 8106968:	2300      	movs	r3, #0
 810696a:	9316      	str	r3, [sp, #88]	; 0x58
 810696c:	46a8      	mov	r8, r5
 810696e:	46b6      	mov	lr, r6
 8106970:	e9dd 1218 	ldrd	r1, r2, [sp, #96]	; 0x60
 8106974:	fb03 2301 	mla	r3, r3, r1, r2
 8106978:	9308      	str	r3, [sp, #32]
 810697a:	2300      	movs	r3, #0
 810697c:	46d9      	mov	r9, fp
 810697e:	930e      	str	r3, [sp, #56]	; 0x38
 8106980:	46f3      	mov	fp, lr
 8106982:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8106984:	2b00      	cmp	r3, #0
 8106986:	f000 83a1 	beq.w	81070cc <forward_lite_dw_3x3_sssa8_ch+0x858>
 810698a:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 810698e:	930c      	str	r3, [sp, #48]	; 0x30
 8106990:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8106992:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8106994:	9912      	ldr	r1, [sp, #72]	; 0x48
 8106996:	9204      	str	r2, [sp, #16]
 8106998:	f103 0010 	add.w	r0, r3, #16
 810699c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 810699e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 81069a0:	f8cd 9004 	str.w	r9, [sp, #4]
 81069a4:	2400      	movs	r4, #0
 81069a6:	9406      	str	r4, [sp, #24]
 81069a8:	3348      	adds	r3, #72	; 0x48
 81069aa:	9203      	str	r2, [sp, #12]
 81069ac:	9005      	str	r0, [sp, #20]
 81069ae:	9102      	str	r1, [sp, #8]
 81069b0:	9908      	ldr	r1, [sp, #32]
 81069b2:	9805      	ldr	r0, [sp, #20]
 81069b4:	f853 5c48 	ldr.w	r5, [r3, #-72]
 81069b8:	900a      	str	r0, [sp, #40]	; 0x28
 81069ba:	190a      	adds	r2, r1, r4
 81069bc:	eb02 070b 	add.w	r7, r2, fp
 81069c0:	590c      	ldr	r4, [r1, r4]
 81069c2:	f852 e00b 	ldr.w	lr, [r2, fp]
 81069c6:	9309      	str	r3, [sp, #36]	; 0x24
 81069c8:	eac4 410e 	pkhbt	r1, r4, lr, lsl #16
 81069cc:	eb02 024b 	add.w	r2, r2, fp, lsl #1
 81069d0:	eace 4e24 	pkhtb	lr, lr, r4, asr #16
 81069d4:	fa28 f681 	sxtab16	r6, r8, r1
 81069d8:	f850 4c10 	ldr.w	r4, [r0, #-16]
 81069dc:	fb25 4606 	smlad	r6, r5, r6, r4
 81069e0:	fa28 f191 	sxtab16	r1, r8, r1, ror #8
 81069e4:	f853 4c44 	ldr.w	r4, [r3, #-68]
 81069e8:	f850 5c0c 	ldr.w	r5, [r0, #-12]
 81069ec:	fb24 5101 	smlad	r1, r4, r1, r5
 81069f0:	f853 4c40 	ldr.w	r4, [r3, #-64]
 81069f4:	f850 5c08 	ldr.w	r5, [r0, #-8]
 81069f8:	fa28 fc8e 	sxtab16	ip, r8, lr
 81069fc:	fb24 5c0c 	smlad	ip, r4, ip, r5
 8106a00:	fa28 fe9e 	sxtab16	lr, r8, lr, ror #8
 8106a04:	f853 4c3c 	ldr.w	r4, [r3, #-60]
 8106a08:	f850 5c04 	ldr.w	r5, [r0, #-4]
 8106a0c:	fb24 550e 	smlad	r5, r4, lr, r5
 8106a10:	9807      	ldr	r0, [sp, #28]
 8106a12:	f857 e00b 	ldr.w	lr, [r7, fp]
 8106a16:	f853 4c38 	ldr.w	r4, [r3, #-56]
 8106a1a:	1817      	adds	r7, r2, r0
 8106a1c:	5812      	ldr	r2, [r2, r0]
 8106a1e:	eace 4902 	pkhbt	r9, lr, r2, lsl #16
 8106a22:	eac2 422e 	pkhtb	r2, r2, lr, asr #16
 8106a26:	fa28 fa89 	sxtab16	sl, r8, r9
 8106a2a:	eb07 0e0b 	add.w	lr, r7, fp
 8106a2e:	fb24 660a 	smlad	r6, r4, sl, r6
 8106a32:	fa28 f999 	sxtab16	r9, r8, r9, ror #8
 8106a36:	f853 4c34 	ldr.w	r4, [r3, #-52]
 8106a3a:	fb24 1409 	smlad	r4, r4, r9, r1
 8106a3e:	f853 1c30 	ldr.w	r1, [r3, #-48]
 8106a42:	fa28 f982 	sxtab16	r9, r8, r2
 8106a46:	fb21 cc09 	smlad	ip, r1, r9, ip
 8106a4a:	fa28 f292 	sxtab16	r2, r8, r2, ror #8
 8106a4e:	f853 1c2c 	ldr.w	r1, [r3, #-44]
 8106a52:	fb21 5202 	smlad	r2, r1, r2, r5
 8106a56:	f857 a00b 	ldr.w	sl, [r7, fp]
 8106a5a:	f85e 100b 	ldr.w	r1, [lr, fp]
 8106a5e:	f853 5c28 	ldr.w	r5, [r3, #-40]
 8106a62:	eaca 4901 	pkhbt	r9, sl, r1, lsl #16
 8106a66:	eb0e 070b 	add.w	r7, lr, fp
 8106a6a:	eac1 412a 	pkhtb	r1, r1, sl, asr #16
 8106a6e:	eb07 0e00 	add.w	lr, r7, r0
 8106a72:	fa28 fa89 	sxtab16	sl, r8, r9
 8106a76:	fb25 660a 	smlad	r6, r5, sl, r6
 8106a7a:	fa28 f999 	sxtab16	r9, r8, r9, ror #8
 8106a7e:	f853 5c24 	ldr.w	r5, [r3, #-36]
 8106a82:	fb25 4909 	smlad	r9, r5, r9, r4
 8106a86:	f853 4c20 	ldr.w	r4, [r3, #-32]
 8106a8a:	fa28 f581 	sxtab16	r5, r8, r1
 8106a8e:	fb24 c505 	smlad	r5, r4, r5, ip
 8106a92:	fa28 f191 	sxtab16	r1, r8, r1, ror #8
 8106a96:	f853 4c1c 	ldr.w	r4, [r3, #-28]
 8106a9a:	fb24 2101 	smlad	r1, r4, r1, r2
 8106a9e:	583a      	ldr	r2, [r7, r0]
 8106aa0:	f85e 400b 	ldr.w	r4, [lr, fp]
 8106aa4:	eac2 4704 	pkhbt	r7, r2, r4, lsl #16
 8106aa8:	44de      	add	lr, fp
 8106aaa:	eac4 4422 	pkhtb	r4, r4, r2, asr #16
 8106aae:	fa28 fc87 	sxtab16	ip, r8, r7
 8106ab2:	f853 2c18 	ldr.w	r2, [r3, #-24]
 8106ab6:	fb22 660c 	smlad	r6, r2, ip, r6
 8106aba:	fa28 f797 	sxtab16	r7, r8, r7, ror #8
 8106abe:	f853 2c14 	ldr.w	r2, [r3, #-20]
 8106ac2:	fb22 9707 	smlad	r7, r2, r7, r9
 8106ac6:	f853 2c10 	ldr.w	r2, [r3, #-16]
 8106aca:	fa28 fc84 	sxtab16	ip, r8, r4
 8106ace:	fb22 5c0c 	smlad	ip, r2, ip, r5
 8106ad2:	fa28 f494 	sxtab16	r4, r8, r4, ror #8
 8106ad6:	f853 2c0c 	ldr.w	r2, [r3, #-12]
 8106ada:	fb22 1404 	smlad	r4, r2, r4, r1
 8106ade:	f85e 200b 	ldr.w	r2, [lr, fp]
 8106ae2:	980c      	ldr	r0, [sp, #48]	; 0x30
 8106ae4:	f833 5c08 	ldrh.w	r5, [r3, #-8]
 8106ae8:	f833 9c04 	ldrh.w	r9, [r3, #-4]
 8106aec:	f833 ec06 	ldrh.w	lr, [r3, #-6]
 8106af0:	f833 ac02 	ldrh.w	sl, [r3, #-2]
 8106af4:	b251      	sxtb	r1, r2
 8106af6:	1a09      	subs	r1, r1, r0
 8106af8:	fb15 6601 	smlabb	r6, r5, r1, r6
 8106afc:	f342 2507 	sbfx	r5, r2, #8, #8
 8106b00:	f342 4107 	sbfx	r1, r2, #16, #8
 8106b04:	1a09      	subs	r1, r1, r0
 8106b06:	1a2d      	subs	r5, r5, r0
 8106b08:	ebc0 6222 	rsb	r2, r0, r2, asr #24
 8106b0c:	9802      	ldr	r0, [sp, #8]
 8106b0e:	fb19 c901 	smlabb	r9, r9, r1, ip
 8106b12:	f9b0 1000 	ldrsh.w	r1, [r0]
 8106b16:	2915      	cmp	r1, #21
 8106b18:	fb1e 7505 	smlabb	r5, lr, r5, r7
 8106b1c:	fb1a 4a02 	smlabb	sl, sl, r2, r4
 8106b20:	f340 8214 	ble.w	8106f4c <forward_lite_dw_3x3_sssa8_ch+0x6d8>
 8106b24:	e9dd 4703 	ldrd	r4, r7, [sp, #12]
 8106b28:	f1a1 0c02 	sub.w	ip, r1, #2
 8106b2c:	f854 eb04 	ldr.w	lr, [r4], #4
 8106b30:	3901      	subs	r1, #1
 8106b32:	2201      	movs	r2, #1
 8106b34:	fa02 fc0c 	lsl.w	ip, r2, ip
 8106b38:	f857 2b04 	ldr.w	r2, [r7], #4
 8106b3c:	fb56 c202 	smmla	r2, r6, r2, ip
 8106b40:	410a      	asrs	r2, r1
 8106b42:	4472      	add	r2, lr
 8106b44:	1c86      	adds	r6, r0, #2
 8106b46:	f302 0207 	ssat	r2, #8, r2
 8106b4a:	9901      	ldr	r1, [sp, #4]
 8106b4c:	b252      	sxtb	r2, r2
 8106b4e:	3101      	adds	r1, #1
 8106b50:	9801      	ldr	r0, [sp, #4]
 8106b52:	7002      	strb	r2, [r0, #0]
 8106b54:	f9b6 6000 	ldrsh.w	r6, [r6]
 8106b58:	2e15      	cmp	r6, #21
 8106b5a:	f340 81e2 	ble.w	8106f22 <forward_lite_dw_3x3_sssa8_ch+0x6ae>
 8106b5e:	683a      	ldr	r2, [r7, #0]
 8106b60:	6824      	ldr	r4, [r4, #0]
 8106b62:	1eb7      	subs	r7, r6, #2
 8106b64:	f04f 0c01 	mov.w	ip, #1
 8106b68:	3e01      	subs	r6, #1
 8106b6a:	fa0c f707 	lsl.w	r7, ip, r7
 8106b6e:	fb55 7202 	smmla	r2, r5, r2, r7
 8106b72:	fa42 f706 	asr.w	r7, r2, r6
 8106b76:	9a04      	ldr	r2, [sp, #16]
 8106b78:	4427      	add	r7, r4
 8106b7a:	f102 0608 	add.w	r6, r2, #8
 8106b7e:	9c03      	ldr	r4, [sp, #12]
 8106b80:	9a02      	ldr	r2, [sp, #8]
 8106b82:	f104 0508 	add.w	r5, r4, #8
 8106b86:	3204      	adds	r2, #4
 8106b88:	f307 0707 	ssat	r7, #8, r7
 8106b8c:	b27f      	sxtb	r7, r7
 8106b8e:	1c84      	adds	r4, r0, #2
 8106b90:	700f      	strb	r7, [r1, #0]
 8106b92:	f9b2 1000 	ldrsh.w	r1, [r2]
 8106b96:	2915      	cmp	r1, #21
 8106b98:	f340 8191 	ble.w	8106ebe <forward_lite_dw_3x3_sssa8_ch+0x64a>
 8106b9c:	6832      	ldr	r2, [r6, #0]
 8106b9e:	682d      	ldr	r5, [r5, #0]
 8106ba0:	1e8e      	subs	r6, r1, #2
 8106ba2:	2001      	movs	r0, #1
 8106ba4:	3901      	subs	r1, #1
 8106ba6:	fa00 f606 	lsl.w	r6, r0, r6
 8106baa:	fb59 6202 	smmla	r2, r9, r2, r6
 8106bae:	fa42 f601 	asr.w	r6, r2, r1
 8106bb2:	9a04      	ldr	r2, [sp, #16]
 8106bb4:	f102 0c0c 	add.w	ip, r2, #12
 8106bb8:	9a02      	ldr	r2, [sp, #8]
 8106bba:	442e      	add	r6, r5
 8106bbc:	3206      	adds	r2, #6
 8106bbe:	9903      	ldr	r1, [sp, #12]
 8106bc0:	310c      	adds	r1, #12
 8106bc2:	f306 0607 	ssat	r6, #8, r6
 8106bc6:	b276      	sxtb	r6, r6
 8106bc8:	7026      	strb	r6, [r4, #0]
 8106bca:	f9b2 6000 	ldrsh.w	r6, [r2]
 8106bce:	9801      	ldr	r0, [sp, #4]
 8106bd0:	2e15      	cmp	r6, #21
 8106bd2:	f100 0503 	add.w	r5, r0, #3
 8106bd6:	f340 818f 	ble.w	8106ef8 <forward_lite_dw_3x3_sssa8_ch+0x684>
 8106bda:	9c04      	ldr	r4, [sp, #16]
 8106bdc:	9f02      	ldr	r7, [sp, #8]
 8106bde:	6809      	ldr	r1, [r1, #0]
 8106be0:	9a03      	ldr	r2, [sp, #12]
 8106be2:	f8dc c000 	ldr.w	ip, [ip]
 8106be6:	f1a6 0e02 	sub.w	lr, r6, #2
 8106bea:	2001      	movs	r0, #1
 8106bec:	3e01      	subs	r6, #1
 8106bee:	3410      	adds	r4, #16
 8106bf0:	3708      	adds	r7, #8
 8106bf2:	fa00 fe0e 	lsl.w	lr, r0, lr
 8106bf6:	fb5a ec0c 	smmla	ip, sl, ip, lr
 8106bfa:	fa4c fc06 	asr.w	ip, ip, r6
 8106bfe:	3210      	adds	r2, #16
 8106c00:	448c      	add	ip, r1
 8106c02:	46a2      	mov	sl, r4
 8106c04:	463e      	mov	r6, r7
 8106c06:	4696      	mov	lr, r2
 8106c08:	f30c 0c07 	ssat	ip, #8, ip
 8106c0c:	fa4f fc8c 	sxtb.w	ip, ip
 8106c10:	f885 c000 	strb.w	ip, [r5]
 8106c14:	9d06      	ldr	r5, [sp, #24]
 8106c16:	9901      	ldr	r1, [sp, #4]
 8106c18:	9203      	str	r2, [sp, #12]
 8106c1a:	3504      	adds	r5, #4
 8106c1c:	b2a8      	uxth	r0, r5
 8106c1e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8106c20:	9d05      	ldr	r5, [sp, #20]
 8106c22:	9404      	str	r4, [sp, #16]
 8106c24:	3104      	adds	r1, #4
 8106c26:	3510      	adds	r5, #16
 8106c28:	4290      	cmp	r0, r2
 8106c2a:	4689      	mov	r9, r1
 8106c2c:	9006      	str	r0, [sp, #24]
 8106c2e:	9505      	str	r5, [sp, #20]
 8106c30:	f103 0348 	add.w	r3, r3, #72	; 0x48
 8106c34:	9702      	str	r7, [sp, #8]
 8106c36:	9101      	str	r1, [sp, #4]
 8106c38:	4604      	mov	r4, r0
 8106c3a:	f4ff aeb9 	bcc.w	81069b0 <forward_lite_dw_3x3_sssa8_ch+0x13c>
 8106c3e:	46b4      	mov	ip, r6
 8106c40:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8106c42:	2b00      	cmp	r3, #0
 8106c44:	f000 8122 	beq.w	8106e8c <forward_lite_dw_3x3_sssa8_ch+0x618>
 8106c48:	9908      	ldr	r1, [sp, #32]
 8106c4a:	9b06      	ldr	r3, [sp, #24]
 8106c4c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8106c4e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8106c50:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8106c52:	56c8      	ldrsb	r0, [r1, r3]
 8106c54:	9d07      	ldr	r5, [sp, #28]
 8106c56:	18ca      	adds	r2, r1, r3
 8106c58:	6823      	ldr	r3, [r4, #0]
 8106c5a:	883c      	ldrh	r4, [r7, #0]
 8106c5c:	eb02 014b 	add.w	r1, r2, fp, lsl #1
 8106c60:	1b80      	subs	r0, r0, r6
 8106c62:	fb14 3400 	smlabb	r4, r4, r0, r3
 8106c66:	f912 300b 	ldrsb.w	r3, [r2, fp]
 8106c6a:	f912 201b 	ldrsb.w	r2, [r2, fp, lsl #1]
 8106c6e:	1948      	adds	r0, r1, r5
 8106c70:	5749      	ldrsb	r1, [r1, r5]
 8106c72:	887d      	ldrh	r5, [r7, #2]
 8106c74:	1b9b      	subs	r3, r3, r6
 8106c76:	fb13 4305 	smlabb	r3, r3, r5, r4
 8106c7a:	88bc      	ldrh	r4, [r7, #4]
 8106c7c:	1b92      	subs	r2, r2, r6
 8106c7e:	fb12 3304 	smlabb	r3, r2, r4, r3
 8106c82:	88fa      	ldrh	r2, [r7, #6]
 8106c84:	1b89      	subs	r1, r1, r6
 8106c86:	eb00 044b 	add.w	r4, r0, fp, lsl #1
 8106c8a:	fb11 3102 	smlabb	r1, r1, r2, r3
 8106c8e:	f910 200b 	ldrsb.w	r2, [r0, fp]
 8106c92:	f910 301b 	ldrsb.w	r3, [r0, fp, lsl #1]
 8106c96:	9807      	ldr	r0, [sp, #28]
 8106c98:	1825      	adds	r5, r4, r0
 8106c9a:	5620      	ldrsb	r0, [r4, r0]
 8106c9c:	893c      	ldrh	r4, [r7, #8]
 8106c9e:	1b92      	subs	r2, r2, r6
 8106ca0:	fb12 1204 	smlabb	r2, r2, r4, r1
 8106ca4:	8979      	ldrh	r1, [r7, #10]
 8106ca6:	f9bc 4000 	ldrsh.w	r4, [ip]
 8106caa:	1b9b      	subs	r3, r3, r6
 8106cac:	fb13 2301 	smlabb	r3, r3, r1, r2
 8106cb0:	89b9      	ldrh	r1, [r7, #12]
 8106cb2:	f915 201b 	ldrsb.w	r2, [r5, fp, lsl #1]
 8106cb6:	1b80      	subs	r0, r0, r6
 8106cb8:	fb10 3101 	smlabb	r1, r0, r1, r3
 8106cbc:	f915 300b 	ldrsb.w	r3, [r5, fp]
 8106cc0:	89f8      	ldrh	r0, [r7, #14]
 8106cc2:	1b9b      	subs	r3, r3, r6
 8106cc4:	fb13 1300 	smlabb	r3, r3, r0, r1
 8106cc8:	8a39      	ldrh	r1, [r7, #16]
 8106cca:	1b92      	subs	r2, r2, r6
 8106ccc:	fb12 3201 	smlabb	r2, r2, r1, r3
 8106cd0:	9b06      	ldr	r3, [sp, #24]
 8106cd2:	2c15      	cmp	r4, #21
 8106cd4:	f103 0301 	add.w	r3, r3, #1
 8106cd8:	b29d      	uxth	r5, r3
 8106cda:	b231      	sxth	r1, r6
 8106cdc:	f300 819e 	bgt.w	810701c <forward_lite_dw_3x3_sssa8_ch+0x7a8>
 8106ce0:	2c00      	cmp	r4, #0
 8106ce2:	f340 81d3 	ble.w	810708c <forward_lite_dw_3x3_sssa8_ch+0x818>
 8106ce6:	0050      	lsls	r0, r2, #1
 8106ce8:	f8da 3000 	ldr.w	r3, [sl]
 8106cec:	f8de 2000 	ldr.w	r2, [lr]
 8106cf0:	fb50 2003 	smmla	r0, r0, r3, r2
 8106cf4:	4120      	asrs	r0, r4
 8106cf6:	f300 0307 	ssat	r3, #8, r0
 8106cfa:	f109 0201 	add.w	r2, r9, #1
 8106cfe:	b25b      	sxtb	r3, r3
 8106d00:	9201      	str	r2, [sp, #4]
 8106d02:	f889 3000 	strb.w	r3, [r9]
 8106d06:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8106d08:	2b00      	cmp	r3, #0
 8106d0a:	f000 80bd 	beq.w	8106e88 <forward_lite_dw_3x3_sssa8_ch+0x614>
 8106d0e:	9b06      	ldr	r3, [sp, #24]
 8106d10:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8106d12:	9f07      	ldr	r7, [sp, #28]
 8106d14:	3302      	adds	r3, #2
 8106d16:	b29b      	uxth	r3, r3
 8106d18:	9302      	str	r3, [sp, #8]
 8106d1a:	9b08      	ldr	r3, [sp, #32]
 8106d1c:	195c      	adds	r4, r3, r5
 8106d1e:	575a      	ldrsb	r2, [r3, r5]
 8106d20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8106d22:	8a75      	ldrh	r5, [r6, #18]
 8106d24:	685b      	ldr	r3, [r3, #4]
 8106d26:	eb04 004b 	add.w	r0, r4, fp, lsl #1
 8106d2a:	1a52      	subs	r2, r2, r1
 8106d2c:	fb12 3205 	smlabb	r2, r2, r5, r3
 8106d30:	f914 300b 	ldrsb.w	r3, [r4, fp]
 8106d34:	f914 501b 	ldrsb.w	r5, [r4, fp, lsl #1]
 8106d38:	19c4      	adds	r4, r0, r7
 8106d3a:	57c0      	ldrsb	r0, [r0, r7]
 8106d3c:	4637      	mov	r7, r6
 8106d3e:	8ab6      	ldrh	r6, [r6, #20]
 8106d40:	1a5b      	subs	r3, r3, r1
 8106d42:	fb13 2306 	smlabb	r3, r3, r6, r2
 8106d46:	8afa      	ldrh	r2, [r7, #22]
 8106d48:	1a6d      	subs	r5, r5, r1
 8106d4a:	fb15 3302 	smlabb	r3, r5, r2, r3
 8106d4e:	8b3a      	ldrh	r2, [r7, #24]
 8106d50:	1a40      	subs	r0, r0, r1
 8106d52:	eb04 054b 	add.w	r5, r4, fp, lsl #1
 8106d56:	fb10 3002 	smlabb	r0, r0, r2, r3
 8106d5a:	f914 200b 	ldrsb.w	r2, [r4, fp]
 8106d5e:	f914 301b 	ldrsb.w	r3, [r4, fp, lsl #1]
 8106d62:	9c07      	ldr	r4, [sp, #28]
 8106d64:	192e      	adds	r6, r5, r4
 8106d66:	572c      	ldrsb	r4, [r5, r4]
 8106d68:	8b7d      	ldrh	r5, [r7, #26]
 8106d6a:	1a52      	subs	r2, r2, r1
 8106d6c:	fb12 0205 	smlabb	r2, r2, r5, r0
 8106d70:	8bb8      	ldrh	r0, [r7, #28]
 8106d72:	1a5b      	subs	r3, r3, r1
 8106d74:	fb13 2300 	smlabb	r3, r3, r0, r2
 8106d78:	8bf8      	ldrh	r0, [r7, #30]
 8106d7a:	f916 201b 	ldrsb.w	r2, [r6, fp, lsl #1]
 8106d7e:	1a64      	subs	r4, r4, r1
 8106d80:	fb14 3000 	smlabb	r0, r4, r0, r3
 8106d84:	f916 300b 	ldrsb.w	r3, [r6, fp]
 8106d88:	8c3c      	ldrh	r4, [r7, #32]
 8106d8a:	1a5b      	subs	r3, r3, r1
 8106d8c:	fb13 0304 	smlabb	r3, r3, r4, r0
 8106d90:	f9bc 4002 	ldrsh.w	r4, [ip, #2]
 8106d94:	8c78      	ldrh	r0, [r7, #34]	; 0x22
 8106d96:	1a52      	subs	r2, r2, r1
 8106d98:	2c15      	cmp	r4, #21
 8106d9a:	fb12 3200 	smlabb	r2, r2, r0, r3
 8106d9e:	f300 8151 	bgt.w	8107044 <forward_lite_dw_3x3_sssa8_ch+0x7d0>
 8106da2:	2c00      	cmp	r4, #0
 8106da4:	f340 8185 	ble.w	81070b2 <forward_lite_dw_3x3_sssa8_ch+0x83e>
 8106da8:	0050      	lsls	r0, r2, #1
 8106daa:	f8da 3004 	ldr.w	r3, [sl, #4]
 8106dae:	f8de 2004 	ldr.w	r2, [lr, #4]
 8106db2:	fb50 2003 	smmla	r0, r0, r3, r2
 8106db6:	4120      	asrs	r0, r4
 8106db8:	f300 0307 	ssat	r3, #8, r0
 8106dbc:	9a01      	ldr	r2, [sp, #4]
 8106dbe:	3201      	adds	r2, #1
 8106dc0:	b25b      	sxtb	r3, r3
 8106dc2:	9203      	str	r2, [sp, #12]
 8106dc4:	9a01      	ldr	r2, [sp, #4]
 8106dc6:	7013      	strb	r3, [r2, #0]
 8106dc8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8106dca:	2b02      	cmp	r3, #2
 8106dcc:	d05c      	beq.n	8106e88 <forward_lite_dw_3x3_sssa8_ch+0x614>
 8106dce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8106dd0:	9802      	ldr	r0, [sp, #8]
 8106dd2:	689c      	ldr	r4, [r3, #8]
 8106dd4:	9b08      	ldr	r3, [sp, #32]
 8106dd6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8106dd8:	f9bc c004 	ldrsh.w	ip, [ip, #4]
 8106ddc:	8cbd      	ldrh	r5, [r7, #36]	; 0x24
 8106dde:	181a      	adds	r2, r3, r0
 8106de0:	5618      	ldrsb	r0, [r3, r0]
 8106de2:	f912 600b 	ldrsb.w	r6, [r2, fp]
 8106de6:	1a40      	subs	r0, r0, r1
 8106de8:	fb15 4500 	smlabb	r5, r5, r0, r4
 8106dec:	eb02 034b 	add.w	r3, r2, fp, lsl #1
 8106df0:	9807      	ldr	r0, [sp, #28]
 8106df2:	f912 401b 	ldrsb.w	r4, [r2, fp, lsl #1]
 8106df6:	181a      	adds	r2, r3, r0
 8106df8:	5618      	ldrsb	r0, [r3, r0]
 8106dfa:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8106dfc:	1a76      	subs	r6, r6, r1
 8106dfe:	fb13 5306 	smlabb	r3, r3, r6, r5
 8106e02:	8d3d      	ldrh	r5, [r7, #40]	; 0x28
 8106e04:	463e      	mov	r6, r7
 8106e06:	1a64      	subs	r4, r4, r1
 8106e08:	fb15 3304 	smlabb	r3, r5, r4, r3
 8106e0c:	8d74      	ldrh	r4, [r6, #42]	; 0x2a
 8106e0e:	f912 500b 	ldrsb.w	r5, [r2, fp]
 8106e12:	1a40      	subs	r0, r0, r1
 8106e14:	eb02 074b 	add.w	r7, r2, fp, lsl #1
 8106e18:	fb14 3400 	smlabb	r4, r4, r0, r3
 8106e1c:	9b07      	ldr	r3, [sp, #28]
 8106e1e:	f912 001b 	ldrsb.w	r0, [r2, fp, lsl #1]
 8106e22:	18fe      	adds	r6, r7, r3
 8106e24:	56fb      	ldrsb	r3, [r7, r3]
 8106e26:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8106e28:	8dba      	ldrh	r2, [r7, #44]	; 0x2c
 8106e2a:	1a6d      	subs	r5, r5, r1
 8106e2c:	fb12 4205 	smlabb	r2, r2, r5, r4
 8106e30:	8dfc      	ldrh	r4, [r7, #46]	; 0x2e
 8106e32:	1a40      	subs	r0, r0, r1
 8106e34:	fb14 2400 	smlabb	r4, r4, r0, r2
 8106e38:	8e3a      	ldrh	r2, [r7, #48]	; 0x30
 8106e3a:	1a5b      	subs	r3, r3, r1
 8106e3c:	fb12 4403 	smlabb	r4, r2, r3, r4
 8106e40:	f916 300b 	ldrsb.w	r3, [r6, fp]
 8106e44:	f916 201b 	ldrsb.w	r2, [r6, fp, lsl #1]
 8106e48:	1a5b      	subs	r3, r3, r1
 8106e4a:	1a52      	subs	r2, r2, r1
 8106e4c:	8e79      	ldrh	r1, [r7, #50]	; 0x32
 8106e4e:	fb11 4103 	smlabb	r1, r1, r3, r4
 8106e52:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 8106e54:	f1bc 0f15 	cmp.w	ip, #21
 8106e58:	fb13 1302 	smlabb	r3, r3, r2, r1
 8106e5c:	f340 8106 	ble.w	810706c <forward_lite_dw_3x3_sssa8_ch+0x7f8>
 8106e60:	f8de 1008 	ldr.w	r1, [lr, #8]
 8106e64:	f8da 2008 	ldr.w	r2, [sl, #8]
 8106e68:	f1ac 0002 	sub.w	r0, ip, #2
 8106e6c:	f10c 34ff 	add.w	r4, ip, #4294967295	; 0xffffffff
 8106e70:	2501      	movs	r5, #1
 8106e72:	fa05 f000 	lsl.w	r0, r5, r0
 8106e76:	fb53 0202 	smmla	r2, r3, r2, r0
 8106e7a:	4122      	asrs	r2, r4
 8106e7c:	440a      	add	r2, r1
 8106e7e:	f302 0307 	ssat	r3, #8, r2
 8106e82:	b25b      	sxtb	r3, r3
 8106e84:	9a03      	ldr	r2, [sp, #12]
 8106e86:	7013      	strb	r3, [r2, #0]
 8106e88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8106e8a:	4499      	add	r9, r3
 8106e8c:	9a08      	ldr	r2, [sp, #32]
 8106e8e:	9914      	ldr	r1, [sp, #80]	; 0x50
 8106e90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8106e92:	440a      	add	r2, r1
 8106e94:	3301      	adds	r3, #1
 8106e96:	9208      	str	r2, [sp, #32]
 8106e98:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8106e9a:	b21b      	sxth	r3, r3
 8106e9c:	429a      	cmp	r2, r3
 8106e9e:	930e      	str	r3, [sp, #56]	; 0x38
 8106ea0:	f73f ad6f 	bgt.w	8106982 <forward_lite_dw_3x3_sssa8_ch+0x10e>
 8106ea4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8106ea6:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8106ea8:	3301      	adds	r3, #1
 8106eaa:	b21b      	sxth	r3, r3
 8106eac:	428b      	cmp	r3, r1
 8106eae:	46de      	mov	lr, fp
 8106eb0:	9316      	str	r3, [sp, #88]	; 0x58
 8106eb2:	46cb      	mov	fp, r9
 8106eb4:	f6ff ad5c 	blt.w	8106970 <forward_lite_dw_3x3_sssa8_ch+0xfc>
 8106eb8:	b01d      	add	sp, #116	; 0x74
 8106eba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8106ebe:	2900      	cmp	r1, #0
 8106ec0:	dd58      	ble.n	8106f74 <forward_lite_dw_3x3_sssa8_ch+0x700>
 8106ec2:	6832      	ldr	r2, [r6, #0]
 8106ec4:	682d      	ldr	r5, [r5, #0]
 8106ec6:	ea4f 0649 	mov.w	r6, r9, lsl #1
 8106eca:	fb56 5602 	smmla	r6, r6, r2, r5
 8106ece:	9a04      	ldr	r2, [sp, #16]
 8106ed0:	f102 0c0c 	add.w	ip, r2, #12
 8106ed4:	9a03      	ldr	r2, [sp, #12]
 8106ed6:	410e      	asrs	r6, r1
 8106ed8:	f102 010c 	add.w	r1, r2, #12
 8106edc:	9a02      	ldr	r2, [sp, #8]
 8106ede:	3206      	adds	r2, #6
 8106ee0:	f306 0607 	ssat	r6, #8, r6
 8106ee4:	b276      	sxtb	r6, r6
 8106ee6:	7026      	strb	r6, [r4, #0]
 8106ee8:	f9b2 6000 	ldrsh.w	r6, [r2]
 8106eec:	9801      	ldr	r0, [sp, #4]
 8106eee:	2e15      	cmp	r6, #21
 8106ef0:	f100 0503 	add.w	r5, r0, #3
 8106ef4:	f73f ae71 	bgt.w	8106bda <forward_lite_dw_3x3_sssa8_ch+0x366>
 8106ef8:	2e00      	cmp	r6, #0
 8106efa:	dd7a      	ble.n	8106ff2 <forward_lite_dw_3x3_sssa8_ch+0x77e>
 8106efc:	9c04      	ldr	r4, [sp, #16]
 8106efe:	9a03      	ldr	r2, [sp, #12]
 8106f00:	9f02      	ldr	r7, [sp, #8]
 8106f02:	f8dc e000 	ldr.w	lr, [ip]
 8106f06:	6809      	ldr	r1, [r1, #0]
 8106f08:	3410      	adds	r4, #16
 8106f0a:	3210      	adds	r2, #16
 8106f0c:	3708      	adds	r7, #8
 8106f0e:	ea4f 0c4a 	mov.w	ip, sl, lsl #1
 8106f12:	46a2      	mov	sl, r4
 8106f14:	fb5c 1c0e 	smmla	ip, ip, lr, r1
 8106f18:	4696      	mov	lr, r2
 8106f1a:	fa4c fc06 	asr.w	ip, ip, r6
 8106f1e:	463e      	mov	r6, r7
 8106f20:	e672      	b.n	8106c08 <forward_lite_dw_3x3_sssa8_ch+0x394>
 8106f22:	2e00      	cmp	r6, #0
 8106f24:	dd4d      	ble.n	8106fc2 <forward_lite_dw_3x3_sssa8_ch+0x74e>
 8106f26:	683a      	ldr	r2, [r7, #0]
 8106f28:	6824      	ldr	r4, [r4, #0]
 8106f2a:	006f      	lsls	r7, r5, #1
 8106f2c:	fb57 4702 	smmla	r7, r7, r2, r4
 8106f30:	9a04      	ldr	r2, [sp, #16]
 8106f32:	4137      	asrs	r7, r6
 8106f34:	f102 0608 	add.w	r6, r2, #8
 8106f38:	9a03      	ldr	r2, [sp, #12]
 8106f3a:	f102 0508 	add.w	r5, r2, #8
 8106f3e:	9a02      	ldr	r2, [sp, #8]
 8106f40:	3204      	adds	r2, #4
 8106f42:	f307 0707 	ssat	r7, #8, r7
 8106f46:	b27f      	sxtb	r7, r7
 8106f48:	1c84      	adds	r4, r0, #2
 8106f4a:	e621      	b.n	8106b90 <forward_lite_dw_3x3_sssa8_ch+0x31c>
 8106f4c:	2900      	cmp	r1, #0
 8106f4e:	dd22      	ble.n	8106f96 <forward_lite_dw_3x3_sssa8_ch+0x722>
 8106f50:	e9dd 4703 	ldrd	r4, r7, [sp, #12]
 8106f54:	0072      	lsls	r2, r6, #1
 8106f56:	f854 cb04 	ldr.w	ip, [r4], #4
 8106f5a:	f857 6b04 	ldr.w	r6, [r7], #4
 8106f5e:	fb52 c206 	smmla	r2, r2, r6, ip
 8106f62:	410a      	asrs	r2, r1
 8106f64:	9902      	ldr	r1, [sp, #8]
 8106f66:	1c8e      	adds	r6, r1, #2
 8106f68:	f302 0207 	ssat	r2, #8, r2
 8106f6c:	9901      	ldr	r1, [sp, #4]
 8106f6e:	b252      	sxtb	r2, r2
 8106f70:	3101      	adds	r1, #1
 8106f72:	e5ed      	b.n	8106b50 <forward_lite_dw_3x3_sssa8_ch+0x2dc>
 8106f74:	9a02      	ldr	r2, [sp, #8]
 8106f76:	f1c1 0101 	rsb	r1, r1, #1
 8106f7a:	fa09 f101 	lsl.w	r1, r9, r1
 8106f7e:	3206      	adds	r2, #6
 8106f80:	f301 011f 	ssat	r1, #32, r1
 8106f84:	9804      	ldr	r0, [sp, #16]
 8106f86:	6836      	ldr	r6, [r6, #0]
 8106f88:	f100 0c0c 	add.w	ip, r0, #12
 8106f8c:	fb51 f116 	smmulr	r1, r1, r6
 8106f90:	682e      	ldr	r6, [r5, #0]
 8106f92:	440e      	add	r6, r1
 8106f94:	e613      	b.n	8106bbe <forward_lite_dw_3x3_sssa8_ch+0x34a>
 8106f96:	f1c1 0101 	rsb	r1, r1, #1
 8106f9a:	fa06 f101 	lsl.w	r1, r6, r1
 8106f9e:	1c86      	adds	r6, r0, #2
 8106fa0:	f301 011f 	ssat	r1, #32, r1
 8106fa4:	9f04      	ldr	r7, [sp, #16]
 8106fa6:	f857 2b04 	ldr.w	r2, [r7], #4
 8106faa:	fb51 f212 	smmulr	r2, r1, r2
 8106fae:	9c03      	ldr	r4, [sp, #12]
 8106fb0:	f854 1b04 	ldr.w	r1, [r4], #4
 8106fb4:	440a      	add	r2, r1
 8106fb6:	f302 0207 	ssat	r2, #8, r2
 8106fba:	9901      	ldr	r1, [sp, #4]
 8106fbc:	b252      	sxtb	r2, r2
 8106fbe:	3101      	adds	r1, #1
 8106fc0:	e5c6      	b.n	8106b50 <forward_lite_dw_3x3_sssa8_ch+0x2dc>
 8106fc2:	9a02      	ldr	r2, [sp, #8]
 8106fc4:	f1c6 0601 	rsb	r6, r6, #1
 8106fc8:	40b5      	lsls	r5, r6
 8106fca:	3204      	adds	r2, #4
 8106fcc:	f305 051f 	ssat	r5, #32, r5
 8106fd0:	9804      	ldr	r0, [sp, #16]
 8106fd2:	683f      	ldr	r7, [r7, #0]
 8106fd4:	f100 0608 	add.w	r6, r0, #8
 8106fd8:	fb55 f517 	smmulr	r5, r5, r7
 8106fdc:	6827      	ldr	r7, [r4, #0]
 8106fde:	9803      	ldr	r0, [sp, #12]
 8106fe0:	442f      	add	r7, r5
 8106fe2:	f100 0508 	add.w	r5, r0, #8
 8106fe6:	f307 0707 	ssat	r7, #8, r7
 8106fea:	9801      	ldr	r0, [sp, #4]
 8106fec:	b27f      	sxtb	r7, r7
 8106fee:	1c84      	adds	r4, r0, #2
 8106ff0:	e5ce      	b.n	8106b90 <forward_lite_dw_3x3_sssa8_ch+0x31c>
 8106ff2:	9f02      	ldr	r7, [sp, #8]
 8106ff4:	f1c6 0201 	rsb	r2, r6, #1
 8106ff8:	3708      	adds	r7, #8
 8106ffa:	fa0a f202 	lsl.w	r2, sl, r2
 8106ffe:	463e      	mov	r6, r7
 8107000:	f302 021f 	ssat	r2, #32, r2
 8107004:	9c04      	ldr	r4, [sp, #16]
 8107006:	f8dc c000 	ldr.w	ip, [ip]
 810700a:	3410      	adds	r4, #16
 810700c:	46a2      	mov	sl, r4
 810700e:	fb52 fc1c 	smmulr	ip, r2, ip
 8107012:	680a      	ldr	r2, [r1, #0]
 8107014:	4494      	add	ip, r2
 8107016:	9a03      	ldr	r2, [sp, #12]
 8107018:	3210      	adds	r2, #16
 810701a:	e5f4      	b.n	8106c06 <forward_lite_dw_3x3_sssa8_ch+0x392>
 810701c:	f8de 6000 	ldr.w	r6, [lr]
 8107020:	1ea0      	subs	r0, r4, #2
 8107022:	2301      	movs	r3, #1
 8107024:	3c01      	subs	r4, #1
 8107026:	fa03 f000 	lsl.w	r0, r3, r0
 810702a:	f8da 3000 	ldr.w	r3, [sl]
 810702e:	fb52 0303 	smmla	r3, r2, r3, r0
 8107032:	4123      	asrs	r3, r4
 8107034:	4433      	add	r3, r6
 8107036:	f303 0307 	ssat	r3, #8, r3
 810703a:	f109 0201 	add.w	r2, r9, #1
 810703e:	b25b      	sxtb	r3, r3
 8107040:	9201      	str	r2, [sp, #4]
 8107042:	e65e      	b.n	8106d02 <forward_lite_dw_3x3_sssa8_ch+0x48e>
 8107044:	1ea0      	subs	r0, r4, #2
 8107046:	2301      	movs	r3, #1
 8107048:	f8de 5004 	ldr.w	r5, [lr, #4]
 810704c:	3c01      	subs	r4, #1
 810704e:	fa03 f000 	lsl.w	r0, r3, r0
 8107052:	f8da 3004 	ldr.w	r3, [sl, #4]
 8107056:	fb52 0303 	smmla	r3, r2, r3, r0
 810705a:	4123      	asrs	r3, r4
 810705c:	442b      	add	r3, r5
 810705e:	f303 0307 	ssat	r3, #8, r3
 8107062:	9a01      	ldr	r2, [sp, #4]
 8107064:	3201      	adds	r2, #1
 8107066:	b25b      	sxtb	r3, r3
 8107068:	9203      	str	r2, [sp, #12]
 810706a:	e6ab      	b.n	8106dc4 <forward_lite_dw_3x3_sssa8_ch+0x550>
 810706c:	f1bc 0f00 	cmp.w	ip, #0
 8107070:	dd38      	ble.n	81070e4 <forward_lite_dw_3x3_sssa8_ch+0x870>
 8107072:	f8da 2008 	ldr.w	r2, [sl, #8]
 8107076:	f8de 1008 	ldr.w	r1, [lr, #8]
 810707a:	005b      	lsls	r3, r3, #1
 810707c:	fb53 1302 	smmla	r3, r3, r2, r1
 8107080:	fa43 f30c 	asr.w	r3, r3, ip
 8107084:	f303 0307 	ssat	r3, #8, r3
 8107088:	b25b      	sxtb	r3, r3
 810708a:	e6fb      	b.n	8106e84 <forward_lite_dw_3x3_sssa8_ch+0x610>
 810708c:	f1c4 0301 	rsb	r3, r4, #1
 8107090:	409a      	lsls	r2, r3
 8107092:	f302 021f 	ssat	r2, #32, r2
 8107096:	f8da 3000 	ldr.w	r3, [sl]
 810709a:	fb52 f213 	smmulr	r2, r2, r3
 810709e:	f8de 3000 	ldr.w	r3, [lr]
 81070a2:	4413      	add	r3, r2
 81070a4:	f303 0307 	ssat	r3, #8, r3
 81070a8:	f109 0201 	add.w	r2, r9, #1
 81070ac:	b25b      	sxtb	r3, r3
 81070ae:	9201      	str	r2, [sp, #4]
 81070b0:	e627      	b.n	8106d02 <forward_lite_dw_3x3_sssa8_ch+0x48e>
 81070b2:	f1c4 0301 	rsb	r3, r4, #1
 81070b6:	409a      	lsls	r2, r3
 81070b8:	f302 021f 	ssat	r2, #32, r2
 81070bc:	f8da 3004 	ldr.w	r3, [sl, #4]
 81070c0:	fb52 f213 	smmulr	r2, r2, r3
 81070c4:	f8de 3004 	ldr.w	r3, [lr, #4]
 81070c8:	4413      	add	r3, r2
 81070ca:	e7c8      	b.n	810705e <forward_lite_dw_3x3_sssa8_ch+0x7ea>
 81070cc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 81070ce:	930a      	str	r3, [sp, #40]	; 0x28
 81070d0:	e9dd 3e10 	ldrd	r3, lr, [sp, #64]	; 0x40
 81070d4:	9309      	str	r3, [sp, #36]	; 0x24
 81070d6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 81070d8:	f8dd a0c8 	ldr.w	sl, [sp, #200]	; 0xc8
 81070dc:	469c      	mov	ip, r3
 81070de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 81070e0:	9306      	str	r3, [sp, #24]
 81070e2:	e5ad      	b.n	8106c40 <forward_lite_dw_3x3_sssa8_ch+0x3cc>
 81070e4:	f1cc 0c01 	rsb	ip, ip, #1
 81070e8:	fa03 f30c 	lsl.w	r3, r3, ip
 81070ec:	f303 031f 	ssat	r3, #32, r3
 81070f0:	f8da 2008 	ldr.w	r2, [sl, #8]
 81070f4:	fb53 f212 	smmulr	r2, r3, r2
 81070f8:	f8de 3008 	ldr.w	r3, [lr, #8]
 81070fc:	4413      	add	r3, r2
 81070fe:	f303 0307 	ssat	r3, #8, r3
 8107102:	b25b      	sxtb	r3, r3
 8107104:	e6be      	b.n	8106e84 <forward_lite_dw_3x3_sssa8_ch+0x610>
 8107106:	42b1      	cmp	r1, r6
 8107108:	f840 7c04 	str.w	r7, [r0, #-4]
 810710c:	f100 0004 	add.w	r0, r0, #4
 8107110:	f6ff abef 	blt.w	81068f2 <forward_lite_dw_3x3_sssa8_ch+0x7e>
 8107114:	e402      	b.n	810691c <forward_lite_dw_3x3_sssa8_ch+0xa8>
 8107116:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8107118:	ea5f 0c96 	movs.w	ip, r6, lsr #2
 810711c:	eb03 00c6 	add.w	r0, r3, r6, lsl #3
 8107120:	9010      	str	r0, [sp, #64]	; 0x40
 8107122:	f000 8138 	beq.w	8107396 <forward_lite_dw_3x3_sssa8_ch+0xb22>
 8107126:	f10c 33ff 	add.w	r3, ip, #4294967295	; 0xffffffff
 810712a:	f10e 0204 	add.w	r2, lr, #4
 810712e:	b29b      	uxth	r3, r3
 8107130:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8107134:	eb06 0246 	add.w	r2, r6, r6, lsl #1
 8107138:	9204      	str	r2, [sp, #16]
 810713a:	00b2      	lsls	r2, r6, #2
 810713c:	9203      	str	r2, [sp, #12]
 810713e:	eb06 0286 	add.w	r2, r6, r6, lsl #2
 8107142:	9301      	str	r3, [sp, #4]
 8107144:	4671      	mov	r1, lr
 8107146:	eb0e 0306 	add.w	r3, lr, r6
 810714a:	ea4f 0846 	mov.w	r8, r6, lsl #1
 810714e:	9202      	str	r2, [sp, #8]
 8107150:	eba9 0a06 	sub.w	sl, r9, r6
 8107154:	901b      	str	r0, [sp, #108]	; 0x6c
 8107156:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
 8107158:	680d      	ldr	r5, [r1, #0]
 810715a:	1d22      	adds	r2, r4, #4
 810715c:	921b      	str	r2, [sp, #108]	; 0x6c
 810715e:	681a      	ldr	r2, [r3, #0]
 8107160:	eac5 4002 	pkhbt	r0, r5, r2, lsl #16
 8107164:	eac2 4225 	pkhtb	r2, r2, r5, asr #16
 8107168:	fa2f f580 	sxtb16	r5, r0
 810716c:	6025      	str	r5, [r4, #0]
 810716e:	fa2f f090 	sxtb16	r0, r0, ror #8
 8107172:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
 8107174:	6020      	str	r0, [r4, #0]
 8107176:	3404      	adds	r4, #4
 8107178:	941b      	str	r4, [sp, #108]	; 0x6c
 810717a:	981b      	ldr	r0, [sp, #108]	; 0x6c
 810717c:	fa2f f482 	sxtb16	r4, r2
 8107180:	3004      	adds	r0, #4
 8107182:	f840 4c04 	str.w	r4, [r0, #-4]
 8107186:	901b      	str	r0, [sp, #108]	; 0x6c
 8107188:	fa2f f292 	sxtb16	r2, r2, ror #8
 810718c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 810718e:	6002      	str	r2, [r0, #0]
 8107190:	3004      	adds	r0, #4
 8107192:	901b      	str	r0, [sp, #108]	; 0x6c
 8107194:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
 8107196:	f858 5001 	ldr.w	r5, [r8, r1]
 810719a:	1d22      	adds	r2, r4, #4
 810719c:	921b      	str	r2, [sp, #108]	; 0x6c
 810719e:	f858 2003 	ldr.w	r2, [r8, r3]
 81071a2:	eac5 4002 	pkhbt	r0, r5, r2, lsl #16
 81071a6:	eac2 4225 	pkhtb	r2, r2, r5, asr #16
 81071aa:	fa2f f580 	sxtb16	r5, r0
 81071ae:	6025      	str	r5, [r4, #0]
 81071b0:	fa2f f090 	sxtb16	r0, r0, ror #8
 81071b4:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
 81071b6:	6020      	str	r0, [r4, #0]
 81071b8:	3404      	adds	r4, #4
 81071ba:	941b      	str	r4, [sp, #108]	; 0x6c
 81071bc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 81071be:	fa2f f482 	sxtb16	r4, r2
 81071c2:	3004      	adds	r0, #4
 81071c4:	f840 4c04 	str.w	r4, [r0, #-4]
 81071c8:	901b      	str	r0, [sp, #108]	; 0x6c
 81071ca:	fa2f f292 	sxtb16	r2, r2, ror #8
 81071ce:	981b      	ldr	r0, [sp, #108]	; 0x6c
 81071d0:	6002      	str	r2, [r0, #0]
 81071d2:	3004      	adds	r0, #4
 81071d4:	901b      	str	r0, [sp, #108]	; 0x6c
 81071d6:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
 81071d8:	9a04      	ldr	r2, [sp, #16]
 81071da:	58d5      	ldr	r5, [r2, r3]
 81071dc:	1d22      	adds	r2, r4, #4
 81071de:	921b      	str	r2, [sp, #108]	; 0x6c
 81071e0:	9a03      	ldr	r2, [sp, #12]
 81071e2:	58d2      	ldr	r2, [r2, r3]
 81071e4:	eac5 4002 	pkhbt	r0, r5, r2, lsl #16
 81071e8:	eac2 4225 	pkhtb	r2, r2, r5, asr #16
 81071ec:	fa2f f580 	sxtb16	r5, r0
 81071f0:	6025      	str	r5, [r4, #0]
 81071f2:	fa2f f090 	sxtb16	r0, r0, ror #8
 81071f6:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
 81071f8:	6020      	str	r0, [r4, #0]
 81071fa:	3404      	adds	r4, #4
 81071fc:	941b      	str	r4, [sp, #108]	; 0x6c
 81071fe:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8107200:	fa2f f482 	sxtb16	r4, r2
 8107204:	3004      	adds	r0, #4
 8107206:	f840 4c04 	str.w	r4, [r0, #-4]
 810720a:	901b      	str	r0, [sp, #108]	; 0x6c
 810720c:	fa2f f292 	sxtb16	r2, r2, ror #8
 8107210:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8107212:	6002      	str	r2, [r0, #0]
 8107214:	3004      	adds	r0, #4
 8107216:	901b      	str	r0, [sp, #108]	; 0x6c
 8107218:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
 810721a:	9a02      	ldr	r2, [sp, #8]
 810721c:	58d5      	ldr	r5, [r2, r3]
 810721e:	1d22      	adds	r2, r4, #4
 8107220:	921b      	str	r2, [sp, #108]	; 0x6c
 8107222:	f85a 2001 	ldr.w	r2, [sl, r1]
 8107226:	eac5 4002 	pkhbt	r0, r5, r2, lsl #16
 810722a:	eac2 4225 	pkhtb	r2, r2, r5, asr #16
 810722e:	fa2f f580 	sxtb16	r5, r0
 8107232:	6025      	str	r5, [r4, #0]
 8107234:	fa2f f090 	sxtb16	r0, r0, ror #8
 8107238:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
 810723a:	6020      	str	r0, [r4, #0]
 810723c:	3404      	adds	r4, #4
 810723e:	941b      	str	r4, [sp, #108]	; 0x6c
 8107240:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8107242:	fa2f f482 	sxtb16	r4, r2
 8107246:	3004      	adds	r0, #4
 8107248:	f840 4c04 	str.w	r4, [r0, #-4]
 810724c:	901b      	str	r0, [sp, #108]	; 0x6c
 810724e:	fa2f f292 	sxtb16	r2, r2, ror #8
 8107252:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8107254:	6002      	str	r2, [r0, #0]
 8107256:	3004      	adds	r0, #4
 8107258:	901b      	str	r0, [sp, #108]	; 0x6c
 810725a:	981b      	ldr	r0, [sp, #108]	; 0x6c
 810725c:	f85a 2003 	ldr.w	r2, [sl, r3]
 8107260:	eac2 2402 	pkhbt	r4, r2, r2, lsl #8
 8107264:	fa2f f484 	sxtb16	r4, r4
 8107268:	8004      	strh	r4, [r0, #0]
 810726a:	0c24      	lsrs	r4, r4, #16
 810726c:	8044      	strh	r4, [r0, #2]
 810726e:	eac2 6222 	pkhtb	r2, r2, r2, asr #24
 8107272:	fa2f f2a2 	sxtb16	r2, r2, ror #16
 8107276:	8082      	strh	r2, [r0, #4]
 8107278:	0c12      	lsrs	r2, r2, #16
 810727a:	80c2      	strh	r2, [r0, #6]
 810727c:	9a01      	ldr	r2, [sp, #4]
 810727e:	3104      	adds	r1, #4
 8107280:	428a      	cmp	r2, r1
 8107282:	f100 0008 	add.w	r0, r0, #8
 8107286:	f103 0304 	add.w	r3, r3, #4
 810728a:	f47f af63 	bne.w	8107154 <forward_lite_dw_3x3_sssa8_ch+0x8e0>
 810728e:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8107292:	4602      	mov	r2, r0
 8107294:	fa1f fc83 	uxth.w	ip, r3
 8107298:	f016 0303 	ands.w	r3, r6, #3
 810729c:	f43f ab0d 	beq.w	81068ba <forward_lite_dw_3x3_sssa8_ch+0x46>
 81072a0:	3b01      	subs	r3, #1
 81072a2:	eb0e 010c 	add.w	r1, lr, ip
 81072a6:	b29c      	uxth	r4, r3
 81072a8:	f91e 300c 	ldrsb.w	r3, [lr, ip]
 81072ac:	8013      	strh	r3, [r2, #0]
 81072ae:	5788      	ldrsb	r0, [r1, r6]
 81072b0:	8050      	strh	r0, [r2, #2]
 81072b2:	eb01 0346 	add.w	r3, r1, r6, lsl #1
 81072b6:	f911 1016 	ldrsb.w	r1, [r1, r6, lsl #1]
 81072ba:	8091      	strh	r1, [r2, #4]
 81072bc:	5799      	ldrsb	r1, [r3, r6]
 81072be:	80d1      	strh	r1, [r2, #6]
 81072c0:	f913 1016 	ldrsb.w	r1, [r3, r6, lsl #1]
 81072c4:	8111      	strh	r1, [r2, #8]
 81072c6:	eb03 0346 	add.w	r3, r3, r6, lsl #1
 81072ca:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 81072ce:	5798      	ldrsb	r0, [r3, r6]
 81072d0:	8150      	strh	r0, [r2, #10]
 81072d2:	f913 3016 	ldrsb.w	r3, [r3, r6, lsl #1]
 81072d6:	8193      	strh	r3, [r2, #12]
 81072d8:	578b      	ldrsb	r3, [r1, r6]
 81072da:	81d3      	strh	r3, [r2, #14]
 81072dc:	f911 3016 	ldrsb.w	r3, [r1, r6, lsl #1]
 81072e0:	8213      	strh	r3, [r2, #16]
 81072e2:	f10c 0301 	add.w	r3, ip, #1
 81072e6:	b29b      	uxth	r3, r3
 81072e8:	2c00      	cmp	r4, #0
 81072ea:	d042      	beq.n	8107372 <forward_lite_dw_3x3_sssa8_ch+0xafe>
 81072ec:	f91e 1003 	ldrsb.w	r1, [lr, r3]
 81072f0:	8251      	strh	r1, [r2, #18]
 81072f2:	4473      	add	r3, lr
 81072f4:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 81072f8:	5798      	ldrsb	r0, [r3, r6]
 81072fa:	8290      	strh	r0, [r2, #20]
 81072fc:	f913 3016 	ldrsb.w	r3, [r3, r6, lsl #1]
 8107300:	82d3      	strh	r3, [r2, #22]
 8107302:	578b      	ldrsb	r3, [r1, r6]
 8107304:	8313      	strh	r3, [r2, #24]
 8107306:	f911 3016 	ldrsb.w	r3, [r1, r6, lsl #1]
 810730a:	8353      	strh	r3, [r2, #26]
 810730c:	eb01 0346 	add.w	r3, r1, r6, lsl #1
 8107310:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 8107314:	5798      	ldrsb	r0, [r3, r6]
 8107316:	8390      	strh	r0, [r2, #28]
 8107318:	f913 3016 	ldrsb.w	r3, [r3, r6, lsl #1]
 810731c:	83d3      	strh	r3, [r2, #30]
 810731e:	578b      	ldrsb	r3, [r1, r6]
 8107320:	8413      	strh	r3, [r2, #32]
 8107322:	f911 3016 	ldrsb.w	r3, [r1, r6, lsl #1]
 8107326:	8453      	strh	r3, [r2, #34]	; 0x22
 8107328:	f10c 0c02 	add.w	ip, ip, #2
 810732c:	2c01      	cmp	r4, #1
 810732e:	fa1f f58c 	uxth.w	r5, ip
 8107332:	d01e      	beq.n	8107372 <forward_lite_dw_3x3_sssa8_ch+0xafe>
 8107334:	f91e 1005 	ldrsb.w	r1, [lr, r5]
 8107338:	8491      	strh	r1, [r2, #36]	; 0x24
 810733a:	eb0e 0305 	add.w	r3, lr, r5
 810733e:	5799      	ldrsb	r1, [r3, r6]
 8107340:	84d1      	strh	r1, [r2, #38]	; 0x26
 8107342:	f913 1016 	ldrsb.w	r1, [r3, r6, lsl #1]
 8107346:	8511      	strh	r1, [r2, #40]	; 0x28
 8107348:	eb03 0346 	add.w	r3, r3, r6, lsl #1
 810734c:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 8107350:	5798      	ldrsb	r0, [r3, r6]
 8107352:	8550      	strh	r0, [r2, #42]	; 0x2a
 8107354:	f913 3016 	ldrsb.w	r3, [r3, r6, lsl #1]
 8107358:	8593      	strh	r3, [r2, #44]	; 0x2c
 810735a:	578b      	ldrsb	r3, [r1, r6]
 810735c:	85d3      	strh	r3, [r2, #46]	; 0x2e
 810735e:	f911 3016 	ldrsb.w	r3, [r1, r6, lsl #1]
 8107362:	8613      	strh	r3, [r2, #48]	; 0x30
 8107364:	eb01 0146 	add.w	r1, r1, r6, lsl #1
 8107368:	578b      	ldrsb	r3, [r1, r6]
 810736a:	8653      	strh	r3, [r2, #50]	; 0x32
 810736c:	f911 3016 	ldrsb.w	r3, [r1, r6, lsl #1]
 8107370:	8693      	strh	r3, [r2, #52]	; 0x34
 8107372:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8107374:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8107376:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8107378:	44b1      	add	r9, r6
 810737a:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 810737e:	4631      	mov	r1, r6
 8107380:	461c      	mov	r4, r3
 8107382:	9312      	str	r3, [sp, #72]	; 0x48
 8107384:	f000 ff28 	bl	81081d8 <align_factor_ch>
 8107388:	f06f 0315 	mvn.w	r3, #21
 810738c:	fb03 4306 	mla	r3, r3, r6, r4
 8107390:	9311      	str	r3, [sp, #68]	; 0x44
 8107392:	f7ff baa7 	b.w	81068e4 <forward_lite_dw_3x3_sssa8_ch+0x70>
 8107396:	4602      	mov	r2, r0
 8107398:	ea4f 0846 	mov.w	r8, r6, lsl #1
 810739c:	e77c      	b.n	8107298 <forward_lite_dw_3x3_sssa8_ch+0xa24>
 810739e:	bf00      	nop

081073a0 <forward_lite_pw_sssa8_ch>:
 81073a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 81073a4:	b09b      	sub	sp, #108	; 0x6c
 81073a6:	2b02      	cmp	r3, #2
 81073a8:	9217      	str	r2, [sp, #92]	; 0x5c
 81073aa:	f8bd 209c 	ldrh.w	r2, [sp, #156]	; 0x9c
 81073ae:	920d      	str	r2, [sp, #52]	; 0x34
 81073b0:	f99d 20a4 	ldrsb.w	r2, [sp, #164]	; 0xa4
 81073b4:	9212      	str	r2, [sp, #72]	; 0x48
 81073b6:	f89d 20b0 	ldrb.w	r2, [sp, #176]	; 0xb0
 81073ba:	920f      	str	r2, [sp, #60]	; 0x3c
 81073bc:	f8bd 20b8 	ldrh.w	r2, [sp, #184]	; 0xb8
 81073c0:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 81073c4:	f8bd b094 	ldrh.w	fp, [sp, #148]	; 0x94
 81073c8:	f99d a0a8 	ldrsb.w	sl, [sp, #168]	; 0xa8
 81073cc:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 81073ce:	9010      	str	r0, [sp, #64]	; 0x40
 81073d0:	4688      	mov	r8, r1
 81073d2:	9213      	str	r2, [sp, #76]	; 0x4c
 81073d4:	f000 80ce 	beq.w	8107574 <forward_lite_pw_sssa8_ch+0x1d4>
 81073d8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 81073da:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 81073dc:	46c1      	mov	r9, r8
 81073de:	4629      	mov	r1, r5
 81073e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 81073e2:	fb09 f206 	mul.w	r2, r9, r6
 81073e6:	fb03 4302 	mla	r3, r3, r2, r4
 81073ea:	4299      	cmp	r1, r3
 81073ec:	920e      	str	r2, [sp, #56]	; 0x38
 81073ee:	d204      	bcs.n	81073fa <forward_lite_pw_sssa8_ch+0x5a>
 81073f0:	fb02 130b 	mla	r3, r2, fp, r1
 81073f4:	429c      	cmp	r4, r3
 81073f6:	f0c0 80b5 	bcc.w	8107564 <forward_lite_pw_sssa8_ch+0x1c4>
 81073fa:	2301      	movs	r3, #1
 81073fc:	9310      	str	r3, [sp, #64]	; 0x40
 81073fe:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8107400:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8107402:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8107404:	982b      	ldr	r0, [sp, #172]	; 0xac
 8107406:	eba3 0347 	sub.w	r3, r3, r7, lsl #1
 810740a:	4639      	mov	r1, r7
 810740c:	18d3      	adds	r3, r2, r3
 810740e:	9311      	str	r3, [sp, #68]	; 0x44
 8107410:	f000 fee2 	bl	81081d8 <align_factor_ch>
 8107414:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8107416:	9830      	ldr	r0, [sp, #192]	; 0xc0
 8107418:	eb02 0287 	add.w	r2, r2, r7, lsl #2
 810741c:	4639      	mov	r1, r7
 810741e:	9214      	str	r2, [sp, #80]	; 0x50
 8107420:	eb00 07c7 	add.w	r7, r0, r7, lsl #3
 8107424:	2900      	cmp	r1, #0
 8107426:	f000 8162 	beq.w	81076ee <forward_lite_pw_sssa8_ch+0x34e>
 810742a:	942d      	str	r4, [sp, #180]	; 0xb4
 810742c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 810742e:	9515      	str	r5, [sp, #84]	; 0x54
 8107430:	2101      	movs	r1, #1
 8107432:	4654      	mov	r4, sl
 8107434:	f8dd a0b4 	ldr.w	sl, [sp, #180]	; 0xb4
 8107438:	1e98      	subs	r0, r3, #2
 810743a:	468e      	mov	lr, r1
 810743c:	460d      	mov	r5, r1
 810743e:	f930 3f02 	ldrsh.w	r3, [r0, #2]!
 8107442:	1e59      	subs	r1, r3, #1
 8107444:	fa0e fc03 	lsl.w	ip, lr, r3
 8107448:	b289      	uxth	r1, r1
 810744a:	fa04 f303 	lsl.w	r3, r4, r3
 810744e:	2914      	cmp	r1, #20
 8107450:	eb03 035c 	add.w	r3, r3, ip, lsr #1
 8107454:	bf94      	ite	ls
 8107456:	6013      	strls	r3, [r2, #0]
 8107458:	6014      	strhi	r4, [r2, #0]
 810745a:	f102 0204 	add.w	r2, r2, #4
 810745e:	bf88      	it	hi
 8107460:	2500      	movhi	r5, #0
 8107462:	4297      	cmp	r7, r2
 8107464:	d1eb      	bne.n	810743e <forward_lite_pw_sssa8_ch+0x9e>
 8107466:	9518      	str	r5, [sp, #96]	; 0x60
 8107468:	9d15      	ldr	r5, [sp, #84]	; 0x54
 810746a:	4654      	mov	r4, sl
 810746c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 810746e:	2b01      	cmp	r3, #1
 8107470:	f000 811e 	beq.w	81076b0 <forward_lite_pw_sssa8_ch+0x310>
 8107474:	2300      	movs	r3, #0
 8107476:	9315      	str	r3, [sp, #84]	; 0x54
 8107478:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 810747a:	07db      	lsls	r3, r3, #31
 810747c:	d56f      	bpl.n	810755e <forward_lite_pw_sssa8_ch+0x1be>
 810747e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8107480:	eb09 0306 	add.w	r3, r9, r6
 8107484:	3302      	adds	r3, #2
 8107486:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 810748a:	9313      	str	r3, [sp, #76]	; 0x4c
 810748c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 810748e:	2b00      	cmp	r3, #0
 8107490:	d062      	beq.n	8107558 <forward_lite_pw_sssa8_ch+0x1b8>
 8107492:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8107494:	942d      	str	r4, [sp, #180]	; 0xb4
 8107496:	fb03 f309 	mul.w	r3, r3, r9
 810749a:	fb09 fa0b 	mul.w	sl, r9, fp
 810749e:	465c      	mov	r4, fp
 81074a0:	9926      	ldr	r1, [sp, #152]	; 0x98
 81074a2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 81074a4:	f8dd b0b4 	ldr.w	fp, [sp, #180]	; 0xb4
 81074a8:	9316      	str	r3, [sp, #88]	; 0x58
 81074aa:	2600      	movs	r6, #0
 81074ac:	e023      	b.n	81074f6 <forward_lite_pw_sssa8_ch+0x156>
 81074ae:	9b15      	ldr	r3, [sp, #84]	; 0x54
 81074b0:	9228      	str	r2, [sp, #160]	; 0xa0
 81074b2:	e9cd 730a 	strd	r7, r3, [sp, #40]	; 0x28
 81074b6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 81074b8:	9126      	str	r1, [sp, #152]	; 0x98
 81074ba:	e9cd 9308 	strd	r9, r3, [sp, #32]
 81074be:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 81074c0:	9307      	str	r3, [sp, #28]
 81074c2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 81074c4:	e9cd 4305 	strd	r4, r3, [sp, #20]
 81074c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 81074ca:	9304      	str	r3, [sp, #16]
 81074cc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 81074ce:	9303      	str	r3, [sp, #12]
 81074d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 81074d2:	9302      	str	r3, [sp, #8]
 81074d4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 81074d6:	9301      	str	r3, [sp, #4]
 81074d8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 81074da:	9300      	str	r3, [sp, #0]
 81074dc:	4628      	mov	r0, r5
 81074de:	465b      	mov	r3, fp
 81074e0:	f002 fd36 	bl	8109f50 <st_sssa8_ch_nn_mat_mult_pw_nt_t>
 81074e4:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 81074e6:	9926      	ldr	r1, [sp, #152]	; 0x98
 81074e8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 81074ea:	449b      	add	fp, r3
 81074ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 81074ee:	3601      	adds	r6, #1
 81074f0:	42b3      	cmp	r3, r6
 81074f2:	4455      	add	r5, sl
 81074f4:	d030      	beq.n	8107558 <forward_lite_pw_sssa8_ch+0x1b8>
 81074f6:	f1b8 0f05 	cmp.w	r8, #5
 81074fa:	d1d8      	bne.n	81074ae <forward_lite_pw_sssa8_ch+0x10e>
 81074fc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 81074fe:	2b19      	cmp	r3, #25
 8107500:	d1d5      	bne.n	81074ae <forward_lite_pw_sssa8_ch+0x10e>
 8107502:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8107504:	2b40      	cmp	r3, #64	; 0x40
 8107506:	d1d2      	bne.n	81074ae <forward_lite_pw_sssa8_ch+0x10e>
 8107508:	2c40      	cmp	r4, #64	; 0x40
 810750a:	d1d0      	bne.n	81074ae <forward_lite_pw_sssa8_ch+0x10e>
 810750c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 810750e:	3380      	adds	r3, #128	; 0x80
 8107510:	d1cd      	bne.n	81074ae <forward_lite_pw_sssa8_ch+0x10e>
 8107512:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8107514:	2b00      	cmp	r3, #0
 8107516:	d0ca      	beq.n	81074ae <forward_lite_pw_sssa8_ch+0x10e>
 8107518:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 810751a:	2b03      	cmp	r3, #3
 810751c:	d1c7      	bne.n	81074ae <forward_lite_pw_sssa8_ch+0x10e>
 810751e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8107520:	9404      	str	r4, [sp, #16]
 8107522:	e9cd 730a 	strd	r7, r3, [sp, #40]	; 0x28
 8107526:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8107528:	9228      	str	r2, [sp, #160]	; 0xa0
 810752a:	e9cd 8308 	strd	r8, r3, [sp, #32]
 810752e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8107530:	9307      	str	r3, [sp, #28]
 8107532:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8107534:	9126      	str	r1, [sp, #152]	; 0x98
 8107536:	e9cd 4305 	strd	r4, r3, [sp, #20]
 810753a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 810753c:	9303      	str	r3, [sp, #12]
 810753e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8107540:	9302      	str	r3, [sp, #8]
 8107542:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8107544:	9301      	str	r3, [sp, #4]
 8107546:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8107548:	9300      	str	r3, [sp, #0]
 810754a:	4628      	mov	r0, r5
 810754c:	465b      	mov	r3, fp
 810754e:	f003 f8af 	bl	810a6b0 <st_sssa8_ch_nn_mat_mult_pw_nt_t_KWS>
 8107552:	9926      	ldr	r1, [sp, #152]	; 0x98
 8107554:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8107556:	e7c7      	b.n	81074e8 <forward_lite_pw_sssa8_ch+0x148>
 8107558:	b01b      	add	sp, #108	; 0x6c
 810755a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 810755e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8107560:	9313      	str	r3, [sp, #76]	; 0x4c
 8107562:	e793      	b.n	810748c <forward_lite_pw_sssa8_ch+0xec>
 8107564:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8107566:	9310      	str	r3, [sp, #64]	; 0x40
 8107568:	2301      	movs	r3, #1
 810756a:	9317      	str	r3, [sp, #92]	; 0x5c
 810756c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8107570:	461e      	mov	r6, r3
 8107572:	e744      	b.n	81073fe <forward_lite_pw_sssa8_ch+0x5e>
 8107574:	2d02      	cmp	r5, #2
 8107576:	f47f af2f 	bne.w	81073d8 <forward_lite_pw_sssa8_ch+0x38>
 810757a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 810757c:	2b00      	cmp	r3, #0
 810757e:	f000 80b9 	beq.w	81076f4 <forward_lite_pw_sssa8_ch+0x354>
 8107582:	1e4b      	subs	r3, r1, #1
 8107584:	085b      	lsrs	r3, r3, #1
 8107586:	fb0b f303 	mul.w	r3, fp, r3
 810758a:	9318      	str	r3, [sp, #96]	; 0x60
 810758c:	fb01 f30b 	mul.w	r3, r1, fp
 8107590:	005b      	lsls	r3, r3, #1
 8107592:	9316      	str	r3, [sp, #88]	; 0x58
 8107594:	ea4f 03db 	mov.w	r3, fp, lsr #3
 8107598:	ea4f 0e9b 	mov.w	lr, fp, lsr #2
 810759c:	2200      	movs	r2, #0
 810759e:	00db      	lsls	r3, r3, #3
 81075a0:	930e      	str	r3, [sp, #56]	; 0x38
 81075a2:	9215      	str	r2, [sp, #84]	; 0x54
 81075a4:	f02e 0301 	bic.w	r3, lr, #1
 81075a8:	9214      	str	r2, [sp, #80]	; 0x50
 81075aa:	f10e 32ff 	add.w	r2, lr, #4294967295	; 0xffffffff
 81075ae:	f00b 0703 	and.w	r7, fp, #3
 81075b2:	009d      	lsls	r5, r3, #2
 81075b4:	ea4f 068e 	mov.w	r6, lr, lsl #2
 81075b8:	4601      	mov	r1, r0
 81075ba:	9011      	str	r0, [sp, #68]	; 0x44
 81075bc:	4699      	mov	r9, r3
 81075be:	f8cd a064 	str.w	sl, [sp, #100]	; 0x64
 81075c2:	942d      	str	r4, [sp, #180]	; 0xb4
 81075c4:	4694      	mov	ip, r2
 81075c6:	f1b8 0f00 	cmp.w	r8, #0
 81075ca:	d044      	beq.n	8107656 <forward_lite_pw_sssa8_ch+0x2b6>
 81075cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 81075ce:	2400      	movs	r4, #0
 81075d0:	f1be 0f00 	cmp.w	lr, #0
 81075d4:	d026      	beq.n	8107624 <forward_lite_pw_sssa8_ch+0x284>
 81075d6:	ea43 0201 	orr.w	r2, r3, r1
 81075da:	f1bc 0f08 	cmp.w	ip, #8
 81075de:	f3c2 0202 	ubfx	r2, r2, #0, #3
 81075e2:	bf94      	ite	ls
 81075e4:	2000      	movls	r0, #0
 81075e6:	2001      	movhi	r0, #1
 81075e8:	2a00      	cmp	r2, #0
 81075ea:	bf18      	it	ne
 81075ec:	2000      	movne	r0, #0
 81075ee:	2800      	cmp	r0, #0
 81075f0:	d074      	beq.n	81076dc <forward_lite_pw_sssa8_ch+0x33c>
 81075f2:	43da      	mvns	r2, r3
 81075f4:	440a      	add	r2, r1
 81075f6:	2a06      	cmp	r2, #6
 81075f8:	d970      	bls.n	81076dc <forward_lite_pw_sssa8_ch+0x33c>
 81075fa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 81075fc:	f1a3 0008 	sub.w	r0, r3, #8
 8107600:	eb01 0a02 	add.w	sl, r1, r2
 8107604:	460a      	mov	r2, r1
 8107606:	ed90 7b02 	vldr	d7, [r0, #8]
 810760a:	eca2 7b02 	vstmia	r2!, {d7}
 810760e:	4592      	cmp	sl, r2
 8107610:	f100 0008 	add.w	r0, r0, #8
 8107614:	d1f7      	bne.n	8107606 <forward_lite_pw_sssa8_ch+0x266>
 8107616:	45ce      	cmp	lr, r9
 8107618:	bf1c      	itt	ne
 810761a:	595a      	ldrne	r2, [r3, r5]
 810761c:	514a      	strne	r2, [r1, r5]
 810761e:	199a      	adds	r2, r3, r6
 8107620:	4613      	mov	r3, r2
 8107622:	4431      	add	r1, r6
 8107624:	b177      	cbz	r7, 8107644 <forward_lite_pw_sssa8_ch+0x2a4>
 8107626:	f993 2000 	ldrsb.w	r2, [r3]
 810762a:	700a      	strb	r2, [r1, #0]
 810762c:	2f01      	cmp	r7, #1
 810762e:	d007      	beq.n	8107640 <forward_lite_pw_sssa8_ch+0x2a0>
 8107630:	f993 2001 	ldrsb.w	r2, [r3, #1]
 8107634:	704a      	strb	r2, [r1, #1]
 8107636:	2f03      	cmp	r7, #3
 8107638:	bf04      	itt	eq
 810763a:	f993 2002 	ldrsbeq.w	r2, [r3, #2]
 810763e:	708a      	strbeq	r2, [r1, #2]
 8107640:	443b      	add	r3, r7
 8107642:	4439      	add	r1, r7
 8107644:	3402      	adds	r4, #2
 8107646:	4544      	cmp	r4, r8
 8107648:	445b      	add	r3, fp
 810764a:	dbc1      	blt.n	81075d0 <forward_lite_pw_sssa8_ch+0x230>
 810764c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 810764e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8107650:	445b      	add	r3, fp
 8107652:	18d3      	adds	r3, r2, r3
 8107654:	9315      	str	r3, [sp, #84]	; 0x54
 8107656:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8107658:	9816      	ldr	r0, [sp, #88]	; 0x58
 810765a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 810765c:	4402      	add	r2, r0
 810765e:	9211      	str	r2, [sp, #68]	; 0x44
 8107660:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8107662:	3302      	adds	r3, #2
 8107664:	4293      	cmp	r3, r2
 8107666:	9314      	str	r3, [sp, #80]	; 0x50
 8107668:	dbad      	blt.n	81075c6 <forward_lite_pw_sssa8_ch+0x226>
 810766a:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 810766e:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8107670:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8107672:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8107674:	9810      	ldr	r0, [sp, #64]	; 0x40
 8107676:	edcd 0a11 	vstr	s1, [sp, #68]	; 0x44
 810767a:	fb06 f308 	mul.w	r3, r6, r8
 810767e:	1a85      	subs	r5, r0, r2
 8107680:	fb0b 5503 	mla	r5, fp, r3, r5
 8107684:	4629      	mov	r1, r5
 8107686:	ed8d 0a0e 	vstr	s0, [sp, #56]	; 0x38
 810768a:	f001 fc81 	bl	8108f90 <st_int8_copy>
 810768e:	1c73      	adds	r3, r6, #1
 8107690:	f108 0201 	add.w	r2, r8, #1
 8107694:	105e      	asrs	r6, r3, #1
 8107696:	f3c3 034f 	ubfx	r3, r3, #1, #16
 810769a:	eddd 0a11 	vldr	s1, [sp, #68]	; 0x44
 810769e:	ed9d 0a0e 	vldr	s0, [sp, #56]	; 0x38
 81076a2:	9910      	ldr	r1, [sp, #64]	; 0x40
 81076a4:	9317      	str	r3, [sp, #92]	; 0x5c
 81076a6:	ea4f 0962 	mov.w	r9, r2, asr #1
 81076aa:	f3c2 084f 	ubfx	r8, r2, #1, #16
 81076ae:	e697      	b.n	81073e0 <forward_lite_pw_sssa8_ch+0x40>
 81076b0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 81076b2:	992f      	ldr	r1, [sp, #188]	; 0xbc
 81076b4:	f06f 0309 	mvn.w	r3, #9
 81076b8:	fb03 1302 	mla	r3, r3, r2, r1
 81076bc:	fb02 f20b 	mul.w	r2, r2, fp
 81076c0:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 81076c4:	f6ff aed6 	blt.w	8107474 <forward_lite_pw_sssa8_ch+0xd4>
 81076c8:	e9cd b700 	strd	fp, r7, [sp]
 81076cc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 81076ce:	990d      	ldr	r1, [sp, #52]	; 0x34
 81076d0:	9826      	ldr	r0, [sp, #152]	; 0x98
 81076d2:	465b      	mov	r3, fp
 81076d4:	f001 ffc8 	bl	8109668 <st_sssa8_ch_fullW_prefetch>
 81076d8:	9715      	str	r7, [sp, #84]	; 0x54
 81076da:	e6cd      	b.n	8107478 <forward_lite_pw_sssa8_ch+0xd8>
 81076dc:	199a      	adds	r2, r3, r6
 81076de:	4608      	mov	r0, r1
 81076e0:	f853 ab04 	ldr.w	sl, [r3], #4
 81076e4:	f840 ab04 	str.w	sl, [r0], #4
 81076e8:	429a      	cmp	r2, r3
 81076ea:	d1f9      	bne.n	81076e0 <forward_lite_pw_sssa8_ch+0x340>
 81076ec:	e798      	b.n	8107620 <forward_lite_pw_sssa8_ch+0x280>
 81076ee:	2301      	movs	r3, #1
 81076f0:	9318      	str	r3, [sp, #96]	; 0x60
 81076f2:	e6bb      	b.n	810746c <forward_lite_pw_sssa8_ch+0xcc>
 81076f4:	461a      	mov	r2, r3
 81076f6:	e7bc      	b.n	8107672 <forward_lite_pw_sssa8_ch+0x2d2>

081076f8 <forward_lite_conv2d_rgb_sssa8_ch>:
 81076f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 81076fc:	ed2d 8b02 	vpush	{d8}
 8107700:	b0d3      	sub	sp, #332	; 0x14c
 8107702:	460f      	mov	r7, r1
 8107704:	f8dd 81a0 	ldr.w	r8, [sp, #416]	; 0x1a0
 8107708:	9e69      	ldr	r6, [sp, #420]	; 0x1a4
 810770a:	f8bd 4178 	ldrh.w	r4, [sp, #376]	; 0x178
 810770e:	9420      	str	r4, [sp, #128]	; 0x80
 8107710:	4619      	mov	r1, r3
 8107712:	eba8 0343 	sub.w	r3, r8, r3, lsl #1
 8107716:	18f4      	adds	r4, r6, r3
 8107718:	4693      	mov	fp, r2
 810771a:	ee08 2a90 	vmov	s17, r2
 810771e:	4632      	mov	r2, r6
 8107720:	f8bd 617c 	ldrh.w	r6, [sp, #380]	; 0x17c
 8107724:	9624      	str	r6, [sp, #144]	; 0x90
 8107726:	f8bd 6180 	ldrh.w	r6, [sp, #384]	; 0x180
 810772a:	960e      	str	r6, [sp, #56]	; 0x38
 810772c:	f99d 618c 	ldrsb.w	r6, [sp, #396]	; 0x18c
 8107730:	f99d 3188 	ldrsb.w	r3, [sp, #392]	; 0x188
 8107734:	960b      	str	r6, [sp, #44]	; 0x2c
 8107736:	f89d 6194 	ldrb.w	r6, [sp, #404]	; 0x194
 810773a:	900a      	str	r0, [sp, #40]	; 0x28
 810773c:	9317      	str	r3, [sp, #92]	; 0x5c
 810773e:	9864      	ldr	r0, [sp, #400]	; 0x190
 8107740:	9625      	str	r6, [sp, #148]	; 0x94
 8107742:	4623      	mov	r3, r4
 8107744:	f8bd 619c 	ldrh.w	r6, [sp, #412]	; 0x19c
 8107748:	9113      	str	r1, [sp, #76]	; 0x4c
 810774a:	468a      	mov	sl, r1
 810774c:	004d      	lsls	r5, r1, #1
 810774e:	960c      	str	r6, [sp, #48]	; 0x30
 8107750:	f8dd 9198 	ldr.w	r9, [sp, #408]	; 0x198
 8107754:	f000 fd40 	bl	81081d8 <align_factor_ch>
 8107758:	9e61      	ldr	r6, [sp, #388]	; 0x184
 810775a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 810775c:	9601      	str	r6, [sp, #4]
 810775e:	4652      	mov	r2, sl
 8107760:	9e69      	ldr	r6, [sp, #420]	; 0x1a4
 8107762:	9820      	ldr	r0, [sp, #128]	; 0x80
 8107764:	9302      	str	r3, [sp, #8]
 8107766:	18ab      	adds	r3, r5, r2
 8107768:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 810776c:	9603      	str	r6, [sp, #12]
 810776e:	9000      	str	r0, [sp, #0]
 8107770:	9311      	str	r3, [sp, #68]	; 0x44
 8107772:	4682      	mov	sl, r0
 8107774:	4603      	mov	r3, r0
 8107776:	4659      	mov	r1, fp
 8107778:	2003      	movs	r0, #3
 810777a:	4616      	mov	r6, r2
 810777c:	f001 f9be 	bl	8108afc <st_sssa8_ch_convolve_rank1upd>
 8107780:	fb1a f30a 	smulbb	r3, sl, sl
 8107784:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8107788:	9911      	ldr	r1, [sp, #68]	; 0x44
 810778a:	b298      	uxth	r0, r3
 810778c:	ebc6 7346 	rsb	r3, r6, r6, lsl #29
 8107790:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8107794:	932c      	str	r3, [sp, #176]	; 0xb0
 8107796:	eb03 0386 	add.w	r3, r3, r6, lsl #2
 810779a:	9012      	str	r0, [sp, #72]	; 0x48
 810779c:	932d      	str	r3, [sp, #180]	; 0xb4
 810779e:	b1de      	cbz	r6, 81077d8 <forward_lite_conv2d_rgb_sssa8_ch+0xe0>
 81077a0:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 81077a2:	4621      	mov	r1, r4
 81077a4:	1d1a      	adds	r2, r3, #4
 81077a6:	442c      	add	r4, r5
 81077a8:	f04f 0c01 	mov.w	ip, #1
 81077ac:	f931 3b02 	ldrsh.w	r3, [r1], #2
 81077b0:	1e58      	subs	r0, r3, #1
 81077b2:	b280      	uxth	r0, r0
 81077b4:	fa0c fe03 	lsl.w	lr, ip, r3
 81077b8:	2814      	cmp	r0, #20
 81077ba:	fa06 f303 	lsl.w	r3, r6, r3
 81077be:	eb03 035e 	add.w	r3, r3, lr, lsr #1
 81077c2:	f200 810a 	bhi.w	81079da <forward_lite_conv2d_rgb_sssa8_ch+0x2e2>
 81077c6:	42a1      	cmp	r1, r4
 81077c8:	f842 3c04 	str.w	r3, [r2, #-4]
 81077cc:	f102 0204 	add.w	r2, r2, #4
 81077d0:	d1ec      	bne.n	81077ac <forward_lite_conv2d_rgb_sssa8_ch+0xb4>
 81077d2:	9b69      	ldr	r3, [sp, #420]	; 0x1a4
 81077d4:	eb03 0408 	add.w	r4, r3, r8
 81077d8:	1b63      	subs	r3, r4, r5
 81077da:	932e      	str	r3, [sp, #184]	; 0xb8
 81077dc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 81077de:	9c20      	ldr	r4, [sp, #128]	; 0x80
 81077e0:	f013 0f01 	tst.w	r3, #1
 81077e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 81077e6:	bf18      	it	ne
 81077e8:	3302      	addne	r3, #2
 81077ea:	fb03 f303 	mul.w	r3, r3, r3
 81077ee:	931b      	str	r3, [sp, #108]	; 0x6c
 81077f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 81077f2:	e9cd 3337 	strd	r3, r3, [sp, #220]	; 0xdc
 81077f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 81077f8:	e9cd 334c 	strd	r3, r3, [sp, #304]	; 0x130
 81077fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 81077fe:	e9cd 334a 	strd	r3, r3, [sp, #296]	; 0x128
 8107802:	ab3a      	add	r3, sp, #232	; 0xe8
 8107804:	9300      	str	r3, [sp, #0]
 8107806:	aa32      	add	r2, sp, #200	; 0xc8
 8107808:	ab36      	add	r3, sp, #216	; 0xd8
 810780a:	a948      	add	r1, sp, #288	; 0x120
 810780c:	a83e      	add	r0, sp, #248	; 0xf8
 810780e:	e9cd 443b 	strd	r4, r4, [sp, #236]	; 0xec
 8107812:	e9cd 7733 	strd	r7, r7, [sp, #204]	; 0xcc
 8107816:	f000 fdf9 	bl	810840c <ai_padding_opt_init>
 810781a:	9913      	ldr	r1, [sp, #76]	; 0x4c
 810781c:	fb04 f304 	mul.w	r3, r4, r4
 8107820:	fb01 f203 	mul.w	r2, r1, r3
 8107824:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8107828:	f5b2 6f20 	cmp.w	r2, #2560	; 0xa00
 810782c:	bfa8      	it	ge
 810782e:	f44f 6220 	movge.w	r2, #2560	; 0xa00
 8107832:	4614      	mov	r4, r2
 8107834:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8107836:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 810783a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 810783e:	930b      	str	r3, [sp, #44]	; 0x2c
 8107840:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8107842:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8107844:	fb01 f303 	mul.w	r3, r1, r3
 8107848:	f3c2 0240 	ubfx	r2, r2, #1, #1
 810784c:	42a3      	cmp	r3, r4
 810784e:	921c      	str	r2, [sp, #112]	; 0x70
 8107850:	f340 81c0 	ble.w	8107bd4 <forward_lite_conv2d_rgb_sssa8_ch+0x4dc>
 8107854:	2300      	movs	r3, #0
 8107856:	9328      	str	r3, [sp, #160]	; 0xa0
 8107858:	9b12      	ldr	r3, [sp, #72]	; 0x48
 810785a:	fbb4 f3f3 	udiv	r3, r4, r3
 810785e:	b29b      	uxth	r3, r3
 8107860:	4619      	mov	r1, r3
 8107862:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8107864:	4299      	cmp	r1, r3
 8107866:	bf28      	it	cs
 8107868:	4619      	movcs	r1, r3
 810786a:	fbb3 f2f1 	udiv	r2, r3, r1
 810786e:	fb01 3312 	mls	r3, r1, r2, r3
 8107872:	b29b      	uxth	r3, r3
 8107874:	b292      	uxth	r2, r2
 8107876:	9129      	str	r1, [sp, #164]	; 0xa4
 8107878:	9221      	str	r2, [sp, #132]	; 0x84
 810787a:	b11b      	cbz	r3, 8107884 <forward_lite_conv2d_rgb_sssa8_ch+0x18c>
 810787c:	4613      	mov	r3, r2
 810787e:	3301      	adds	r3, #1
 8107880:	b29b      	uxth	r3, r3
 8107882:	9321      	str	r3, [sp, #132]	; 0x84
 8107884:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8107886:	2a00      	cmp	r2, #0
 8107888:	f000 8192 	beq.w	8107bb0 <forward_lite_conv2d_rgb_sssa8_ch+0x4b8>
 810788c:	9820      	ldr	r0, [sp, #128]	; 0x80
 810788e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8107890:	1ac1      	subs	r1, r0, r3
 8107892:	fb07 f303 	mul.w	r3, r7, r3
 8107896:	425b      	negs	r3, r3
 8107898:	9310      	str	r3, [sp, #64]	; 0x40
 810789a:	1cd3      	adds	r3, r2, #3
 810789c:	444b      	add	r3, r9
 810789e:	e9cd 3922 	strd	r3, r9, [sp, #136]	; 0x88
 81078a2:	eb00 0340 	add.w	r3, r0, r0, lsl #1
 81078a6:	005b      	lsls	r3, r3, #1
 81078a8:	930d      	str	r3, [sp, #52]	; 0x34
 81078aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 81078ac:	912b      	str	r1, [sp, #172]	; 0xac
 81078ae:	fb07 f303 	mul.w	r3, r7, r3
 81078b2:	932f      	str	r3, [sp, #188]	; 0xbc
 81078b4:	1c93      	adds	r3, r2, #2
 81078b6:	9330      	str	r3, [sp, #192]	; 0xc0
 81078b8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 81078ba:	fb02 f303 	mul.w	r3, r2, r3
 81078be:	9331      	str	r3, [sp, #196]	; 0xc4
 81078c0:	2301      	movs	r3, #1
 81078c2:	4688      	mov	r8, r1
 81078c4:	931f      	str	r3, [sp, #124]	; 0x7c
 81078c6:	a83e      	add	r0, sp, #248	; 0xf8
 81078c8:	f000 fdf8 	bl	81084bc <ai_padding_opt_phase1>
 81078cc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 81078ce:	2b03      	cmp	r3, #3
 81078d0:	f000 817b 	beq.w	8107bca <forward_lite_conv2d_rgb_sssa8_ch+0x4d2>
 81078d4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 81078d6:	9316      	str	r3, [sp, #88]	; 0x58
 81078d8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 81078da:	9327      	str	r3, [sp, #156]	; 0x9c
 81078dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 81078de:	2b00      	cmp	r3, #0
 81078e0:	f000 816b 	beq.w	8107bba <forward_lite_conv2d_rgb_sssa8_ch+0x4c2>
 81078e4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 81078e6:	2b00      	cmp	r3, #0
 81078e8:	f000 814c 	beq.w	8107b84 <forward_lite_conv2d_rgb_sssa8_ch+0x48c>
 81078ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 81078ee:	edcd 8a26 	vstr	s17, [sp, #152]	; 0x98
 81078f2:	eba8 0303 	sub.w	r3, r8, r3
 81078f6:	930f      	str	r3, [sp, #60]	; 0x3c
 81078f8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 81078fa:	931e      	str	r3, [sp, #120]	; 0x78
 81078fc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 81078fe:	931d      	str	r3, [sp, #116]	; 0x74
 8107900:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8107902:	9315      	str	r3, [sp, #84]	; 0x54
 8107904:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8107906:	9318      	str	r3, [sp, #96]	; 0x60
 8107908:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 810790a:	ee08 3a10 	vmov	s16, r3
 810790e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8107910:	9319      	str	r3, [sp, #100]	; 0x64
 8107912:	9b69      	ldr	r3, [sp, #420]	; 0x1a4
 8107914:	931a      	str	r3, [sp, #104]	; 0x68
 8107916:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8107918:	425b      	negs	r3, r3
 810791a:	932a      	str	r3, [sp, #168]	; 0xa8
 810791c:	9a42      	ldr	r2, [sp, #264]	; 0x108
 810791e:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8107920:	9916      	ldr	r1, [sp, #88]	; 0x58
 8107922:	923f      	str	r2, [sp, #252]	; 0xfc
 8107924:	9a43      	ldr	r2, [sp, #268]	; 0x10c
 8107926:	9240      	str	r2, [sp, #256]	; 0x100
 8107928:	e9dd 542a 	ldrd	r5, r4, [sp, #168]	; 0xa8
 810792c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 810792e:	933e      	str	r3, [sp, #248]	; 0xf8
 8107930:	9114      	str	r1, [sp, #80]	; 0x50
 8107932:	2600      	movs	r6, #0
 8107934:	2b00      	cmp	r3, #0
 8107936:	d047      	beq.n	81079c8 <forward_lite_conv2d_rgb_sssa8_ch+0x2d0>
 8107938:	3b01      	subs	r3, #1
 810793a:	933e      	str	r3, [sp, #248]	; 0xf8
 810793c:	2301      	movs	r3, #1
 810793e:	f8ad 311e 	strh.w	r3, [sp, #286]	; 0x11e
 8107942:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8107944:	4598      	cmp	r8, r3
 8107946:	dd31      	ble.n	81079ac <forward_lite_conv2d_rgb_sssa8_ch+0x2b4>
 8107948:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	; 0x5c
 810794c:	469e      	mov	lr, r3
 810794e:	42a5      	cmp	r5, r4
 8107950:	da28      	bge.n	81079a4 <forward_lite_conv2d_rgb_sssa8_ch+0x2ac>
 8107952:	4577      	cmp	r7, lr
 8107954:	fb0e fc07 	mul.w	ip, lr, r7
 8107958:	d95a      	bls.n	8107a10 <forward_lite_conv2d_rgb_sssa8_ch+0x318>
 810795a:	44ac      	add	ip, r5
 810795c:	1d93      	adds	r3, r2, #6
 810795e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8107960:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8107964:	4494      	add	ip, r2
 8107966:	4628      	mov	r0, r5
 8107968:	f04f 0900 	mov.w	r9, #0
 810796c:	f361 090f 	bfi	r9, r1, #0, #16
 8107970:	42b8      	cmp	r0, r7
 8107972:	f361 491f 	bfi	r9, r1, #16, #16
 8107976:	f1a3 0a06 	sub.w	sl, r3, #6
 810797a:	461a      	mov	r2, r3
 810797c:	d238      	bcs.n	81079f0 <forward_lite_conv2d_rgb_sssa8_ch+0x2f8>
 810797e:	f85c 2b03 	ldr.w	r2, [ip], #3
 8107982:	fa2f f982 	sxtb16	r9, r2
 8107986:	ea4f 2b32 	mov.w	fp, r2, ror #8
 810798a:	3001      	adds	r0, #1
 810798c:	461a      	mov	r2, r3
 810798e:	3306      	adds	r3, #6
 8107990:	42a0      	cmp	r0, r4
 8107992:	fa2f fb8b 	sxtb16	fp, fp
 8107996:	eacb 0b09 	pkhbt	fp, fp, r9
 810799a:	f8ca b002 	str.w	fp, [sl, #2]
 810799e:	f823 9c0c 	strh.w	r9, [r3, #-12]
 81079a2:	d1e1      	bne.n	8107968 <forward_lite_conv2d_rgb_sssa8_ch+0x270>
 81079a4:	f10e 0e01 	add.w	lr, lr, #1
 81079a8:	45c6      	cmp	lr, r8
 81079aa:	dbd0      	blt.n	810794e <forward_lite_conv2d_rgb_sssa8_ch+0x256>
 81079ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 81079ae:	4293      	cmp	r3, r2
 81079b0:	d07c      	beq.n	8107aac <forward_lite_conv2d_rgb_sssa8_ch+0x3b4>
 81079b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 81079b4:	441c      	add	r4, r3
 81079b6:	441d      	add	r5, r3
 81079b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 81079ba:	3601      	adds	r6, #1
 81079bc:	429e      	cmp	r6, r3
 81079be:	f000 8099 	beq.w	8107af4 <forward_lite_conv2d_rgb_sssa8_ch+0x3fc>
 81079c2:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 81079c4:	2b00      	cmp	r3, #0
 81079c6:	d1b7      	bne.n	8107938 <forward_lite_conv2d_rgb_sssa8_ch+0x240>
 81079c8:	9b3f      	ldr	r3, [sp, #252]	; 0xfc
 81079ca:	bbb3      	cbnz	r3, 8107a3a <forward_lite_conv2d_rgb_sssa8_ch+0x342>
 81079cc:	9b40      	ldr	r3, [sp, #256]	; 0x100
 81079ce:	3b01      	subs	r3, #1
 81079d0:	9340      	str	r3, [sp, #256]	; 0x100
 81079d2:	2301      	movs	r3, #1
 81079d4:	f8ad 311e 	strh.w	r3, [sp, #286]	; 0x11e
 81079d8:	e7b3      	b.n	8107942 <forward_lite_conv2d_rgb_sssa8_ch+0x24a>
 81079da:	42a1      	cmp	r1, r4
 81079dc:	f842 6c04 	str.w	r6, [r2, #-4]
 81079e0:	f102 0204 	add.w	r2, r2, #4
 81079e4:	f47f aee2 	bne.w	81077ac <forward_lite_conv2d_rgb_sssa8_ch+0xb4>
 81079e8:	9b69      	ldr	r3, [sp, #420]	; 0x1a4
 81079ea:	eb03 0408 	add.w	r4, r3, r8
 81079ee:	e6f3      	b.n	81077d8 <forward_lite_conv2d_rgb_sssa8_ch+0xe0>
 81079f0:	3001      	adds	r0, #1
 81079f2:	42a0      	cmp	r0, r4
 81079f4:	f843 9c04 	str.w	r9, [r3, #-4]
 81079f8:	f823 1c06 	strh.w	r1, [r3, #-6]
 81079fc:	f10c 0c03 	add.w	ip, ip, #3
 8107a00:	f103 0306 	add.w	r3, r3, #6
 8107a04:	d1b0      	bne.n	8107968 <forward_lite_conv2d_rgb_sssa8_ch+0x270>
 8107a06:	f10e 0e01 	add.w	lr, lr, #1
 8107a0a:	45c6      	cmp	lr, r8
 8107a0c:	db9f      	blt.n	810794e <forward_lite_conv2d_rgb_sssa8_ch+0x256>
 8107a0e:	e7cd      	b.n	81079ac <forward_lite_conv2d_rgb_sssa8_ch+0x2b4>
 8107a10:	4694      	mov	ip, r2
 8107a12:	4628      	mov	r0, r5
 8107a14:	2300      	movs	r3, #0
 8107a16:	3001      	adds	r0, #1
 8107a18:	f361 030f 	bfi	r3, r1, #0, #16
 8107a1c:	f361 431f 	bfi	r3, r1, #16, #16
 8107a20:	42a0      	cmp	r0, r4
 8107a22:	f8ac 1004 	strh.w	r1, [ip, #4]
 8107a26:	f84c 3b06 	str.w	r3, [ip], #6
 8107a2a:	d1f3      	bne.n	8107a14 <forward_lite_conv2d_rgb_sssa8_ch+0x31c>
 8107a2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8107a2e:	f10e 0e01 	add.w	lr, lr, #1
 8107a32:	45c6      	cmp	lr, r8
 8107a34:	441a      	add	r2, r3
 8107a36:	db8a      	blt.n	810794e <forward_lite_conv2d_rgb_sssa8_ch+0x256>
 8107a38:	e7b8      	b.n	81079ac <forward_lite_conv2d_rgb_sssa8_ch+0x2b4>
 8107a3a:	3b01      	subs	r3, #1
 8107a3c:	933f      	str	r3, [sp, #252]	; 0xfc
 8107a3e:	f8bd 311c 	ldrh.w	r3, [sp, #284]	; 0x11c
 8107a42:	f8ad 311e 	strh.w	r3, [sp, #286]	; 0x11e
 8107a46:	2b01      	cmp	r3, #1
 8107a48:	f43f af7b 	beq.w	8107942 <forward_lite_conv2d_rgb_sssa8_ch+0x24a>
 8107a4c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8107a4e:	4598      	cmp	r8, r3
 8107a50:	ddac      	ble.n	81079ac <forward_lite_conv2d_rgb_sssa8_ch+0x2b4>
 8107a52:	990a      	ldr	r1, [sp, #40]	; 0x28
 8107a54:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8107a58:	eba4 0a05 	sub.w	sl, r4, r5
 8107a5c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8107a60:	eb05 0b45 	add.w	fp, r5, r5, lsl #1
 8107a64:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 8107a68:	448b      	add	fp, r1
 8107a6a:	4699      	mov	r9, r3
 8107a6c:	42a5      	cmp	r5, r4
 8107a6e:	da15      	bge.n	8107a9c <forward_lite_conv2d_rgb_sssa8_ch+0x3a4>
 8107a70:	eb0e 004e 	add.w	r0, lr, lr, lsl #1
 8107a74:	4458      	add	r0, fp
 8107a76:	eb02 0c0a 	add.w	ip, r2, sl
 8107a7a:	f850 3b03 	ldr.w	r3, [r0], #3
 8107a7e:	fa2f f183 	sxtb16	r1, r3
 8107a82:	3206      	adds	r2, #6
 8107a84:	4594      	cmp	ip, r2
 8107a86:	ea4f 2333 	mov.w	r3, r3, ror #8
 8107a8a:	f822 1c06 	strh.w	r1, [r2, #-6]
 8107a8e:	fa2f f383 	sxtb16	r3, r3
 8107a92:	eac3 0301 	pkhbt	r3, r3, r1
 8107a96:	f842 3c04 	str.w	r3, [r2, #-4]
 8107a9a:	d1ee      	bne.n	8107a7a <forward_lite_conv2d_rgb_sssa8_ch+0x382>
 8107a9c:	f109 0901 	add.w	r9, r9, #1
 8107aa0:	45c1      	cmp	r9, r8
 8107aa2:	44be      	add	lr, r7
 8107aa4:	d1e2      	bne.n	8107a6c <forward_lite_conv2d_rgb_sssa8_ch+0x374>
 8107aa6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8107aa8:	4293      	cmp	r3, r2
 8107aaa:	d182      	bne.n	81079b2 <forward_lite_conv2d_rgb_sssa8_ch+0x2ba>
 8107aac:	4618      	mov	r0, r3
 8107aae:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8107ab0:	9308      	str	r3, [sp, #32]
 8107ab2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8107ab4:	9307      	str	r3, [sp, #28]
 8107ab6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8107ab8:	9306      	str	r3, [sp, #24]
 8107aba:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8107abc:	9305      	str	r3, [sp, #20]
 8107abe:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8107ac0:	9304      	str	r3, [sp, #16]
 8107ac2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8107ac4:	9303      	str	r3, [sp, #12]
 8107ac6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8107ac8:	9300      	str	r3, [sp, #0]
 8107aca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8107acc:	9911      	ldr	r1, [sp, #68]	; 0x44
 8107ace:	441c      	add	r4, r3
 8107ad0:	441d      	add	r5, r3
 8107ad2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8107ad6:	9302      	str	r3, [sp, #8]
 8107ad8:	2300      	movs	r3, #0
 8107ada:	9301      	str	r3, [sp, #4]
 8107adc:	ee18 2a10 	vmov	r2, s16
 8107ae0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8107ae2:	f002 f897 	bl	8109c14 <st_sssa8_ch_nn_mat_mult_kernel_opt>
 8107ae6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8107ae8:	9014      	str	r0, [sp, #80]	; 0x50
 8107aea:	3601      	adds	r6, #1
 8107aec:	42b3      	cmp	r3, r6
 8107aee:	d01b      	beq.n	8107b28 <forward_lite_conv2d_rgb_sssa8_ch+0x430>
 8107af0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8107af2:	e766      	b.n	81079c2 <forward_lite_conv2d_rgb_sssa8_ch+0x2ca>
 8107af4:	9911      	ldr	r1, [sp, #68]	; 0x44
 8107af6:	4291      	cmp	r1, r2
 8107af8:	d016      	beq.n	8107b28 <forward_lite_conv2d_rgb_sssa8_ch+0x430>
 8107afa:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8107afc:	9307      	str	r3, [sp, #28]
 8107afe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8107b00:	9306      	str	r3, [sp, #24]
 8107b02:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8107b04:	9305      	str	r3, [sp, #20]
 8107b06:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8107b08:	9304      	str	r3, [sp, #16]
 8107b0a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8107b0c:	9303      	str	r3, [sp, #12]
 8107b0e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8107b10:	9302      	str	r3, [sp, #8]
 8107b12:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8107b14:	9300      	str	r3, [sp, #0]
 8107b16:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8107b1a:	9301      	str	r3, [sp, #4]
 8107b1c:	ee18 2a10 	vmov	r2, s16
 8107b20:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8107b22:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8107b24:	f001 faee 	bl	8109104 <st_sssa8_ch_nn_mat_mult_kernel_single_opt>
 8107b28:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8107b2a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8107b2c:	9916      	ldr	r1, [sp, #88]	; 0x58
 8107b2e:	1ad2      	subs	r2, r2, r3
 8107b30:	429a      	cmp	r2, r3
 8107b32:	921d      	str	r2, [sp, #116]	; 0x74
 8107b34:	bfa8      	it	ge
 8107b36:	461a      	movge	r2, r3
 8107b38:	4419      	add	r1, r3
 8107b3a:	2a00      	cmp	r2, #0
 8107b3c:	9116      	str	r1, [sp, #88]	; 0x58
 8107b3e:	4614      	mov	r4, r2
 8107b40:	dd1a      	ble.n	8107b78 <forward_lite_conv2d_rgb_sssa8_ch+0x480>
 8107b42:	9926      	ldr	r1, [sp, #152]	; 0x98
 8107b44:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8107b46:	fb03 1002 	mla	r0, r3, r2, r1
 8107b4a:	ee18 1a10 	vmov	r1, s16
 8107b4e:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8107b52:	ee08 1a10 	vmov	s16, r1
 8107b56:	9919      	ldr	r1, [sp, #100]	; 0x64
 8107b58:	9026      	str	r0, [sp, #152]	; 0x98
 8107b5a:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 8107b5e:	9119      	str	r1, [sp, #100]	; 0x64
 8107b60:	991a      	ldr	r1, [sp, #104]	; 0x68
 8107b62:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8107b66:	911a      	str	r1, [sp, #104]	; 0x68
 8107b68:	9918      	ldr	r1, [sp, #96]	; 0x60
 8107b6a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8107b6e:	9318      	str	r3, [sp, #96]	; 0x60
 8107b70:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8107b72:	b2a3      	uxth	r3, r4
 8107b74:	f000 fb60 	bl	8108238 <st_int8_to16_dual>
 8107b78:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8107b7a:	3b01      	subs	r3, #1
 8107b7c:	931e      	str	r3, [sp, #120]	; 0x78
 8107b7e:	d001      	beq.n	8107b84 <forward_lite_conv2d_rgb_sssa8_ch+0x48c>
 8107b80:	9415      	str	r4, [sp, #84]	; 0x54
 8107b82:	e6cb      	b.n	810791c <forward_lite_conv2d_rgb_sssa8_ch+0x224>
 8107b84:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8107b86:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8107b88:	4498      	add	r8, r3
 8107b8a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8107b8c:	4413      	add	r3, r2
 8107b8e:	9310      	str	r3, [sp, #64]	; 0x40
 8107b90:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8107b92:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8107b94:	4413      	add	r3, r2
 8107b96:	9322      	str	r3, [sp, #136]	; 0x88
 8107b98:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8107b9a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8107b9c:	4413      	add	r3, r2
 8107b9e:	9323      	str	r3, [sp, #140]	; 0x8c
 8107ba0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8107ba2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8107ba4:	3301      	adds	r3, #1
 8107ba6:	931f      	str	r3, [sp, #124]	; 0x7c
 8107ba8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8107baa:	4293      	cmp	r3, r2
 8107bac:	f6ff ae8b 	blt.w	81078c6 <forward_lite_conv2d_rgb_sssa8_ch+0x1ce>
 8107bb0:	b053      	add	sp, #332	; 0x14c
 8107bb2:	ecbd 8b02 	vpop	{d8}
 8107bb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8107bba:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8107bbc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8107bbe:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8107bc0:	ee18 0a90 	vmov	r0, s17
 8107bc4:	f000 fb38 	bl	8108238 <st_int8_to16_dual>
 8107bc8:	e68c      	b.n	81078e4 <forward_lite_conv2d_rgb_sssa8_ch+0x1ec>
 8107bca:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8107bcc:	9327      	str	r3, [sp, #156]	; 0x9c
 8107bce:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8107bd0:	9316      	str	r3, [sp, #88]	; 0x58
 8107bd2:	e683      	b.n	81078dc <forward_lite_conv2d_rgb_sssa8_ch+0x1e4>
 8107bd4:	460b      	mov	r3, r1
 8107bd6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8107bd8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8107bda:	ee18 0a90 	vmov	r0, s17
 8107bde:	f000 fb2b 	bl	8108238 <st_int8_to16_dual>
 8107be2:	2301      	movs	r3, #1
 8107be4:	9328      	str	r3, [sp, #160]	; 0xa0
 8107be6:	e637      	b.n	8107858 <forward_lite_conv2d_rgb_sssa8_ch+0x160>

08107be8 <forward_lite_pad_8bit_ch1st_3x3_constant_P0022>:
 8107be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8107bec:	b083      	sub	sp, #12
 8107bee:	f992 0000 	ldrsb.w	r0, [r2]
 8107bf2:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8107bf6:	f04f 0500 	mov.w	r5, #0
 8107bfa:	f360 0507 	bfi	r5, r0, #0, #8
 8107bfe:	f1b9 0f00 	cmp.w	r9, #0
 8107c02:	f360 250f 	bfi	r5, r0, #8, #8
 8107c06:	dd20      	ble.n	8107c4a <forward_lite_pad_8bit_ch1st_3x3_constant_P0022+0x62>
 8107c08:	461c      	mov	r4, r3
 8107c0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8107c0c:	1c9e      	adds	r6, r3, #2
 8107c0e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8107c10:	460f      	mov	r7, r1
 8107c12:	ea4f 0a43 	mov.w	sl, r3, lsl #1
 8107c16:	fb06 fb04 	mul.w	fp, r6, r4
 8107c1a:	f04f 0800 	mov.w	r8, #0
 8107c1e:	2c00      	cmp	r4, #0
 8107c20:	dd08      	ble.n	8107c34 <forward_lite_pad_8bit_ch1st_3x3_constant_P0022+0x4c>
 8107c22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8107c24:	18f9      	adds	r1, r7, r3
 8107c26:	2300      	movs	r3, #0
 8107c28:	3301      	adds	r3, #1
 8107c2a:	429c      	cmp	r4, r3
 8107c2c:	800d      	strh	r5, [r1, #0]
 8107c2e:	4431      	add	r1, r6
 8107c30:	d1fa      	bne.n	8107c28 <forward_lite_pad_8bit_ch1st_3x3_constant_P0022+0x40>
 8107c32:	445f      	add	r7, fp
 8107c34:	4639      	mov	r1, r7
 8107c36:	4652      	mov	r2, sl
 8107c38:	f108 0801 	add.w	r8, r8, #1
 8107c3c:	9001      	str	r0, [sp, #4]
 8107c3e:	f001 f94b 	bl	8108ed8 <st_int8_fill>
 8107c42:	45c1      	cmp	r9, r8
 8107c44:	9801      	ldr	r0, [sp, #4]
 8107c46:	4457      	add	r7, sl
 8107c48:	d1e9      	bne.n	8107c1e <forward_lite_pad_8bit_ch1st_3x3_constant_P0022+0x36>
 8107c4a:	b003      	add	sp, #12
 8107c4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08107c50 <forward_lite_pad_8bit_ch1st_3x3_constant_P1111>:
 8107c50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8107c54:	b085      	sub	sp, #20
 8107c56:	f992 8000 	ldrsb.w	r8, [r2]
 8107c5a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8107c5c:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 8107c60:	461e      	mov	r6, r3
 8107c62:	f04f 0500 	mov.w	r5, #0
 8107c66:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8107c68:	9303      	str	r3, [sp, #12]
 8107c6a:	f368 0507 	bfi	r5, r8, #0, #8
 8107c6e:	2e06      	cmp	r6, #6
 8107c70:	460c      	mov	r4, r1
 8107c72:	f368 250f 	bfi	r5, r8, #8, #8
 8107c76:	d077      	beq.n	8107d68 <forward_lite_pad_8bit_ch1st_3x3_constant_P1111+0x118>
 8107c78:	2e03      	cmp	r6, #3
 8107c7a:	d04f      	beq.n	8107d1c <forward_lite_pad_8bit_ch1st_3x3_constant_P1111+0xcc>
 8107c7c:	2b00      	cmp	r3, #0
 8107c7e:	db05      	blt.n	8107c8c <forward_lite_pad_8bit_ch1st_3x3_constant_P1111+0x3c>
 8107c80:	1c5a      	adds	r2, r3, #1
 8107c82:	4608      	mov	r0, r1
 8107c84:	4641      	mov	r1, r8
 8107c86:	4414      	add	r4, r2
 8107c88:	f003 fe63 	bl	810b952 <memset>
 8107c8c:	1e7b      	subs	r3, r7, #1
 8107c8e:	2b00      	cmp	r3, #0
 8107c90:	9301      	str	r3, [sp, #4]
 8107c92:	f106 36ff 	add.w	r6, r6, #4294967295	; 0xffffffff
 8107c96:	dd27      	ble.n	8107ce8 <forward_lite_pad_8bit_ch1st_3x3_constant_P1111+0x98>
 8107c98:	9b03      	ldr	r3, [sp, #12]
 8107c9a:	f10a 0702 	add.w	r7, sl, #2
 8107c9e:	1c5a      	adds	r2, r3, #1
 8107ca0:	fb07 f306 	mul.w	r3, r7, r6
 8107ca4:	ea4f 0942 	mov.w	r9, r2, lsl #1
 8107ca8:	9302      	str	r3, [sp, #8]
 8107caa:	4643      	mov	r3, r8
 8107cac:	f04f 0b00 	mov.w	fp, #0
 8107cb0:	46c8      	mov	r8, r9
 8107cb2:	4699      	mov	r9, r3
 8107cb4:	2e00      	cmp	r6, #0
 8107cb6:	eb04 010a 	add.w	r1, r4, sl
 8107cba:	dd09      	ble.n	8107cd0 <forward_lite_pad_8bit_ch1st_3x3_constant_P1111+0x80>
 8107cbc:	468c      	mov	ip, r1
 8107cbe:	2300      	movs	r3, #0
 8107cc0:	3301      	adds	r3, #1
 8107cc2:	42b3      	cmp	r3, r6
 8107cc4:	f8ac 5000 	strh.w	r5, [ip]
 8107cc8:	44bc      	add	ip, r7
 8107cca:	d1f9      	bne.n	8107cc0 <forward_lite_pad_8bit_ch1st_3x3_constant_P1111+0x70>
 8107ccc:	9b02      	ldr	r3, [sp, #8]
 8107cce:	4419      	add	r1, r3
 8107cd0:	4642      	mov	r2, r8
 8107cd2:	4648      	mov	r0, r9
 8107cd4:	eb01 0408 	add.w	r4, r1, r8
 8107cd8:	f001 f8fe 	bl	8108ed8 <st_int8_fill>
 8107cdc:	9b01      	ldr	r3, [sp, #4]
 8107cde:	f10b 0b01 	add.w	fp, fp, #1
 8107ce2:	459b      	cmp	fp, r3
 8107ce4:	d1e6      	bne.n	8107cb4 <forward_lite_pad_8bit_ch1st_3x3_constant_P1111+0x64>
 8107ce6:	46c8      	mov	r8, r9
 8107ce8:	2e00      	cmp	r6, #0
 8107cea:	eb04 000a 	add.w	r0, r4, sl
 8107cee:	dd0a      	ble.n	8107d06 <forward_lite_pad_8bit_ch1st_3x3_constant_P1111+0xb6>
 8107cf0:	f10a 0702 	add.w	r7, sl, #2
 8107cf4:	4602      	mov	r2, r0
 8107cf6:	2300      	movs	r3, #0
 8107cf8:	3301      	adds	r3, #1
 8107cfa:	429e      	cmp	r6, r3
 8107cfc:	8015      	strh	r5, [r2, #0]
 8107cfe:	443a      	add	r2, r7
 8107d00:	d1fa      	bne.n	8107cf8 <forward_lite_pad_8bit_ch1st_3x3_constant_P1111+0xa8>
 8107d02:	fb07 0006 	mla	r0, r7, r6, r0
 8107d06:	9b03      	ldr	r3, [sp, #12]
 8107d08:	2b00      	cmp	r3, #0
 8107d0a:	db2a      	blt.n	8107d62 <forward_lite_pad_8bit_ch1st_3x3_constant_P1111+0x112>
 8107d0c:	461a      	mov	r2, r3
 8107d0e:	3201      	adds	r2, #1
 8107d10:	4641      	mov	r1, r8
 8107d12:	b005      	add	sp, #20
 8107d14:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8107d18:	f003 be1b 	b.w	810b952 <memset>
 8107d1c:	fa5f f388 	uxtb.w	r3, r8
 8107d20:	ea4f 2208 	mov.w	r2, r8, lsl #8
 8107d24:	b292      	uxth	r2, r2
 8107d26:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
 8107d2a:	4313      	orrs	r3, r2
 8107d2c:	ea4f 4208 	mov.w	r2, r8, lsl #16
 8107d30:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 8107d34:	2f00      	cmp	r7, #0
 8107d36:	ea42 0203 	orr.w	r2, r2, r3
 8107d3a:	b29b      	uxth	r3, r3
 8107d3c:	dd11      	ble.n	8107d62 <forward_lite_pad_8bit_ch1st_3x3_constant_P1111+0x112>
 8107d3e:	eb07 0987 	add.w	r9, r7, r7, lsl #2
 8107d42:	eb09 0989 	add.w	r9, r9, r9, lsl #2
 8107d46:	4449      	add	r1, r9
 8107d48:	6022      	str	r2, [r4, #0]
 8107d4a:	80a3      	strh	r3, [r4, #4]
 8107d4c:	f8a4 5009 	strh.w	r5, [r4, #9]
 8107d50:	81e3      	strh	r3, [r4, #14]
 8107d52:	f884 8013 	strb.w	r8, [r4, #19]
 8107d56:	6162      	str	r2, [r4, #20]
 8107d58:	f884 8018 	strb.w	r8, [r4, #24]
 8107d5c:	3419      	adds	r4, #25
 8107d5e:	428c      	cmp	r4, r1
 8107d60:	d1f2      	bne.n	8107d48 <forward_lite_pad_8bit_ch1st_3x3_constant_P1111+0xf8>
 8107d62:	b005      	add	sp, #20
 8107d64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8107d68:	fa5f f388 	uxtb.w	r3, r8
 8107d6c:	ea4f 2208 	mov.w	r2, r8, lsl #8
 8107d70:	b292      	uxth	r2, r2
 8107d72:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
 8107d76:	4313      	orrs	r3, r2
 8107d78:	ea4f 4208 	mov.w	r2, r8, lsl #16
 8107d7c:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 8107d80:	2f00      	cmp	r7, #0
 8107d82:	ea43 0302 	orr.w	r3, r3, r2
 8107d86:	ddec      	ble.n	8107d62 <forward_lite_pad_8bit_ch1st_3x3_constant_P1111+0x112>
 8107d88:	340f      	adds	r4, #15
 8107d8a:	2200      	movs	r2, #0
 8107d8c:	3201      	adds	r2, #1
 8107d8e:	4297      	cmp	r7, r2
 8107d90:	f844 3c0f 	str.w	r3, [r4, #-15]
 8107d94:	f844 3c0b 	str.w	r3, [r4, #-11]
 8107d98:	f804 8c07 	strb.w	r8, [r4, #-7]
 8107d9c:	8025      	strh	r5, [r4, #0]
 8107d9e:	8125      	strh	r5, [r4, #8]
 8107da0:	8225      	strh	r5, [r4, #16]
 8107da2:	8325      	strh	r5, [r4, #24]
 8107da4:	8425      	strh	r5, [r4, #32]
 8107da6:	f884 8028 	strb.w	r8, [r4, #40]	; 0x28
 8107daa:	f8c4 3029 	str.w	r3, [r4, #41]	; 0x29
 8107dae:	f8c4 302d 	str.w	r3, [r4, #45]	; 0x2d
 8107db2:	f104 0440 	add.w	r4, r4, #64	; 0x40
 8107db6:	d1e9      	bne.n	8107d8c <forward_lite_pad_8bit_ch1st_3x3_constant_P1111+0x13c>
 8107db8:	b005      	add	sp, #20
 8107dba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8107dbe:	bf00      	nop

08107dc0 <forward_lite_pad_constant>:
 8107dc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8107dc4:	b085      	sub	sp, #20
 8107dc6:	4616      	mov	r6, r2
 8107dc8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8107dca:	9201      	str	r2, [sp, #4]
 8107dcc:	4681      	mov	r9, r0
 8107dce:	e9dd 2011 	ldrd	r2, r0, [sp, #68]	; 0x44
 8107dd2:	2b08      	cmp	r3, #8
 8107dd4:	e9dd 5a0f 	ldrd	r5, sl, [sp, #60]	; 0x3c
 8107dd8:	e9dd 7813 	ldrd	r7, r8, [sp, #76]	; 0x4c
 8107ddc:	460c      	mov	r4, r1
 8107dde:	9002      	str	r0, [sp, #8]
 8107de0:	d052      	beq.n	8107e88 <forward_lite_pad_constant+0xc8>
 8107de2:	2a00      	cmp	r2, #0
 8107de4:	dd11      	ble.n	8107e0a <forward_lite_pad_constant+0x4a>
 8107de6:	f8cd 8000 	str.w	r8, [sp]
 8107dea:	f04f 0b00 	mov.w	fp, #0
 8107dee:	46b8      	mov	r8, r7
 8107df0:	4617      	mov	r7, r2
 8107df2:	4621      	mov	r1, r4
 8107df4:	462a      	mov	r2, r5
 8107df6:	44ab      	add	fp, r5
 8107df8:	4630      	mov	r0, r6
 8107dfa:	f001 f8c9 	bl	8108f90 <st_int8_copy>
 8107dfe:	455f      	cmp	r7, fp
 8107e00:	442c      	add	r4, r5
 8107e02:	dcf6      	bgt.n	8107df2 <forward_lite_pad_constant+0x32>
 8107e04:	4647      	mov	r7, r8
 8107e06:	f8dd 8000 	ldr.w	r8, [sp]
 8107e0a:	9b01      	ldr	r3, [sp, #4]
 8107e0c:	2b00      	cmp	r3, #0
 8107e0e:	dd2a      	ble.n	8107e66 <forward_lite_pad_constant+0xa6>
 8107e10:	2300      	movs	r3, #0
 8107e12:	9300      	str	r3, [sp, #0]
 8107e14:	2f00      	cmp	r7, #0
 8107e16:	bfc8      	it	gt
 8107e18:	f04f 0b00 	movgt.w	fp, #0
 8107e1c:	dd08      	ble.n	8107e30 <forward_lite_pad_constant+0x70>
 8107e1e:	4621      	mov	r1, r4
 8107e20:	462a      	mov	r2, r5
 8107e22:	44ab      	add	fp, r5
 8107e24:	4630      	mov	r0, r6
 8107e26:	f001 f8b3 	bl	8108f90 <st_int8_copy>
 8107e2a:	455f      	cmp	r7, fp
 8107e2c:	442c      	add	r4, r5
 8107e2e:	dcf6      	bgt.n	8107e1e <forward_lite_pad_constant+0x5e>
 8107e30:	4621      	mov	r1, r4
 8107e32:	4648      	mov	r0, r9
 8107e34:	4652      	mov	r2, sl
 8107e36:	f001 f8ab 	bl	8108f90 <st_int8_copy>
 8107e3a:	f1b8 0f00 	cmp.w	r8, #0
 8107e3e:	4454      	add	r4, sl
 8107e40:	44d1      	add	r9, sl
 8107e42:	dd0a      	ble.n	8107e5a <forward_lite_pad_constant+0x9a>
 8107e44:	f04f 0b00 	mov.w	fp, #0
 8107e48:	4621      	mov	r1, r4
 8107e4a:	462a      	mov	r2, r5
 8107e4c:	44ab      	add	fp, r5
 8107e4e:	4630      	mov	r0, r6
 8107e50:	f001 f89e 	bl	8108f90 <st_int8_copy>
 8107e54:	45d8      	cmp	r8, fp
 8107e56:	442c      	add	r4, r5
 8107e58:	dcf6      	bgt.n	8107e48 <forward_lite_pad_constant+0x88>
 8107e5a:	9b00      	ldr	r3, [sp, #0]
 8107e5c:	9a01      	ldr	r2, [sp, #4]
 8107e5e:	3301      	adds	r3, #1
 8107e60:	429a      	cmp	r2, r3
 8107e62:	9300      	str	r3, [sp, #0]
 8107e64:	d1d6      	bne.n	8107e14 <forward_lite_pad_constant+0x54>
 8107e66:	9b02      	ldr	r3, [sp, #8]
 8107e68:	2b00      	cmp	r3, #0
 8107e6a:	dd0a      	ble.n	8107e82 <forward_lite_pad_constant+0xc2>
 8107e6c:	2700      	movs	r7, #0
 8107e6e:	4698      	mov	r8, r3
 8107e70:	4621      	mov	r1, r4
 8107e72:	462a      	mov	r2, r5
 8107e74:	4630      	mov	r0, r6
 8107e76:	442f      	add	r7, r5
 8107e78:	f001 f88a 	bl	8108f90 <st_int8_copy>
 8107e7c:	45b8      	cmp	r8, r7
 8107e7e:	442c      	add	r4, r5
 8107e80:	dcf6      	bgt.n	8107e70 <forward_lite_pad_constant+0xb0>
 8107e82:	b005      	add	sp, #20
 8107e84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8107e88:	f996 5000 	ldrsb.w	r5, [r6]
 8107e8c:	4414      	add	r4, r2
 8107e8e:	4628      	mov	r0, r5
 8107e90:	9403      	str	r4, [sp, #12]
 8107e92:	f001 f821 	bl	8108ed8 <st_int8_fill>
 8107e96:	9b01      	ldr	r3, [sp, #4]
 8107e98:	2b00      	cmp	r3, #0
 8107e9a:	dd26      	ble.n	8107eea <forward_lite_pad_constant+0x12a>
 8107e9c:	eb08 030a 	add.w	r3, r8, sl
 8107ea0:	eb03 0b07 	add.w	fp, r3, r7
 8107ea4:	eb07 030a 	add.w	r3, r7, sl
 8107ea8:	2600      	movs	r6, #0
 8107eaa:	9300      	str	r3, [sp, #0]
 8107eac:	4643      	mov	r3, r8
 8107eae:	46b0      	mov	r8, r6
 8107eb0:	461e      	mov	r6, r3
 8107eb2:	4621      	mov	r1, r4
 8107eb4:	4628      	mov	r0, r5
 8107eb6:	463a      	mov	r2, r7
 8107eb8:	f001 f80e 	bl	8108ed8 <st_int8_fill>
 8107ebc:	19e1      	adds	r1, r4, r7
 8107ebe:	4648      	mov	r0, r9
 8107ec0:	4652      	mov	r2, sl
 8107ec2:	f001 f865 	bl	8108f90 <st_int8_copy>
 8107ec6:	9b00      	ldr	r3, [sp, #0]
 8107ec8:	4632      	mov	r2, r6
 8107eca:	18e1      	adds	r1, r4, r3
 8107ecc:	4628      	mov	r0, r5
 8107ece:	f001 f803 	bl	8108ed8 <st_int8_fill>
 8107ed2:	9b01      	ldr	r3, [sp, #4]
 8107ed4:	f108 0801 	add.w	r8, r8, #1
 8107ed8:	4543      	cmp	r3, r8
 8107eda:	44d1      	add	r9, sl
 8107edc:	445c      	add	r4, fp
 8107ede:	d1e8      	bne.n	8107eb2 <forward_lite_pad_constant+0xf2>
 8107ee0:	461a      	mov	r2, r3
 8107ee2:	9b03      	ldr	r3, [sp, #12]
 8107ee4:	fb0b 3302 	mla	r3, fp, r2, r3
 8107ee8:	9303      	str	r3, [sp, #12]
 8107eea:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8107eee:	4628      	mov	r0, r5
 8107ef0:	b005      	add	sp, #20
 8107ef2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8107ef6:	f000 bfef 	b.w	8108ed8 <st_int8_fill>
 8107efa:	bf00      	nop

08107efc <forward_lite_pad_edge>:
 8107efc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8107f00:	ed2d 8b02 	vpush	{d8}
 8107f04:	b087      	sub	sp, #28
 8107f06:	e9dd 4a14 	ldrd	r4, sl, [sp, #80]	; 0x50
 8107f0a:	9305      	str	r3, [sp, #20]
 8107f0c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8107f0e:	f9bd 8048 	ldrsh.w	r8, [sp, #72]	; 0x48
 8107f12:	f8dd 905c 	ldr.w	r9, [sp, #92]	; 0x5c
 8107f16:	9103      	str	r1, [sp, #12]
 8107f18:	18cd      	adds	r5, r1, r3
 8107f1a:	1e13      	subs	r3, r2, #0
 8107f1c:	9504      	str	r5, [sp, #16]
 8107f1e:	9301      	str	r3, [sp, #4]
 8107f20:	dd37      	ble.n	8107f92 <forward_lite_pad_edge+0x96>
 8107f22:	fb04 f308 	mul.w	r3, r4, r8
 8107f26:	9302      	str	r3, [sp, #8]
 8107f28:	ee08 aa10 	vmov	s16, sl
 8107f2c:	2300      	movs	r3, #0
 8107f2e:	4607      	mov	r7, r0
 8107f30:	9300      	str	r3, [sp, #0]
 8107f32:	f1b9 0f00 	cmp.w	r9, #0
 8107f36:	bfc8      	it	gt
 8107f38:	2600      	movgt	r6, #0
 8107f3a:	dd08      	ble.n	8107f4e <forward_lite_pad_edge+0x52>
 8107f3c:	4629      	mov	r1, r5
 8107f3e:	4426      	add	r6, r4
 8107f40:	4622      	mov	r2, r4
 8107f42:	4638      	mov	r0, r7
 8107f44:	f001 f824 	bl	8108f90 <st_int8_copy>
 8107f48:	45b1      	cmp	r9, r6
 8107f4a:	4425      	add	r5, r4
 8107f4c:	dcf6      	bgt.n	8107f3c <forward_lite_pad_edge+0x40>
 8107f4e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8107f50:	4629      	mov	r1, r5
 8107f52:	4638      	mov	r0, r7
 8107f54:	461a      	mov	r2, r3
 8107f56:	441f      	add	r7, r3
 8107f58:	441d      	add	r5, r3
 8107f5a:	f001 f819 	bl	8108f90 <st_int8_copy>
 8107f5e:	f1b8 0f00 	cmp.w	r8, #0
 8107f62:	eba7 0a04 	sub.w	sl, r7, r4
 8107f66:	dd0c      	ble.n	8107f82 <forward_lite_pad_edge+0x86>
 8107f68:	46ab      	mov	fp, r5
 8107f6a:	2600      	movs	r6, #0
 8107f6c:	4659      	mov	r1, fp
 8107f6e:	3601      	adds	r6, #1
 8107f70:	4622      	mov	r2, r4
 8107f72:	4650      	mov	r0, sl
 8107f74:	f001 f80c 	bl	8108f90 <st_int8_copy>
 8107f78:	4546      	cmp	r6, r8
 8107f7a:	44a3      	add	fp, r4
 8107f7c:	d1f6      	bne.n	8107f6c <forward_lite_pad_edge+0x70>
 8107f7e:	9b02      	ldr	r3, [sp, #8]
 8107f80:	441d      	add	r5, r3
 8107f82:	9b00      	ldr	r3, [sp, #0]
 8107f84:	9a01      	ldr	r2, [sp, #4]
 8107f86:	3301      	adds	r3, #1
 8107f88:	429a      	cmp	r2, r3
 8107f8a:	9300      	str	r3, [sp, #0]
 8107f8c:	d1d1      	bne.n	8107f32 <forward_lite_pad_edge+0x36>
 8107f8e:	ee18 aa10 	vmov	sl, s16
 8107f92:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
 8107f96:	4293      	cmp	r3, r2
 8107f98:	d009      	beq.n	8107fae <forward_lite_pad_edge+0xb2>
 8107f9a:	461c      	mov	r4, r3
 8107f9c:	4615      	mov	r5, r2
 8107f9e:	4621      	mov	r1, r4
 8107fa0:	4652      	mov	r2, sl
 8107fa2:	4628      	mov	r0, r5
 8107fa4:	4454      	add	r4, sl
 8107fa6:	f000 fff3 	bl	8108f90 <st_int8_copy>
 8107faa:	42a5      	cmp	r5, r4
 8107fac:	d1f7      	bne.n	8107f9e <forward_lite_pad_edge+0xa2>
 8107fae:	9a01      	ldr	r2, [sp, #4]
 8107fb0:	9b05      	ldr	r3, [sp, #20]
 8107fb2:	4413      	add	r3, r2
 8107fb4:	9a03      	ldr	r2, [sp, #12]
 8107fb6:	3b01      	subs	r3, #1
 8107fb8:	fb0a 2503 	mla	r5, sl, r3, r2
 8107fbc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8107fbe:	18ec      	adds	r4, r5, r3
 8107fc0:	42a5      	cmp	r5, r4
 8107fc2:	bf18      	it	ne
 8107fc4:	f1ca 0600 	rsbne	r6, sl, #0
 8107fc8:	d007      	beq.n	8107fda <forward_lite_pad_edge+0xde>
 8107fca:	4621      	mov	r1, r4
 8107fcc:	4652      	mov	r2, sl
 8107fce:	4628      	mov	r0, r5
 8107fd0:	4434      	add	r4, r6
 8107fd2:	f000 ffdd 	bl	8108f90 <st_int8_copy>
 8107fd6:	42a5      	cmp	r5, r4
 8107fd8:	d1f7      	bne.n	8107fca <forward_lite_pad_edge+0xce>
 8107fda:	b007      	add	sp, #28
 8107fdc:	ecbd 8b02 	vpop	{d8}
 8107fe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08107fe4 <forward_lite_pad_reflect>:
 8107fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8107fe8:	b08f      	sub	sp, #60	; 0x3c
 8107fea:	460e      	mov	r6, r1
 8107fec:	9f22      	ldr	r7, [sp, #136]	; 0x88
 8107fee:	f9bd 5080 	ldrsh.w	r5, [sp, #128]	; 0x80
 8107ff2:	f9bd e084 	ldrsh.w	lr, [sp, #132]	; 0x84
 8107ff6:	910b      	str	r1, [sp, #44]	; 0x2c
 8107ff8:	2b00      	cmp	r3, #0
 8107ffa:	4684      	mov	ip, r0
 8107ffc:	9002      	str	r0, [sp, #8]
 8107ffe:	950c      	str	r5, [sp, #48]	; 0x30
 8108000:	9918      	ldr	r1, [sp, #96]	; 0x60
 8108002:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8108006:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8108008:	f8dd 9078 	ldr.w	r9, [sp, #120]	; 0x78
 810800c:	f9bd 007c 	ldrsh.w	r0, [sp, #124]	; 0x7c
 8108010:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 8108012:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8108016:	4437      	add	r7, r6
 8108018:	9307      	str	r3, [sp, #28]
 810801a:	dd58      	ble.n	81080ce <forward_lite_pad_reflect+0xea>
 810801c:	4408      	add	r0, r1
 810801e:	fb02 f200 	mul.w	r2, r2, r0
 8108022:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8108024:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8108026:	9206      	str	r2, [sp, #24]
 8108028:	4403      	add	r3, r0
 810802a:	442b      	add	r3, r5
 810802c:	930a      	str	r3, [sp, #40]	; 0x28
 810802e:	197b      	adds	r3, r7, r5
 8108030:	9301      	str	r3, [sp, #4]
 8108032:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8108034:	1e8b      	subs	r3, r1, #2
 8108036:	fb04 c303 	mla	r3, r4, r3, ip
 810803a:	9304      	str	r3, [sp, #16]
 810803c:	fb08 2305 	mla	r3, r8, r5, r2
 8108040:	fb09 6303 	mla	r3, r9, r3, r6
 8108044:	9303      	str	r3, [sp, #12]
 8108046:	fb09 f308 	mul.w	r3, r9, r8
 810804a:	fb04 f101 	mul.w	r1, r4, r1
 810804e:	9308      	str	r3, [sp, #32]
 8108050:	2300      	movs	r3, #0
 8108052:	9109      	str	r1, [sp, #36]	; 0x24
 8108054:	9305      	str	r3, [sp, #20]
 8108056:	f1c9 0a00 	rsb	sl, r9, #0
 810805a:	9b01      	ldr	r3, [sp, #4]
 810805c:	42bb      	cmp	r3, r7
 810805e:	d00a      	beq.n	8108076 <forward_lite_pad_reflect+0x92>
 8108060:	9e02      	ldr	r6, [sp, #8]
 8108062:	461d      	mov	r5, r3
 8108064:	4455      	add	r5, sl
 8108066:	4426      	add	r6, r4
 8108068:	4622      	mov	r2, r4
 810806a:	4629      	mov	r1, r5
 810806c:	4630      	mov	r0, r6
 810806e:	f000 ff8f 	bl	8108f90 <st_int8_copy>
 8108072:	42bd      	cmp	r5, r7
 8108074:	d1f6      	bne.n	8108064 <forward_lite_pad_reflect+0x80>
 8108076:	9b02      	ldr	r3, [sp, #8]
 8108078:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 810807a:	9901      	ldr	r1, [sp, #4]
 810807c:	4618      	mov	r0, r3
 810807e:	4413      	add	r3, r2
 8108080:	9302      	str	r3, [sp, #8]
 8108082:	f000 ff85 	bl	8108f90 <st_int8_copy>
 8108086:	9b06      	ldr	r3, [sp, #24]
 8108088:	4543      	cmp	r3, r8
 810808a:	da0d      	bge.n	81080a8 <forward_lite_pad_reflect+0xc4>
 810808c:	e9dd b603 	ldrd	fp, r6, [sp, #12]
 8108090:	461d      	mov	r5, r3
 8108092:	4659      	mov	r1, fp
 8108094:	4630      	mov	r0, r6
 8108096:	3501      	adds	r5, #1
 8108098:	4622      	mov	r2, r4
 810809a:	f000 ff79 	bl	8108f90 <st_int8_copy>
 810809e:	45a8      	cmp	r8, r5
 81080a0:	44cb      	add	fp, r9
 81080a2:	eba6 0604 	sub.w	r6, r6, r4
 81080a6:	d1f4      	bne.n	8108092 <forward_lite_pad_reflect+0xae>
 81080a8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 81080aa:	9901      	ldr	r1, [sp, #4]
 81080ac:	9b05      	ldr	r3, [sp, #20]
 81080ae:	4411      	add	r1, r2
 81080b0:	4417      	add	r7, r2
 81080b2:	9101      	str	r1, [sp, #4]
 81080b4:	9a04      	ldr	r2, [sp, #16]
 81080b6:	9909      	ldr	r1, [sp, #36]	; 0x24
 81080b8:	440a      	add	r2, r1
 81080ba:	9204      	str	r2, [sp, #16]
 81080bc:	9908      	ldr	r1, [sp, #32]
 81080be:	9a03      	ldr	r2, [sp, #12]
 81080c0:	440a      	add	r2, r1
 81080c2:	9203      	str	r2, [sp, #12]
 81080c4:	9a07      	ldr	r2, [sp, #28]
 81080c6:	3301      	adds	r3, #1
 81080c8:	429a      	cmp	r2, r3
 81080ca:	9305      	str	r3, [sp, #20]
 81080cc:	d1c5      	bne.n	810805a <forward_lite_pad_reflect+0x76>
 81080ce:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 81080d0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 81080d2:	fb03 f404 	mul.w	r4, r3, r4
 81080d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 81080d8:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 81080dc:	42a3      	cmp	r3, r4
 81080de:	d00c      	beq.n	81080fa <forward_lite_pad_reflect+0x116>
 81080e0:	461d      	mov	r5, r3
 81080e2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 81080e4:	425e      	negs	r6, r3
 81080e6:	461f      	mov	r7, r3
 81080e8:	4629      	mov	r1, r5
 81080ea:	4620      	mov	r0, r4
 81080ec:	463a      	mov	r2, r7
 81080ee:	443d      	add	r5, r7
 81080f0:	4434      	add	r4, r6
 81080f2:	f000 ff4d 	bl	8108f90 <st_int8_copy>
 81080f6:	42a5      	cmp	r5, r4
 81080f8:	d1f6      	bne.n	81080e8 <forward_lite_pad_reflect+0x104>
 81080fa:	9b19      	ldr	r3, [sp, #100]	; 0x64
 81080fc:	991d      	ldr	r1, [sp, #116]	; 0x74
 81080fe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8108100:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8108102:	3b01      	subs	r3, #1
 8108104:	fb01 2403 	mla	r4, r1, r3, r2
 8108108:	fb01 f505 	mul.w	r5, r1, r5
 810810c:	eba4 0545 	sub.w	r5, r4, r5, lsl #1
 8108110:	42ac      	cmp	r4, r5
 8108112:	d00a      	beq.n	810812a <forward_lite_pad_reflect+0x146>
 8108114:	424e      	negs	r6, r1
 8108116:	460f      	mov	r7, r1
 8108118:	4621      	mov	r1, r4
 810811a:	4628      	mov	r0, r5
 810811c:	463a      	mov	r2, r7
 810811e:	4434      	add	r4, r6
 8108120:	443d      	add	r5, r7
 8108122:	f000 ff35 	bl	8108f90 <st_int8_copy>
 8108126:	42ac      	cmp	r4, r5
 8108128:	d1f6      	bne.n	8108118 <forward_lite_pad_reflect+0x134>
 810812a:	b00f      	add	sp, #60	; 0x3c
 810812c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08108130 <align_factor>:
 8108130:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8108134:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8108138:	b508      	push	{r3, lr}
 810813a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 810813e:	f04f 0300 	mov.w	r3, #0
 8108142:	8003      	strh	r3, [r0, #0]
 8108144:	d425      	bmi.n	8108192 <align_factor+0x62>
 8108146:	f64f 73ff 	movw	r3, #65535	; 0xffff
 810814a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 810814e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8108152:	f64f 71e0 	movw	r1, #65504	; 0xffe0
 8108156:	e005      	b.n	8108164 <align_factor+0x34>
 8108158:	8003      	strh	r3, [r0, #0]
 810815a:	b293      	uxth	r3, r2
 810815c:	428b      	cmp	r3, r1
 810815e:	ee20 0a07 	vmul.f32	s0, s0, s14
 8108162:	d02d      	beq.n	81081c0 <align_factor+0x90>
 8108164:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8108168:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 810816c:	f103 32ff 	add.w	r2, r3, #4294967295	; 0xffffffff
 8108170:	dcf2      	bgt.n	8108158 <align_factor+0x28>
 8108172:	eddf 7a18 	vldr	s15, [pc, #96]	; 81081d4 <align_factor+0xa4>
 8108176:	ee60 7a27 	vmul.f32	s15, s0, s15
 810817a:	ee17 0a90 	vmov	r0, s15
 810817e:	f7f8 fc7d 	bl	8100a7c <__aeabi_f2lz>
 8108182:	ebb1 7fe0 	cmp.w	r1, r0, asr #31
 8108186:	bf1c      	itt	ne
 8108188:	f06f 4000 	mvnne.w	r0, #2147483648	; 0x80000000
 810818c:	ea80 70e1 	eorne.w	r0, r0, r1, asr #31
 8108190:	bd08      	pop	{r3, pc}
 8108192:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8108196:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 810819a:	ddd4      	ble.n	8108146 <align_factor+0x16>
 810819c:	2301      	movs	r3, #1
 810819e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 81081a2:	e005      	b.n	81081b0 <align_factor+0x80>
 81081a4:	8003      	strh	r3, [r0, #0]
 81081a6:	b293      	uxth	r3, r2
 81081a8:	2b21      	cmp	r3, #33	; 0x21
 81081aa:	ee30 0a00 	vadd.f32	s0, s0, s0
 81081ae:	d00d      	beq.n	81081cc <align_factor+0x9c>
 81081b0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 81081b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 81081b8:	f103 0201 	add.w	r2, r3, #1
 81081bc:	d4f2      	bmi.n	81081a4 <align_factor+0x74>
 81081be:	e7d8      	b.n	8108172 <align_factor+0x42>
 81081c0:	f64f 73e2 	movw	r3, #65506	; 0xffe2
 81081c4:	ee30 0a00 	vadd.f32	s0, s0, s0
 81081c8:	8003      	strh	r3, [r0, #0]
 81081ca:	e7d2      	b.n	8108172 <align_factor+0x42>
 81081cc:	2300      	movs	r3, #0
 81081ce:	8003      	strh	r3, [r0, #0]
 81081d0:	4618      	mov	r0, r3
 81081d2:	bd08      	pop	{r3, pc}
 81081d4:	4f000000 	.word	0x4f000000

081081d8 <align_factor_ch>:
 81081d8:	b361      	cbz	r1, 8108234 <align_factor_ch+0x5c>
 81081da:	ee80 7a20 	vdiv.f32	s14, s0, s1
 81081de:	b570      	push	{r4, r5, r6, lr}
 81081e0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 81081e4:	1e9d      	subs	r5, r3, #2
 81081e6:	1f14      	subs	r4, r2, #4
 81081e8:	2600      	movs	r6, #0
 81081ea:	ecf0 7a01 	vldmia	r0!, {s15}
 81081ee:	ee67 7a27 	vmul.f32	s15, s14, s15
 81081f2:	ee17 ea90 	vmov	lr, s15
 81081f6:	f3ce 52c7 	ubfx	r2, lr, #23, #8
 81081fa:	f3ce 0c16 	ubfx	ip, lr, #0, #23
 81081fe:	f50c 0c00 	add.w	ip, ip, #8388608	; 0x800000
 8108202:	f1be 0f00 	cmp.w	lr, #0
 8108206:	f1c2 027e 	rsb	r2, r2, #126	; 0x7e
 810820a:	bfb8      	it	lt
 810820c:	f1cc 0c00 	rsblt	ip, ip, #0
 8108210:	2a1f      	cmp	r2, #31
 8108212:	ea4f 13cc 	mov.w	r3, ip, lsl #7
 8108216:	dc06      	bgt.n	8108226 <align_factor_ch+0x4e>
 8108218:	4281      	cmp	r1, r0
 810821a:	f825 2f02 	strh.w	r2, [r5, #2]!
 810821e:	f844 3f04 	str.w	r3, [r4, #4]!
 8108222:	d1e2      	bne.n	81081ea <align_factor_ch+0x12>
 8108224:	bd70      	pop	{r4, r5, r6, pc}
 8108226:	4281      	cmp	r1, r0
 8108228:	f825 6f02 	strh.w	r6, [r5, #2]!
 810822c:	f844 6f04 	str.w	r6, [r4, #4]!
 8108230:	d1db      	bne.n	81081ea <align_factor_ch+0x12>
 8108232:	bd70      	pop	{r4, r5, r6, pc}
 8108234:	4770      	bx	lr
 8108236:	bf00      	nop

08108238 <st_int8_to16_dual>:
 8108238:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 810823c:	4698      	mov	r8, r3
 810823e:	085b      	lsrs	r3, r3, #1
 8108240:	eb00 0c02 	add.w	ip, r0, r2
 8108244:	f000 80ba 	beq.w	81083bc <st_int8_to16_dual+0x184>
 8108248:	f1a2 0710 	sub.w	r7, r2, #16
 810824c:	1f16      	subs	r6, r2, #4
 810824e:	2f00      	cmp	r7, #0
 8108250:	f04f 0500 	mov.w	r5, #0
 8108254:	db73      	blt.n	810833e <st_int8_to16_dual+0x106>
 8108256:	f8d0 e000 	ldr.w	lr, [r0]
 810825a:	f8dc 4000 	ldr.w	r4, [ip]
 810825e:	fa2f f99e 	sxtb16	r9, lr, ror #8
 8108262:	fa2f fe8e 	sxtb16	lr, lr
 8108266:	eac9 4a2e 	pkhtb	sl, r9, lr, asr #16
 810826a:	eace 4e09 	pkhbt	lr, lr, r9, lsl #16
 810826e:	fa2f f994 	sxtb16	r9, r4, ror #8
 8108272:	f8c1 e000 	str.w	lr, [r1]
 8108276:	f8c1 a008 	str.w	sl, [r1, #8]
 810827a:	fa2f f484 	sxtb16	r4, r4
 810827e:	eac9 4e24 	pkhtb	lr, r9, r4, asr #16
 8108282:	eac4 4409 	pkhbt	r4, r4, r9, lsl #16
 8108286:	f8c1 e00c 	str.w	lr, [r1, #12]
 810828a:	604c      	str	r4, [r1, #4]
 810828c:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8108290:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8108294:	fa2f f99e 	sxtb16	r9, lr, ror #8
 8108298:	fa2f fe8e 	sxtb16	lr, lr
 810829c:	eac9 4a2e 	pkhtb	sl, r9, lr, asr #16
 81082a0:	eace 4e09 	pkhbt	lr, lr, r9, lsl #16
 81082a4:	fa2f f994 	sxtb16	r9, r4, ror #8
 81082a8:	f8c1 e010 	str.w	lr, [r1, #16]
 81082ac:	f8c1 a018 	str.w	sl, [r1, #24]
 81082b0:	fa2f f484 	sxtb16	r4, r4
 81082b4:	eac9 4e24 	pkhtb	lr, r9, r4, asr #16
 81082b8:	eac4 4409 	pkhbt	r4, r4, r9, lsl #16
 81082bc:	f8c1 e01c 	str.w	lr, [r1, #28]
 81082c0:	614c      	str	r4, [r1, #20]
 81082c2:	f8d0 e008 	ldr.w	lr, [r0, #8]
 81082c6:	f8dc 4008 	ldr.w	r4, [ip, #8]
 81082ca:	fa2f f99e 	sxtb16	r9, lr, ror #8
 81082ce:	fa2f fe8e 	sxtb16	lr, lr
 81082d2:	eac9 4a2e 	pkhtb	sl, r9, lr, asr #16
 81082d6:	eace 4e09 	pkhbt	lr, lr, r9, lsl #16
 81082da:	fa2f f994 	sxtb16	r9, r4, ror #8
 81082de:	3010      	adds	r0, #16
 81082e0:	f8c1 e020 	str.w	lr, [r1, #32]
 81082e4:	f8c1 a028 	str.w	sl, [r1, #40]	; 0x28
 81082e8:	fa2f f484 	sxtb16	r4, r4
 81082ec:	eac9 4e24 	pkhtb	lr, r9, r4, asr #16
 81082f0:	eac4 4409 	pkhbt	r4, r4, r9, lsl #16
 81082f4:	f8c1 e02c 	str.w	lr, [r1, #44]	; 0x2c
 81082f8:	624c      	str	r4, [r1, #36]	; 0x24
 81082fa:	f8dc 400c 	ldr.w	r4, [ip, #12]
 81082fe:	f850 ec04 	ldr.w	lr, [r0, #-4]
 8108302:	f10c 0c10 	add.w	ip, ip, #16
 8108306:	fa2f f99e 	sxtb16	r9, lr, ror #8
 810830a:	fa2f fe8e 	sxtb16	lr, lr
 810830e:	eac9 4a2e 	pkhtb	sl, r9, lr, asr #16
 8108312:	eace 4e09 	pkhbt	lr, lr, r9, lsl #16
 8108316:	fa2f f994 	sxtb16	r9, r4, ror #8
 810831a:	f8c1 e030 	str.w	lr, [r1, #48]	; 0x30
 810831e:	f8c1 a038 	str.w	sl, [r1, #56]	; 0x38
 8108322:	3510      	adds	r5, #16
 8108324:	3140      	adds	r1, #64	; 0x40
 8108326:	42bd      	cmp	r5, r7
 8108328:	fa2f f484 	sxtb16	r4, r4
 810832c:	eac9 4e24 	pkhtb	lr, r9, r4, asr #16
 8108330:	eac4 4409 	pkhbt	r4, r4, r9, lsl #16
 8108334:	f841 ec04 	str.w	lr, [r1, #-4]
 8108338:	f841 4c0c 	str.w	r4, [r1, #-12]
 810833c:	dd8b      	ble.n	8108256 <st_int8_to16_dual+0x1e>
 810833e:	42ae      	cmp	r6, r5
 8108340:	db1e      	blt.n	8108380 <st_int8_to16_dual+0x148>
 8108342:	f850 4b04 	ldr.w	r4, [r0], #4
 8108346:	f85c eb04 	ldr.w	lr, [ip], #4
 810834a:	fa2f f994 	sxtb16	r9, r4, ror #8
 810834e:	fa2f f484 	sxtb16	r4, r4
 8108352:	eac9 4a24 	pkhtb	sl, r9, r4, asr #16
 8108356:	eac4 4409 	pkhbt	r4, r4, r9, lsl #16
 810835a:	fa2f f99e 	sxtb16	r9, lr, ror #8
 810835e:	600c      	str	r4, [r1, #0]
 8108360:	f8c1 a008 	str.w	sl, [r1, #8]
 8108364:	3504      	adds	r5, #4
 8108366:	3110      	adds	r1, #16
 8108368:	42b5      	cmp	r5, r6
 810836a:	fa2f fe8e 	sxtb16	lr, lr
 810836e:	eac9 442e 	pkhtb	r4, r9, lr, asr #16
 8108372:	eace 4e09 	pkhbt	lr, lr, r9, lsl #16
 8108376:	f841 4c04 	str.w	r4, [r1, #-4]
 810837a:	f841 ec0c 	str.w	lr, [r1, #-12]
 810837e:	dde0      	ble.n	8108342 <st_int8_to16_dual+0x10a>
 8108380:	42aa      	cmp	r2, r5
 8108382:	dd41      	ble.n	8108408 <st_int8_to16_dual+0x1d0>
 8108384:	1b55      	subs	r5, r2, r5
 8108386:	1d0c      	adds	r4, r1, #4
 8108388:	eb00 0a05 	add.w	sl, r0, r5
 810838c:	46e6      	mov	lr, ip
 810838e:	f910 9b01 	ldrsb.w	r9, [r0], #1
 8108392:	f824 9c04 	strh.w	r9, [r4, #-4]
 8108396:	f91e 9b01 	ldrsb.w	r9, [lr], #1
 810839a:	f824 9c02 	strh.w	r9, [r4, #-2]
 810839e:	4550      	cmp	r0, sl
 81083a0:	f104 0404 	add.w	r4, r4, #4
 81083a4:	d1f3      	bne.n	810838e <st_int8_to16_dual+0x156>
 81083a6:	44ac      	add	ip, r5
 81083a8:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 81083ac:	3b01      	subs	r3, #1
 81083ae:	b29b      	uxth	r3, r3
 81083b0:	eb0a 0002 	add.w	r0, sl, r2
 81083b4:	4494      	add	ip, r2
 81083b6:	2b00      	cmp	r3, #0
 81083b8:	f47f af49 	bne.w	810824e <st_int8_to16_dual+0x16>
 81083bc:	f018 0f01 	tst.w	r8, #1
 81083c0:	d020      	beq.n	8108404 <st_int8_to16_dual+0x1cc>
 81083c2:	1f17      	subs	r7, r2, #4
 81083c4:	f04f 0400 	mov.w	r4, #0
 81083c8:	d411      	bmi.n	81083ee <st_int8_to16_dual+0x1b6>
 81083ca:	f850 3b04 	ldr.w	r3, [r0], #4
 81083ce:	fa2f f593 	sxtb16	r5, r3, ror #8
 81083d2:	3108      	adds	r1, #8
 81083d4:	3404      	adds	r4, #4
 81083d6:	42a7      	cmp	r7, r4
 81083d8:	fa2f f383 	sxtb16	r3, r3
 81083dc:	eac5 4623 	pkhtb	r6, r5, r3, asr #16
 81083e0:	eac3 4305 	pkhbt	r3, r3, r5, lsl #16
 81083e4:	f841 6c04 	str.w	r6, [r1, #-4]
 81083e8:	f841 3c08 	str.w	r3, [r1, #-8]
 81083ec:	daed      	bge.n	81083ca <st_int8_to16_dual+0x192>
 81083ee:	42a2      	cmp	r2, r4
 81083f0:	dd08      	ble.n	8108404 <st_int8_to16_dual+0x1cc>
 81083f2:	1b13      	subs	r3, r2, r4
 81083f4:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 81083f8:	f910 2b01 	ldrsb.w	r2, [r0], #1
 81083fc:	f821 2b02 	strh.w	r2, [r1], #2
 8108400:	428b      	cmp	r3, r1
 8108402:	d1f9      	bne.n	81083f8 <st_int8_to16_dual+0x1c0>
 8108404:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8108408:	4682      	mov	sl, r0
 810840a:	e7cf      	b.n	81083ac <st_int8_to16_dual+0x174>

0810840c <ai_padding_opt_init>:
 810840c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8108410:	2700      	movs	r7, #0
 8108412:	e9c0 7700 	strd	r7, r7, [r0]
 8108416:	6087      	str	r7, [r0, #8]
 8108418:	690e      	ldr	r6, [r1, #16]
 810841a:	9c07      	ldr	r4, [sp, #28]
 810841c:	f1c6 0c00 	rsb	ip, r6, #0
 8108420:	689e      	ldr	r6, [r3, #8]
 8108422:	42be      	cmp	r6, r7
 8108424:	46b9      	mov	r9, r7
 8108426:	dd1b      	ble.n	8108460 <ai_padding_opt_init+0x54>
 8108428:	463e      	mov	r6, r7
 810842a:	46be      	mov	lr, r7
 810842c:	e012      	b.n	8108454 <ai_padding_opt_init+0x48>
 810842e:	6895      	ldr	r5, [r2, #8]
 8108430:	eba5 080c 	sub.w	r8, r5, ip
 8108434:	68a5      	ldr	r5, [r4, #8]
 8108436:	45a8      	cmp	r8, r5
 8108438:	bfb5      	itete	lt
 810843a:	f109 0901 	addlt.w	r9, r9, #1
 810843e:	3701      	addge	r7, #1
 8108440:	f8c0 9008 	strlt.w	r9, [r0, #8]
 8108444:	6047      	strge	r7, [r0, #4]
 8108446:	688d      	ldr	r5, [r1, #8]
 8108448:	44ac      	add	ip, r5
 810844a:	689d      	ldr	r5, [r3, #8]
 810844c:	f10e 0e01 	add.w	lr, lr, #1
 8108450:	4575      	cmp	r5, lr
 8108452:	dd06      	ble.n	8108462 <ai_padding_opt_init+0x56>
 8108454:	f1bc 0f00 	cmp.w	ip, #0
 8108458:	dae9      	bge.n	810842e <ai_padding_opt_init+0x22>
 810845a:	3601      	adds	r6, #1
 810845c:	6006      	str	r6, [r0, #0]
 810845e:	e7f2      	b.n	8108446 <ai_padding_opt_init+0x3a>
 8108460:	463e      	mov	r6, r7
 8108462:	2500      	movs	r5, #0
 8108464:	e9c0 6703 	strd	r6, r7, [r0, #12]
 8108468:	e9c0 5506 	strd	r5, r5, [r0, #24]
 810846c:	f8c0 9014 	str.w	r9, [r0, #20]
 8108470:	6205      	str	r5, [r0, #32]
 8108472:	694e      	ldr	r6, [r1, #20]
 8108474:	f1c6 0c00 	rsb	ip, r6, #0
 8108478:	685e      	ldr	r6, [r3, #4]
 810847a:	42ae      	cmp	r6, r5
 810847c:	dd1c      	ble.n	81084b8 <ai_padding_opt_init+0xac>
 810847e:	46ae      	mov	lr, r5
 8108480:	e00f      	b.n	81084a2 <ai_padding_opt_init+0x96>
 8108482:	6855      	ldr	r5, [r2, #4]
 8108484:	6866      	ldr	r6, [r4, #4]
 8108486:	eba5 050c 	sub.w	r5, r5, ip
 810848a:	42b5      	cmp	r5, r6
 810848c:	da10      	bge.n	81084b0 <ai_padding_opt_init+0xa4>
 810848e:	6a05      	ldr	r5, [r0, #32]
 8108490:	3501      	adds	r5, #1
 8108492:	6205      	str	r5, [r0, #32]
 8108494:	68cd      	ldr	r5, [r1, #12]
 8108496:	44ac      	add	ip, r5
 8108498:	685d      	ldr	r5, [r3, #4]
 810849a:	f10e 0e01 	add.w	lr, lr, #1
 810849e:	4575      	cmp	r5, lr
 81084a0:	dd0a      	ble.n	81084b8 <ai_padding_opt_init+0xac>
 81084a2:	f1bc 0f00 	cmp.w	ip, #0
 81084a6:	daec      	bge.n	8108482 <ai_padding_opt_init+0x76>
 81084a8:	6985      	ldr	r5, [r0, #24]
 81084aa:	3501      	adds	r5, #1
 81084ac:	6185      	str	r5, [r0, #24]
 81084ae:	e7f1      	b.n	8108494 <ai_padding_opt_init+0x88>
 81084b0:	69c5      	ldr	r5, [r0, #28]
 81084b2:	3501      	adds	r5, #1
 81084b4:	61c5      	str	r5, [r0, #28]
 81084b6:	e7ed      	b.n	8108494 <ai_padding_opt_init+0x88>
 81084b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

081084bc <ai_padding_opt_phase1>:
 81084bc:	e9d0 3206 	ldrd	r3, r2, [r0, #24]
 81084c0:	b923      	cbnz	r3, 81084cc <ai_padding_opt_phase1+0x10>
 81084c2:	b17a      	cbz	r2, 81084e4 <ai_padding_opt_phase1+0x28>
 81084c4:	3a01      	subs	r2, #1
 81084c6:	8483      	strh	r3, [r0, #36]	; 0x24
 81084c8:	61c2      	str	r2, [r0, #28]
 81084ca:	e004      	b.n	81084d6 <ai_padding_opt_phase1+0x1a>
 81084cc:	b152      	cbz	r2, 81084e4 <ai_padding_opt_phase1+0x28>
 81084ce:	2201      	movs	r2, #1
 81084d0:	3b01      	subs	r3, #1
 81084d2:	8482      	strh	r2, [r0, #36]	; 0x24
 81084d4:	6183      	str	r3, [r0, #24]
 81084d6:	e9d0 2304 	ldrd	r2, r3, [r0, #16]
 81084da:	68c1      	ldr	r1, [r0, #12]
 81084dc:	6083      	str	r3, [r0, #8]
 81084de:	e9c0 1200 	strd	r1, r2, [r0]
 81084e2:	4770      	bx	lr
 81084e4:	6a03      	ldr	r3, [r0, #32]
 81084e6:	2201      	movs	r2, #1
 81084e8:	3b01      	subs	r3, #1
 81084ea:	8482      	strh	r2, [r0, #36]	; 0x24
 81084ec:	6203      	str	r3, [r0, #32]
 81084ee:	e7f2      	b.n	81084d6 <ai_padding_opt_phase1+0x1a>

081084f0 <st_int8_avepool>:
 81084f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 81084f4:	b097      	sub	sp, #92	; 0x5c
 81084f6:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 81084fa:	f8bd 1084 	ldrh.w	r1, [sp, #132]	; 0x84
 81084fe:	910f      	str	r1, [sp, #60]	; 0x3c
 8108500:	f8bd 1088 	ldrh.w	r1, [sp, #136]	; 0x88
 8108504:	9110      	str	r1, [sp, #64]	; 0x40
 8108506:	f8bd 108c 	ldrh.w	r1, [sp, #140]	; 0x8c
 810850a:	9111      	str	r1, [sp, #68]	; 0x44
 810850c:	f8bd 1090 	ldrh.w	r1, [sp, #144]	; 0x90
 8108510:	9112      	str	r1, [sp, #72]	; 0x48
 8108512:	f8bd 1094 	ldrh.w	r1, [sp, #148]	; 0x94
 8108516:	9113      	str	r1, [sp, #76]	; 0x4c
 8108518:	f8bd 1098 	ldrh.w	r1, [sp, #152]	; 0x98
 810851c:	9114      	str	r1, [sp, #80]	; 0x50
 810851e:	f8bd 109c 	ldrh.w	r1, [sp, #156]	; 0x9c
 8108522:	930e      	str	r3, [sp, #56]	; 0x38
 8108524:	9109      	str	r1, [sp, #36]	; 0x24
 8108526:	f8bd 30a0 	ldrh.w	r3, [sp, #160]	; 0xa0
 810852a:	f99d 10a4 	ldrsb.w	r1, [sp, #164]	; 0xa4
 810852e:	9104      	str	r1, [sp, #16]
 8108530:	f99d 10a8 	ldrsb.w	r1, [sp, #168]	; 0xa8
 8108534:	f8bd a080 	ldrh.w	sl, [sp, #128]	; 0x80
 8108538:	9208      	str	r2, [sp, #32]
 810853a:	ee80 6a20 	vdiv.f32	s12, s0, s1
 810853e:	9315      	str	r3, [sp, #84]	; 0x54
 8108540:	9105      	str	r1, [sp, #20]
 8108542:	2b00      	cmp	r3, #0
 8108544:	f000 80a8 	beq.w	8108698 <st_int8_avepool+0x1a8>
 8108548:	2300      	movs	r3, #0
 810854a:	fb02 fb0a 	mul.w	fp, r2, sl
 810854e:	9306      	str	r3, [sp, #24]
 8108550:	eddf 6a63 	vldr	s13, [pc, #396]	; 81086e0 <st_int8_avepool+0x1f0>
 8108554:	eddf 3a63 	vldr	s7, [pc, #396]	; 81086e4 <st_int8_avepool+0x1f4>
 8108558:	9a09      	ldr	r2, [sp, #36]	; 0x24
 810855a:	2a00      	cmp	r2, #0
 810855c:	f000 8095 	beq.w	810868a <st_int8_avepool+0x19a>
 8108560:	9906      	ldr	r1, [sp, #24]
 8108562:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8108564:	9812      	ldr	r0, [sp, #72]	; 0x48
 8108566:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8108568:	eddd 7a04 	vldr	s15, [sp, #16]
 810856c:	fb01 f303 	mul.w	r3, r1, r3
 8108570:	1a1b      	subs	r3, r3, r0
 8108572:	ea23 70e3 	bic.w	r0, r3, r3, asr #31
 8108576:	4423      	add	r3, r4
 8108578:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 810857a:	9002      	str	r0, [sp, #8]
 810857c:	429c      	cmp	r4, r3
 810857e:	bfa8      	it	ge
 8108580:	461c      	movge	r4, r3
 8108582:	fb01 f302 	mul.w	r3, r1, r2
 8108586:	930a      	str	r3, [sp, #40]	; 0x28
 8108588:	9b08      	ldr	r3, [sp, #32]
 810858a:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 810858e:	eddd 7a05 	vldr	s15, [sp, #20]
 8108592:	fb00 f303 	mul.w	r3, r0, r3
 8108596:	930b      	str	r3, [sp, #44]	; 0x2c
 8108598:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 810859c:	2300      	movs	r3, #0
 810859e:	46a1      	mov	r9, r4
 81085a0:	9307      	str	r3, [sp, #28]
 81085a2:	f1ba 0f00 	cmp.w	sl, #0
 81085a6:	d06a      	beq.n	810867e <st_int8_avepool+0x18e>
 81085a8:	9a07      	ldr	r2, [sp, #28]
 81085aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 81085ac:	9911      	ldr	r1, [sp, #68]	; 0x44
 81085ae:	9c08      	ldr	r4, [sp, #32]
 81085b0:	fb02 f303 	mul.w	r3, r2, r3
 81085b4:	1a5b      	subs	r3, r3, r1
 81085b6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 81085b8:	ea23 7ce3 	bic.w	ip, r3, r3, asr #31
 81085bc:	440b      	add	r3, r1
 81085be:	429c      	cmp	r4, r3
 81085c0:	bfa8      	it	ge
 81085c2:	461c      	movge	r4, r3
 81085c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 81085c6:	18d3      	adds	r3, r2, r3
 81085c8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 81085ca:	fb0a 2303 	mla	r3, sl, r3, r2
 81085ce:	9301      	str	r3, [sp, #4]
 81085d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 81085d2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 81085d4:	4463      	add	r3, ip
 81085d6:	fb0a 2303 	mla	r3, sl, r3, r2
 81085da:	eef6 4a00 	vmov.f32	s9, #96	; 0x3f000000  0.5
 81085de:	9303      	str	r3, [sp, #12]
 81085e0:	f04f 0800 	mov.w	r8, #0
 81085e4:	eba4 0e0c 	sub.w	lr, r4, ip
 81085e8:	9d02      	ldr	r5, [sp, #8]
 81085ea:	45a9      	cmp	r9, r5
 81085ec:	dd63      	ble.n	81086b6 <st_int8_avepool+0x1c6>
 81085ee:	9b03      	ldr	r3, [sp, #12]
 81085f0:	2700      	movs	r7, #0
 81085f2:	eb08 0603 	add.w	r6, r8, r3
 81085f6:	4639      	mov	r1, r7
 81085f8:	4564      	cmp	r4, ip
 81085fa:	dd09      	ble.n	8108610 <st_int8_avepool+0x120>
 81085fc:	4632      	mov	r2, r6
 81085fe:	4663      	mov	r3, ip
 8108600:	f992 0000 	ldrsb.w	r0, [r2]
 8108604:	3301      	adds	r3, #1
 8108606:	429c      	cmp	r4, r3
 8108608:	4401      	add	r1, r0
 810860a:	4452      	add	r2, sl
 810860c:	d1f8      	bne.n	8108600 <st_int8_avepool+0x110>
 810860e:	4477      	add	r7, lr
 8108610:	3501      	adds	r5, #1
 8108612:	45a9      	cmp	r9, r5
 8108614:	445e      	add	r6, fp
 8108616:	d1ef      	bne.n	81085f8 <st_int8_avepool+0x108>
 8108618:	eeb4 0a60 	vcmp.f32	s0, s1
 810861c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8108620:	d103      	bne.n	810862a <st_int8_avepool+0x13a>
 8108622:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 8108626:	4293      	cmp	r3, r2
 8108628:	d039      	beq.n	810869e <st_int8_avepool+0x1ae>
 810862a:	ee07 1a90 	vmov	s15, r1
 810862e:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
 8108632:	ee07 7a90 	vmov	s15, r7
 8108636:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 810863a:	eec4 7a07 	vdiv.f32	s15, s8, s14
 810863e:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8108642:	eeb0 7a65 	vmov.f32	s14, s11
 8108646:	eea7 7a86 	vfma.f32	s14, s15, s12
 810864a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 810864e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8108652:	bfb4      	ite	lt
 8108654:	eef0 7a66 	vmovlt.f32	s15, s13
 8108658:	eef0 7a64 	vmovge.f32	s15, s9
 810865c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8108660:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8108664:	ee17 3a90 	vmov	r3, s15
 8108668:	f303 0307 	ssat	r3, #8, r3
 810866c:	9a01      	ldr	r2, [sp, #4]
 810866e:	7013      	strb	r3, [r2, #0]
 8108670:	4613      	mov	r3, r2
 8108672:	f108 0801 	add.w	r8, r8, #1
 8108676:	3301      	adds	r3, #1
 8108678:	45d0      	cmp	r8, sl
 810867a:	9301      	str	r3, [sp, #4]
 810867c:	d1b4      	bne.n	81085e8 <st_int8_avepool+0xf8>
 810867e:	9b07      	ldr	r3, [sp, #28]
 8108680:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8108682:	3301      	adds	r3, #1
 8108684:	4293      	cmp	r3, r2
 8108686:	9307      	str	r3, [sp, #28]
 8108688:	db8b      	blt.n	81085a2 <st_int8_avepool+0xb2>
 810868a:	9b06      	ldr	r3, [sp, #24]
 810868c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 810868e:	3301      	adds	r3, #1
 8108690:	429a      	cmp	r2, r3
 8108692:	9306      	str	r3, [sp, #24]
 8108694:	f73f af60 	bgt.w	8108558 <st_int8_avepool+0x68>
 8108698:	b017      	add	sp, #92	; 0x5c
 810869a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 810869e:	2900      	cmp	r1, #0
 81086a0:	db15      	blt.n	81086ce <st_int8_avepool+0x1de>
 81086a2:	eb01 0167 	add.w	r1, r1, r7, asr #1
 81086a6:	fbb1 f7f7 	udiv	r7, r1, r7
 81086aa:	f307 0307 	ssat	r3, #8, r7
 81086ae:	9a01      	ldr	r2, [sp, #4]
 81086b0:	7013      	strb	r3, [r2, #0]
 81086b2:	4613      	mov	r3, r2
 81086b4:	e7dd      	b.n	8108672 <st_int8_avepool+0x182>
 81086b6:	eeb4 0a60 	vcmp.f32	s0, s1
 81086ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 81086be:	d103      	bne.n	81086c8 <st_int8_avepool+0x1d8>
 81086c0:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 81086c4:	4293      	cmp	r3, r2
 81086c6:	d009      	beq.n	81086dc <st_int8_avepool+0x1ec>
 81086c8:	eef0 7a63 	vmov.f32	s15, s7
 81086cc:	e7b7      	b.n	810863e <st_int8_avepool+0x14e>
 81086ce:	eb07 73d7 	add.w	r3, r7, r7, lsr #31
 81086d2:	eba1 0163 	sub.w	r1, r1, r3, asr #1
 81086d6:	fb91 f7f7 	sdiv	r7, r1, r7
 81086da:	e7e6      	b.n	81086aa <st_int8_avepool+0x1ba>
 81086dc:	deff      	udf	#255	; 0xff
 81086de:	bf00      	nop
 81086e0:	befffffc 	.word	0xbefffffc
 81086e4:	7fc00000 	.word	0x7fc00000

081086e8 <st_f32_to_int16>:
 81086e8:	b530      	push	{r4, r5, lr}
 81086ea:	0895      	lsrs	r5, r2, #2
 81086ec:	d072      	beq.n	81087d4 <st_f32_to_int16+0xec>
 81086ee:	eddf 5a60 	vldr	s11, [pc, #384]	; 8108870 <st_f32_to_int16+0x188>
 81086f2:	f100 0c10 	add.w	ip, r0, #16
 81086f6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 81086fa:	eebe 5a00 	vmov.f32	s10, #224	; 0xbf000000 -0.5
 81086fe:	f101 0e08 	add.w	lr, r1, #8
 8108702:	462c      	mov	r4, r5
 8108704:	ed5c 6a04 	vldr	s13, [ip, #-16]
 8108708:	ee66 6aa5 	vmul.f32	s13, s13, s11
 810870c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8108710:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8108714:	bfd4      	ite	le
 8108716:	eef0 7a45 	vmovle.f32	s15, s10
 810871a:	eef0 7a47 	vmovgt.f32	s15, s14
 810871e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8108722:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8108726:	ee17 3a90 	vmov	r3, s15
 810872a:	f303 030f 	ssat	r3, #16, r3
 810872e:	f82e 3c08 	strh.w	r3, [lr, #-8]
 8108732:	ed5c 6a03 	vldr	s13, [ip, #-12]
 8108736:	ee66 6aa5 	vmul.f32	s13, s13, s11
 810873a:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 810873e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8108742:	bfd4      	ite	le
 8108744:	eef0 7a45 	vmovle.f32	s15, s10
 8108748:	eef0 7a47 	vmovgt.f32	s15, s14
 810874c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8108750:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8108754:	ee17 3a90 	vmov	r3, s15
 8108758:	f303 030f 	ssat	r3, #16, r3
 810875c:	f82e 3c06 	strh.w	r3, [lr, #-6]
 8108760:	ed5c 6a02 	vldr	s13, [ip, #-8]
 8108764:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8108768:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 810876c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8108770:	bfd4      	ite	le
 8108772:	eef0 7a45 	vmovle.f32	s15, s10
 8108776:	eef0 7a47 	vmovgt.f32	s15, s14
 810877a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 810877e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8108782:	ee17 3a90 	vmov	r3, s15
 8108786:	f303 030f 	ssat	r3, #16, r3
 810878a:	f82e 3c04 	strh.w	r3, [lr, #-4]
 810878e:	ed5c 7a01 	vldr	s15, [ip, #-4]
 8108792:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8108796:	ee77 6a87 	vadd.f32	s13, s15, s14
 810879a:	ee37 6ac7 	vsub.f32	s12, s15, s14
 810879e:	eefd 6ae6 	vcvt.s32.f32	s13, s13
 81087a2:	eebd 6ac6 	vcvt.s32.f32	s12, s12
 81087a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 81087aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 81087ae:	bfcc      	ite	gt
 81087b0:	ee16 3a90 	vmovgt	r3, s13
 81087b4:	ee16 3a10 	vmovle	r3, s12
 81087b8:	f303 030f 	ssat	r3, #16, r3
 81087bc:	3c01      	subs	r4, #1
 81087be:	f82e 3c02 	strh.w	r3, [lr, #-2]
 81087c2:	f10c 0c10 	add.w	ip, ip, #16
 81087c6:	f10e 0e08 	add.w	lr, lr, #8
 81087ca:	d19b      	bne.n	8108704 <st_f32_to_int16+0x1c>
 81087cc:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
 81087d0:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 81087d4:	f012 0203 	ands.w	r2, r2, #3
 81087d8:	d049      	beq.n	810886e <st_f32_to_int16+0x186>
 81087da:	edd0 6a00 	vldr	s13, [r0]
 81087de:	eddf 5a24 	vldr	s11, [pc, #144]	; 8108870 <st_f32_to_int16+0x188>
 81087e2:	ee66 6aa5 	vmul.f32	s13, s13, s11
 81087e6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 81087ea:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 81087ee:	eebe 6a00 	vmov.f32	s12, #224	; 0xbf000000 -0.5
 81087f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 81087f6:	bfd4      	ite	le
 81087f8:	eef0 7a46 	vmovle.f32	s15, s12
 81087fc:	eef0 7a47 	vmovgt.f32	s15, s14
 8108800:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8108804:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8108808:	ee17 3a90 	vmov	r3, s15
 810880c:	f303 030f 	ssat	r3, #16, r3
 8108810:	3a01      	subs	r2, #1
 8108812:	800b      	strh	r3, [r1, #0]
 8108814:	d02b      	beq.n	810886e <st_f32_to_int16+0x186>
 8108816:	edd0 7a01 	vldr	s15, [r0, #4]
 810881a:	ee67 7aa5 	vmul.f32	s15, s15, s11
 810881e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8108822:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8108826:	bfd4      	ite	le
 8108828:	eef0 6a46 	vmovle.f32	s13, s12
 810882c:	eef0 6a47 	vmovgt.f32	s13, s14
 8108830:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8108834:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8108838:	ee17 3a90 	vmov	r3, s15
 810883c:	f303 030f 	ssat	r3, #16, r3
 8108840:	2a01      	cmp	r2, #1
 8108842:	804b      	strh	r3, [r1, #2]
 8108844:	d013      	beq.n	810886e <st_f32_to_int16+0x186>
 8108846:	edd0 7a02 	vldr	s15, [r0, #8]
 810884a:	ee67 7aa5 	vmul.f32	s15, s15, s11
 810884e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8108852:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8108856:	bfd8      	it	le
 8108858:	eeb0 7a46 	vmovle.f32	s14, s12
 810885c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8108860:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8108864:	ee17 3a10 	vmov	r3, s14
 8108868:	f303 030f 	ssat	r3, #16, r3
 810886c:	808b      	strh	r3, [r1, #4]
 810886e:	bd30      	pop	{r4, r5, pc}
 8108870:	47000000 	.word	0x47000000

08108874 <st_f32_to_int8>:
 8108874:	b5f0      	push	{r4, r5, r6, r7, lr}
 8108876:	0895      	lsrs	r5, r2, #2
 8108878:	d078      	beq.n	810896c <st_f32_to_int8+0xf8>
 810887a:	f101 0c04 	add.w	ip, r1, #4
 810887e:	eddf 5a6b 	vldr	s11, [pc, #428]	; 8108a2c <st_f32_to_int8+0x1b8>
 8108882:	f100 0e10 	add.w	lr, r0, #16
 8108886:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 810888a:	eebe 5a00 	vmov.f32	s10, #224	; 0xbf000000 -0.5
 810888e:	00ae      	lsls	r6, r5, #2
 8108890:	eb0c 0485 	add.w	r4, ip, r5, lsl #2
 8108894:	ed1e 7a04 	vldr	s14, [lr, #-16]
 8108898:	ee27 7a25 	vmul.f32	s14, s14, s11
 810889c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 81088a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 81088a4:	bfd4      	ite	le
 81088a6:	eef0 7a45 	vmovle.f32	s15, s10
 81088aa:	eef0 7a46 	vmovgt.f32	s15, s12
 81088ae:	ee77 7a87 	vadd.f32	s15, s15, s14
 81088b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 81088b6:	ee17 3a90 	vmov	r3, s15
 81088ba:	b21b      	sxth	r3, r3
 81088bc:	f303 0307 	ssat	r3, #8, r3
 81088c0:	f80c 3c04 	strb.w	r3, [ip, #-4]
 81088c4:	ed1e 7a03 	vldr	s14, [lr, #-12]
 81088c8:	ee27 7a25 	vmul.f32	s14, s14, s11
 81088cc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 81088d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 81088d4:	bfd4      	ite	le
 81088d6:	eef0 7a45 	vmovle.f32	s15, s10
 81088da:	eef0 7a46 	vmovgt.f32	s15, s12
 81088de:	ee77 7a87 	vadd.f32	s15, s15, s14
 81088e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 81088e6:	ee17 3a90 	vmov	r3, s15
 81088ea:	b21b      	sxth	r3, r3
 81088ec:	f303 0307 	ssat	r3, #8, r3
 81088f0:	f80c 3c03 	strb.w	r3, [ip, #-3]
 81088f4:	ed1e 7a02 	vldr	s14, [lr, #-8]
 81088f8:	ee27 7a25 	vmul.f32	s14, s14, s11
 81088fc:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8108900:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8108904:	bfd4      	ite	le
 8108906:	eef0 7a45 	vmovle.f32	s15, s10
 810890a:	eef0 7a46 	vmovgt.f32	s15, s12
 810890e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8108912:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8108916:	ee17 3a90 	vmov	r3, s15
 810891a:	b21b      	sxth	r3, r3
 810891c:	f303 0307 	ssat	r3, #8, r3
 8108920:	f80c 3c02 	strb.w	r3, [ip, #-2]
 8108924:	ed5e 6a01 	vldr	s13, [lr, #-4]
 8108928:	ee66 6aa5 	vmul.f32	s13, s13, s11
 810892c:	ee76 7a86 	vadd.f32	s15, s13, s12
 8108930:	ee36 7ac6 	vsub.f32	s14, s13, s12
 8108934:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8108938:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 810893c:	ee17 3a90 	vmov	r3, s15
 8108940:	ee17 7a10 	vmov	r7, s14
 8108944:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8108948:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 810894c:	b21b      	sxth	r3, r3
 810894e:	b23f      	sxth	r7, r7
 8108950:	dd5f      	ble.n	8108a12 <st_f32_to_int8+0x19e>
 8108952:	f303 0307 	ssat	r3, #8, r3
 8108956:	f80c 3c01 	strb.w	r3, [ip, #-1]
 810895a:	f10c 0c04 	add.w	ip, ip, #4
 810895e:	4564      	cmp	r4, ip
 8108960:	f10e 0e10 	add.w	lr, lr, #16
 8108964:	d196      	bne.n	8108894 <st_f32_to_int8+0x20>
 8108966:	4431      	add	r1, r6
 8108968:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 810896c:	f012 0203 	ands.w	r2, r2, #3
 8108970:	d04e      	beq.n	8108a10 <st_f32_to_int8+0x19c>
 8108972:	edd0 6a00 	vldr	s13, [r0]
 8108976:	eddf 5a2d 	vldr	s11, [pc, #180]	; 8108a2c <st_f32_to_int8+0x1b8>
 810897a:	ee66 6aa5 	vmul.f32	s13, s13, s11
 810897e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8108982:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8108986:	eebe 6a00 	vmov.f32	s12, #224	; 0xbf000000 -0.5
 810898a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 810898e:	bfd4      	ite	le
 8108990:	eef0 7a46 	vmovle.f32	s15, s12
 8108994:	eef0 7a47 	vmovgt.f32	s15, s14
 8108998:	ee77 7aa6 	vadd.f32	s15, s15, s13
 810899c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 81089a0:	ee17 3a90 	vmov	r3, s15
 81089a4:	b21b      	sxth	r3, r3
 81089a6:	f303 0307 	ssat	r3, #8, r3
 81089aa:	3a01      	subs	r2, #1
 81089ac:	700b      	strb	r3, [r1, #0]
 81089ae:	d02f      	beq.n	8108a10 <st_f32_to_int8+0x19c>
 81089b0:	edd0 6a01 	vldr	s13, [r0, #4]
 81089b4:	ee66 6aa5 	vmul.f32	s13, s13, s11
 81089b8:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 81089bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 81089c0:	bfd4      	ite	le
 81089c2:	eef0 7a46 	vmovle.f32	s15, s12
 81089c6:	eef0 7a47 	vmovgt.f32	s15, s14
 81089ca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 81089ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 81089d2:	ee17 3a90 	vmov	r3, s15
 81089d6:	b21b      	sxth	r3, r3
 81089d8:	f303 0307 	ssat	r3, #8, r3
 81089dc:	2a01      	cmp	r2, #1
 81089de:	704b      	strb	r3, [r1, #1]
 81089e0:	d016      	beq.n	8108a10 <st_f32_to_int8+0x19c>
 81089e2:	edd0 6a02 	vldr	s13, [r0, #8]
 81089e6:	ee66 6aa5 	vmul.f32	s13, s13, s11
 81089ea:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 81089ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 81089f2:	bfd4      	ite	le
 81089f4:	eef0 7a46 	vmovle.f32	s15, s12
 81089f8:	eef0 7a47 	vmovgt.f32	s15, s14
 81089fc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8108a00:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8108a04:	ee17 3a90 	vmov	r3, s15
 8108a08:	b21b      	sxth	r3, r3
 8108a0a:	f303 0307 	ssat	r3, #8, r3
 8108a0e:	708b      	strb	r3, [r1, #2]
 8108a10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8108a12:	f307 0707 	ssat	r7, #8, r7
 8108a16:	f80c 7c01 	strb.w	r7, [ip, #-1]
 8108a1a:	f10c 0c04 	add.w	ip, ip, #4
 8108a1e:	45a4      	cmp	ip, r4
 8108a20:	f10e 0e10 	add.w	lr, lr, #16
 8108a24:	f47f af36 	bne.w	8108894 <st_f32_to_int8+0x20>
 8108a28:	e79d      	b.n	8108966 <st_f32_to_int8+0xf2>
 8108a2a:	bf00      	nop
 8108a2c:	43000000 	.word	0x43000000

08108a30 <st_int16_to_f32>:
 8108a30:	b530      	push	{r4, r5, lr}
 8108a32:	0894      	lsrs	r4, r2, #2
 8108a34:	d038      	beq.n	8108aa8 <st_int16_to_f32+0x78>
 8108a36:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8108af8 <st_int16_to_f32+0xc8>
 8108a3a:	f100 0c08 	add.w	ip, r0, #8
 8108a3e:	f101 0310 	add.w	r3, r1, #16
 8108a42:	46a6      	mov	lr, r4
 8108a44:	f93c 5c08 	ldrsh.w	r5, [ip, #-8]
 8108a48:	ee07 5a90 	vmov	s15, r5
 8108a4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8108a50:	3310      	adds	r3, #16
 8108a52:	ee67 7a87 	vmul.f32	s15, s15, s14
 8108a56:	f10c 0c08 	add.w	ip, ip, #8
 8108a5a:	ed43 7a08 	vstr	s15, [r3, #-32]	; 0xffffffe0
 8108a5e:	f93c 5c0e 	ldrsh.w	r5, [ip, #-14]
 8108a62:	ee07 5a90 	vmov	s15, r5
 8108a66:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8108a6a:	f1be 0e01 	subs.w	lr, lr, #1
 8108a6e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8108a72:	ed43 7a07 	vstr	s15, [r3, #-28]	; 0xffffffe4
 8108a76:	f93c 5c0c 	ldrsh.w	r5, [ip, #-12]
 8108a7a:	ee07 5a90 	vmov	s15, r5
 8108a7e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8108a82:	ee67 7a87 	vmul.f32	s15, s15, s14
 8108a86:	ed43 7a06 	vstr	s15, [r3, #-24]	; 0xffffffe8
 8108a8a:	f93c 5c0a 	ldrsh.w	r5, [ip, #-10]
 8108a8e:	ee07 5a90 	vmov	s15, r5
 8108a92:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8108a96:	ee67 7a87 	vmul.f32	s15, s15, s14
 8108a9a:	ed43 7a05 	vstr	s15, [r3, #-20]	; 0xffffffec
 8108a9e:	d1d1      	bne.n	8108a44 <st_int16_to_f32+0x14>
 8108aa0:	eb01 1104 	add.w	r1, r1, r4, lsl #4
 8108aa4:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8108aa8:	f012 0203 	ands.w	r2, r2, #3
 8108aac:	d023      	beq.n	8108af6 <st_int16_to_f32+0xc6>
 8108aae:	f9b0 3000 	ldrsh.w	r3, [r0]
 8108ab2:	ed9f 7a11 	vldr	s14, [pc, #68]	; 8108af8 <st_int16_to_f32+0xc8>
 8108ab6:	ee07 3a90 	vmov	s15, r3
 8108aba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8108abe:	3a01      	subs	r2, #1
 8108ac0:	ee67 7a87 	vmul.f32	s15, s15, s14
 8108ac4:	edc1 7a00 	vstr	s15, [r1]
 8108ac8:	d015      	beq.n	8108af6 <st_int16_to_f32+0xc6>
 8108aca:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8108ace:	ee07 3a90 	vmov	s15, r3
 8108ad2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8108ad6:	2a01      	cmp	r2, #1
 8108ad8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8108adc:	edc1 7a01 	vstr	s15, [r1, #4]
 8108ae0:	d009      	beq.n	8108af6 <st_int16_to_f32+0xc6>
 8108ae2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8108ae6:	ee07 3a90 	vmov	s15, r3
 8108aea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8108aee:	ee67 7a87 	vmul.f32	s15, s15, s14
 8108af2:	edc1 7a02 	vstr	s15, [r1, #8]
 8108af6:	bd30      	pop	{r4, r5, pc}
 8108af8:	38000000 	.word	0x38000000

08108afc <st_sssa8_ch_convolve_rank1upd>:
 8108afc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8108b00:	b085      	sub	sp, #20
 8108b02:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 8108b06:	f99d b040 	ldrsb.w	fp, [sp, #64]	; 0x40
 8108b0a:	fb13 f304 	smulbb	r3, r3, r4
 8108b0e:	fb13 f500 	smulbb	r5, r3, r0
 8108b12:	460c      	mov	r4, r1
 8108b14:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8108b16:	9911      	ldr	r1, [sp, #68]	; 0x44
 8108b18:	2a00      	cmp	r2, #0
 8108b1a:	d073      	beq.n	8108c04 <st_sssa8_ch_convolve_rank1upd+0x108>
 8108b1c:	b2ad      	uxth	r5, r5
 8108b1e:	ea4f 0895 	mov.w	r8, r5, lsr #2
 8108b22:	f1a3 0904 	sub.w	r9, r3, #4
 8108b26:	f1a8 0381 	sub.w	r3, r8, #129	; 0x81
 8108b2a:	f3c3 13c8 	ubfx	r3, r3, #7, #9
 8108b2e:	ebc3 2043 	rsb	r0, r3, r3, lsl #9
 8108b32:	f1a8 0780 	sub.w	r7, r8, #128	; 0x80
 8108b36:	eb07 17c0 	add.w	r7, r7, r0, lsl #7
 8108b3a:	0258      	lsls	r0, r3, #9
 8108b3c:	3301      	adds	r3, #1
 8108b3e:	025b      	lsls	r3, r3, #9
 8108b40:	f005 0503 	and.w	r5, r5, #3
 8108b44:	9301      	str	r3, [sp, #4]
 8108b46:	f500 6380 	add.w	r3, r0, #1024	; 0x400
 8108b4a:	9303      	str	r3, [sp, #12]
 8108b4c:	1e6b      	subs	r3, r5, #1
 8108b4e:	b29b      	uxth	r3, r3
 8108b50:	9300      	str	r3, [sp, #0]
 8108b52:	eb01 03c2 	add.w	r3, r1, r2, lsl #3
 8108b56:	b2bf      	uxth	r7, r7
 8108b58:	eb01 0a82 	add.w	sl, r1, r2, lsl #2
 8108b5c:	9302      	str	r3, [sp, #8]
 8108b5e:	f1b8 0f80 	cmp.w	r8, #128	; 0x80
 8108b62:	d954      	bls.n	8108c0e <st_sssa8_ch_convolve_rank1upd+0x112>
 8108b64:	9b03      	ldr	r3, [sp, #12]
 8108b66:	f504 7000 	add.w	r0, r4, #512	; 0x200
 8108b6a:	eb04 0c03 	add.w	ip, r4, r3
 8108b6e:	2600      	movs	r6, #0
 8108b70:	f5a0 7100 	sub.w	r1, r0, #512	; 0x200
 8108b74:	2200      	movs	r2, #0
 8108b76:	f851 3b04 	ldr.w	r3, [r1], #4
 8108b7a:	fa2f fe83 	sxtb16	lr, r3
 8108b7e:	4281      	cmp	r1, r0
 8108b80:	ea4f 2333 	mov.w	r3, r3, ror #8
 8108b84:	fa92 f21e 	qadd16	r2, r2, lr
 8108b88:	fa2f f383 	sxtb16	r3, r3
 8108b8c:	fa92 f213 	qadd16	r2, r2, r3
 8108b90:	d1f1      	bne.n	8108b76 <st_sssa8_ch_convolve_rank1upd+0x7a>
 8108b92:	f501 7000 	add.w	r0, r1, #512	; 0x200
 8108b96:	b213      	sxth	r3, r2
 8108b98:	eb03 4322 	add.w	r3, r3, r2, asr #16
 8108b9c:	4560      	cmp	r0, ip
 8108b9e:	441e      	add	r6, r3
 8108ba0:	d1e6      	bne.n	8108b70 <st_sssa8_ch_convolve_rank1upd+0x74>
 8108ba2:	9b01      	ldr	r3, [sp, #4]
 8108ba4:	18e1      	adds	r1, r4, r3
 8108ba6:	463c      	mov	r4, r7
 8108ba8:	b37c      	cbz	r4, 8108c0a <st_sssa8_ch_convolve_rank1upd+0x10e>
 8108baa:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8108bae:	2200      	movs	r2, #0
 8108bb0:	f851 3b04 	ldr.w	r3, [r1], #4
 8108bb4:	fa2f f083 	sxtb16	r0, r3
 8108bb8:	428c      	cmp	r4, r1
 8108bba:	ea4f 2333 	mov.w	r3, r3, ror #8
 8108bbe:	fa92 f210 	qadd16	r2, r2, r0
 8108bc2:	fa2f f383 	sxtb16	r3, r3
 8108bc6:	fa92 f213 	qadd16	r2, r2, r3
 8108bca:	d1f1      	bne.n	8108bb0 <st_sssa8_ch_convolve_rank1upd+0xb4>
 8108bcc:	b213      	sxth	r3, r2
 8108bce:	eb03 4322 	add.w	r3, r3, r2, asr #16
 8108bd2:	441e      	add	r6, r3
 8108bd4:	b16d      	cbz	r5, 8108bf2 <st_sssa8_ch_convolve_rank1upd+0xf6>
 8108bd6:	f994 3000 	ldrsb.w	r3, [r4]
 8108bda:	441e      	add	r6, r3
 8108bdc:	9b00      	ldr	r3, [sp, #0]
 8108bde:	b13b      	cbz	r3, 8108bf0 <st_sssa8_ch_convolve_rank1upd+0xf4>
 8108be0:	f994 3001 	ldrsb.w	r3, [r4, #1]
 8108be4:	2d02      	cmp	r5, #2
 8108be6:	441e      	add	r6, r3
 8108be8:	bf1c      	itt	ne
 8108bea:	f994 3002 	ldrsbne.w	r3, [r4, #2]
 8108bee:	18f6      	addne	r6, r6, r3
 8108bf0:	442c      	add	r4, r5
 8108bf2:	f859 3f04 	ldr.w	r3, [r9, #4]!
 8108bf6:	fb06 331b 	mls	r3, r6, fp, r3
 8108bfa:	f84a 3b04 	str.w	r3, [sl], #4
 8108bfe:	9b02      	ldr	r3, [sp, #8]
 8108c00:	459a      	cmp	sl, r3
 8108c02:	d1ac      	bne.n	8108b5e <st_sssa8_ch_convolve_rank1upd+0x62>
 8108c04:	b005      	add	sp, #20
 8108c06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8108c0a:	460c      	mov	r4, r1
 8108c0c:	e7e2      	b.n	8108bd4 <st_sssa8_ch_convolve_rank1upd+0xd8>
 8108c0e:	4621      	mov	r1, r4
 8108c10:	2600      	movs	r6, #0
 8108c12:	4644      	mov	r4, r8
 8108c14:	e7c8      	b.n	8108ba8 <st_sssa8_ch_convolve_rank1upd+0xac>
 8108c16:	bf00      	nop

08108c18 <st_sssa8_fully_connected>:
 8108c18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8108c1c:	b08d      	sub	sp, #52	; 0x34
 8108c1e:	4698      	mov	r8, r3
 8108c20:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8108c22:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8108c24:	f9b3 5000 	ldrsh.w	r5, [r3]
 8108c28:	6824      	ldr	r4, [r4, #0]
 8108c2a:	9407      	str	r4, [sp, #28]
 8108c2c:	1e6b      	subs	r3, r5, #1
 8108c2e:	2b14      	cmp	r3, #20
 8108c30:	f99d 4060 	ldrsb.w	r4, [sp, #96]	; 0x60
 8108c34:	f99d 7064 	ldrsb.w	r7, [sp, #100]	; 0x64
 8108c38:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 8108c3c:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 8108c3e:	9308      	str	r3, [sp, #32]
 8108c40:	4689      	mov	r9, r1
 8108c42:	4693      	mov	fp, r2
 8108c44:	d804      	bhi.n	8108c50 <st_sssa8_fully_connected+0x38>
 8108c46:	2301      	movs	r3, #1
 8108c48:	40af      	lsls	r7, r5
 8108c4a:	40ab      	lsls	r3, r5
 8108c4c:	eb07 0753 	add.w	r7, r7, r3, lsr #1
 8108c50:	2e00      	cmp	r6, #0
 8108c52:	d062      	beq.n	8108d1a <st_sssa8_fully_connected+0x102>
 8108c54:	eac4 4304 	pkhbt	r3, r4, r4, lsl #16
 8108c58:	9400      	str	r4, [sp, #0]
 8108c5a:	465a      	mov	r2, fp
 8108c5c:	4631      	mov	r1, r6
 8108c5e:	f000 fa1d 	bl	810909c <st_int8_reordered_no_shift_zero>
 8108c62:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8108c64:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8108c68:	9b07      	ldr	r3, [sp, #28]
 8108c6a:	ea4f 0458 	mov.w	r4, r8, lsr #1
 8108c6e:	e9cd 7301 	strd	r7, r3, [sp, #4]
 8108c72:	9400      	str	r4, [sp, #0]
 8108c74:	4653      	mov	r3, sl
 8108c76:	465a      	mov	r2, fp
 8108c78:	4649      	mov	r1, r9
 8108c7a:	4630      	mov	r0, r6
 8108c7c:	f000 fd98 	bl	81097b0 <st_sssa8_dense_loop>
 8108c80:	f018 0f01 	tst.w	r8, #1
 8108c84:	d045      	beq.n	8108d12 <st_sssa8_fully_connected+0xfa>
 8108c86:	f85a 3034 	ldr.w	r3, [sl, r4, lsl #3]
 8108c8a:	ea4f 0e44 	mov.w	lr, r4, lsl #1
 8108c8e:	ea5f 0a9b 	movs.w	sl, fp, lsr #2
 8108c92:	fb0e 9e0b 	mla	lr, lr, fp, r9
 8108c96:	f000 811c 	beq.w	8108ed2 <st_sssa8_fully_connected+0x2ba>
 8108c9a:	eb0e 098a 	add.w	r9, lr, sl, lsl #2
 8108c9e:	4630      	mov	r0, r6
 8108ca0:	f85e 2b04 	ldr.w	r2, [lr], #4
 8108ca4:	fa2f f192 	sxtb16	r1, r2, ror #8
 8108ca8:	f8d0 c000 	ldr.w	ip, [r0]
 8108cac:	fa2f f282 	sxtb16	r2, r2
 8108cb0:	fb2c 3302 	smlad	r3, ip, r2, r3
 8108cb4:	6842      	ldr	r2, [r0, #4]
 8108cb6:	3008      	adds	r0, #8
 8108cb8:	fb22 3301 	smlad	r3, r2, r1, r3
 8108cbc:	45ce      	cmp	lr, r9
 8108cbe:	d1ef      	bne.n	8108ca0 <st_sssa8_fully_connected+0x88>
 8108cc0:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 8108cc4:	f01b 0203 	ands.w	r2, fp, #3
 8108cc8:	d013      	beq.n	8108cf2 <st_sssa8_fully_connected+0xda>
 8108cca:	f999 1000 	ldrsb.w	r1, [r9]
 8108cce:	8830      	ldrh	r0, [r6, #0]
 8108cd0:	3a01      	subs	r2, #1
 8108cd2:	b292      	uxth	r2, r2
 8108cd4:	fb10 3301 	smlabb	r3, r0, r1, r3
 8108cd8:	b15a      	cbz	r2, 8108cf2 <st_sssa8_fully_connected+0xda>
 8108cda:	f999 1001 	ldrsb.w	r1, [r9, #1]
 8108cde:	8870      	ldrh	r0, [r6, #2]
 8108ce0:	2a01      	cmp	r2, #1
 8108ce2:	fb10 3301 	smlabb	r3, r0, r1, r3
 8108ce6:	d004      	beq.n	8108cf2 <st_sssa8_fully_connected+0xda>
 8108ce8:	f999 2002 	ldrsb.w	r2, [r9, #2]
 8108cec:	88b1      	ldrh	r1, [r6, #4]
 8108cee:	fb11 3302 	smlabb	r3, r1, r2, r3
 8108cf2:	2d15      	cmp	r5, #21
 8108cf4:	f300 80b5 	bgt.w	8108e62 <st_sssa8_fully_connected+0x24a>
 8108cf8:	2d00      	cmp	r5, #0
 8108cfa:	f340 80d2 	ble.w	8108ea2 <st_sssa8_fully_connected+0x28a>
 8108cfe:	9a07      	ldr	r2, [sp, #28]
 8108d00:	005b      	lsls	r3, r3, #1
 8108d02:	fb53 7302 	smmla	r3, r3, r2, r7
 8108d06:	412b      	asrs	r3, r5
 8108d08:	f303 0307 	ssat	r3, #8, r3
 8108d0c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8108d0e:	f802 3014 	strb.w	r3, [r2, r4, lsl #1]
 8108d12:	2000      	movs	r0, #0
 8108d14:	b00d      	add	sp, #52	; 0x34
 8108d16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8108d1a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8108d1c:	9701      	str	r7, [sp, #4]
 8108d1e:	e9cd 5304 	strd	r5, r3, [sp, #16]
 8108d22:	9b07      	ldr	r3, [sp, #28]
 8108d24:	900a      	str	r0, [sp, #40]	; 0x28
 8108d26:	ea4f 0258 	mov.w	r2, r8, lsr #1
 8108d2a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8108d2e:	9209      	str	r2, [sp, #36]	; 0x24
 8108d30:	9200      	str	r2, [sp, #0]
 8108d32:	4653      	mov	r3, sl
 8108d34:	465a      	mov	r2, fp
 8108d36:	4649      	mov	r1, r9
 8108d38:	f000 fe42 	bl	81099c0 <st_sssa8_dense_memopt_loop>
 8108d3c:	f018 0f01 	tst.w	r8, #1
 8108d40:	d0e7      	beq.n	8108d12 <st_sssa8_fully_connected+0xfa>
 8108d42:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8108d44:	980a      	ldr	r0, [sp, #40]	; 0x28
 8108d46:	f85a 3032 	ldr.w	r3, [sl, r2, lsl #3]
 8108d4a:	ea4f 0c42 	mov.w	ip, r2, lsl #1
 8108d4e:	f1bb 0f0f 	cmp.w	fp, #15
 8108d52:	f1c4 0e00 	rsb	lr, r4, #0
 8108d56:	fb0b 9c0c 	mla	ip, fp, ip, r9
 8108d5a:	eace 4e0e 	pkhbt	lr, lr, lr, lsl #16
 8108d5e:	dd5b      	ble.n	8108e18 <st_sssa8_fully_connected+0x200>
 8108d60:	f1ab 0110 	sub.w	r1, fp, #16
 8108d64:	0909      	lsrs	r1, r1, #4
 8108d66:	1c4a      	adds	r2, r1, #1
 8108d68:	0111      	lsls	r1, r2, #4
 8108d6a:	920b      	str	r2, [sp, #44]	; 0x2c
 8108d6c:	910a      	str	r1, [sp, #40]	; 0x28
 8108d6e:	eb0c 1202 	add.w	r2, ip, r2, lsl #4
 8108d72:	4680      	mov	r8, r0
 8108d74:	f8dc a000 	ldr.w	sl, [ip]
 8108d78:	f8d8 1000 	ldr.w	r1, [r8]
 8108d7c:	fa2f f99a 	sxtb16	r9, sl, ror #8
 8108d80:	ea4f 2631 	mov.w	r6, r1, ror #8
 8108d84:	fa2f fa8a 	sxtb16	sl, sl
 8108d88:	fa2e f181 	sxtab16	r1, lr, r1
 8108d8c:	fa2e f686 	sxtab16	r6, lr, r6
 8108d90:	fb21 310a 	smlad	r1, r1, sl, r3
 8108d94:	fb26 1109 	smlad	r1, r6, r9, r1
 8108d98:	f8dc a004 	ldr.w	sl, [ip, #4]
 8108d9c:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8108da0:	fa2f f99a 	sxtb16	r9, sl, ror #8
 8108da4:	ea4f 2633 	mov.w	r6, r3, ror #8
 8108da8:	fa2f fa8a 	sxtb16	sl, sl
 8108dac:	fa2e f383 	sxtab16	r3, lr, r3
 8108db0:	fa2e f686 	sxtab16	r6, lr, r6
 8108db4:	fb23 130a 	smlad	r3, r3, sl, r1
 8108db8:	fb26 3309 	smlad	r3, r6, r9, r3
 8108dbc:	f8dc a008 	ldr.w	sl, [ip, #8]
 8108dc0:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8108dc4:	fa2f f99a 	sxtb16	r9, sl, ror #8
 8108dc8:	ea4f 2631 	mov.w	r6, r1, ror #8
 8108dcc:	fa2f fa8a 	sxtb16	sl, sl
 8108dd0:	fa2e f181 	sxtab16	r1, lr, r1
 8108dd4:	fa2e f686 	sxtab16	r6, lr, r6
 8108dd8:	fb21 310a 	smlad	r1, r1, sl, r3
 8108ddc:	fb26 1109 	smlad	r1, r6, r9, r1
 8108de0:	f8dc a00c 	ldr.w	sl, [ip, #12]
 8108de4:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8108de8:	f10c 0c10 	add.w	ip, ip, #16
 8108dec:	f108 0810 	add.w	r8, r8, #16
 8108df0:	fa2f f99a 	sxtb16	r9, sl, ror #8
 8108df4:	ea4f 2633 	mov.w	r6, r3, ror #8
 8108df8:	fa2f fa8a 	sxtb16	sl, sl
 8108dfc:	fa2e f383 	sxtab16	r3, lr, r3
 8108e00:	fa2e f686 	sxtab16	r6, lr, r6
 8108e04:	fb23 130a 	smlad	r3, r3, sl, r1
 8108e08:	fb26 3309 	smlad	r3, r6, r9, r3
 8108e0c:	4562      	cmp	r2, ip
 8108e0e:	d1b1      	bne.n	8108d74 <st_sssa8_fully_connected+0x15c>
 8108e10:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8108e12:	4410      	add	r0, r2
 8108e14:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8108e16:	0116      	lsls	r6, r2, #4
 8108e18:	45b3      	cmp	fp, r6
 8108e1a:	dd0d      	ble.n	8108e38 <st_sssa8_fully_connected+0x220>
 8108e1c:	ebab 0206 	sub.w	r2, fp, r6
 8108e20:	b224      	sxth	r4, r4
 8108e22:	4462      	add	r2, ip
 8108e24:	f91c 6b01 	ldrsb.w	r6, [ip], #1
 8108e28:	f910 1b01 	ldrsb.w	r1, [r0], #1
 8108e2c:	4594      	cmp	ip, r2
 8108e2e:	eba1 0104 	sub.w	r1, r1, r4
 8108e32:	fb11 3306 	smlabb	r3, r1, r6, r3
 8108e36:	d1f5      	bne.n	8108e24 <st_sssa8_fully_connected+0x20c>
 8108e38:	2d15      	cmp	r5, #21
 8108e3a:	dd24      	ble.n	8108e86 <st_sssa8_fully_connected+0x26e>
 8108e3c:	3d02      	subs	r5, #2
 8108e3e:	2201      	movs	r2, #1
 8108e40:	40aa      	lsls	r2, r5
 8108e42:	9907      	ldr	r1, [sp, #28]
 8108e44:	fb53 2301 	smmla	r3, r3, r1, r2
 8108e48:	9a08      	ldr	r2, [sp, #32]
 8108e4a:	4113      	asrs	r3, r2
 8108e4c:	443b      	add	r3, r7
 8108e4e:	f303 0307 	ssat	r3, #8, r3
 8108e52:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8108e54:	9909      	ldr	r1, [sp, #36]	; 0x24
 8108e56:	2000      	movs	r0, #0
 8108e58:	f802 3011 	strb.w	r3, [r2, r1, lsl #1]
 8108e5c:	b00d      	add	sp, #52	; 0x34
 8108e5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8108e62:	3d02      	subs	r5, #2
 8108e64:	2201      	movs	r2, #1
 8108e66:	40aa      	lsls	r2, r5
 8108e68:	9907      	ldr	r1, [sp, #28]
 8108e6a:	fb53 2301 	smmla	r3, r3, r1, r2
 8108e6e:	9a08      	ldr	r2, [sp, #32]
 8108e70:	4113      	asrs	r3, r2
 8108e72:	443b      	add	r3, r7
 8108e74:	f303 0307 	ssat	r3, #8, r3
 8108e78:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8108e7a:	2000      	movs	r0, #0
 8108e7c:	f802 3014 	strb.w	r3, [r2, r4, lsl #1]
 8108e80:	b00d      	add	sp, #52	; 0x34
 8108e82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8108e86:	2d00      	cmp	r5, #0
 8108e88:	dd1a      	ble.n	8108ec0 <st_sssa8_fully_connected+0x2a8>
 8108e8a:	9a07      	ldr	r2, [sp, #28]
 8108e8c:	005b      	lsls	r3, r3, #1
 8108e8e:	fb53 7302 	smmla	r3, r3, r2, r7
 8108e92:	412b      	asrs	r3, r5
 8108e94:	f303 0307 	ssat	r3, #8, r3
 8108e98:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8108e9a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8108e9c:	f802 3011 	strb.w	r3, [r2, r1, lsl #1]
 8108ea0:	e737      	b.n	8108d12 <st_sssa8_fully_connected+0xfa>
 8108ea2:	f1c5 0501 	rsb	r5, r5, #1
 8108ea6:	40ab      	lsls	r3, r5
 8108ea8:	f303 031f 	ssat	r3, #32, r3
 8108eac:	9a07      	ldr	r2, [sp, #28]
 8108eae:	fb53 f312 	smmulr	r3, r3, r2
 8108eb2:	443b      	add	r3, r7
 8108eb4:	f303 0307 	ssat	r3, #8, r3
 8108eb8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8108eba:	f802 3014 	strb.w	r3, [r2, r4, lsl #1]
 8108ebe:	e728      	b.n	8108d12 <st_sssa8_fully_connected+0xfa>
 8108ec0:	f1c5 0501 	rsb	r5, r5, #1
 8108ec4:	40ab      	lsls	r3, r5
 8108ec6:	f303 031f 	ssat	r3, #32, r3
 8108eca:	9a07      	ldr	r2, [sp, #28]
 8108ecc:	fb53 f312 	smmulr	r3, r3, r2
 8108ed0:	e7bc      	b.n	8108e4c <st_sssa8_fully_connected+0x234>
 8108ed2:	46f1      	mov	r9, lr
 8108ed4:	e6f6      	b.n	8108cc4 <st_sssa8_fully_connected+0xac>
 8108ed6:	bf00      	nop

08108ed8 <st_int8_fill>:
 8108ed8:	b510      	push	{r4, lr}
 8108eda:	0203      	lsls	r3, r0, #8
 8108edc:	b2c4      	uxtb	r4, r0
 8108ede:	b29b      	uxth	r3, r3
 8108ee0:	ea44 6400 	orr.w	r4, r4, r0, lsl #24
 8108ee4:	431c      	orrs	r4, r3
 8108ee6:	0403      	lsls	r3, r0, #16
 8108ee8:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8108eec:	431c      	orrs	r4, r3
 8108eee:	078b      	lsls	r3, r1, #30
 8108ef0:	468c      	mov	ip, r1
 8108ef2:	d007      	beq.n	8108f04 <st_int8_fill+0x2c>
 8108ef4:	b3a2      	cbz	r2, 8108f60 <st_int8_fill+0x88>
 8108ef6:	f80c 0b01 	strb.w	r0, [ip], #1
 8108efa:	f01c 0f03 	tst.w	ip, #3
 8108efe:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8108f02:	d1f7      	bne.n	8108ef4 <st_int8_fill+0x1c>
 8108f04:	0911      	lsrs	r1, r2, #4
 8108f06:	d03e      	beq.n	8108f86 <st_int8_fill+0xae>
 8108f08:	1e4b      	subs	r3, r1, #1
 8108f0a:	2b01      	cmp	r3, #1
 8108f0c:	d929      	bls.n	8108f62 <st_int8_fill+0x8a>
 8108f0e:	f01c 0f07 	tst.w	ip, #7
 8108f12:	d126      	bne.n	8108f62 <st_int8_fill+0x8a>
 8108f14:	f10c 0310 	add.w	r3, ip, #16
 8108f18:	ea4f 1e01 	mov.w	lr, r1, lsl #4
 8108f1c:	eb03 1101 	add.w	r1, r3, r1, lsl #4
 8108f20:	e943 4404 	strd	r4, r4, [r3, #-16]
 8108f24:	e943 4402 	strd	r4, r4, [r3, #-8]
 8108f28:	3310      	adds	r3, #16
 8108f2a:	428b      	cmp	r3, r1
 8108f2c:	d1f8      	bne.n	8108f20 <st_int8_fill+0x48>
 8108f2e:	f3c2 0381 	ubfx	r3, r2, #2, #2
 8108f32:	44f4      	add	ip, lr
 8108f34:	f002 0203 	and.w	r2, r2, #3
 8108f38:	b15b      	cbz	r3, 8108f52 <st_int8_fill+0x7a>
 8108f3a:	1e59      	subs	r1, r3, #1
 8108f3c:	f8cc 4000 	str.w	r4, [ip]
 8108f40:	d005      	beq.n	8108f4e <st_int8_fill+0x76>
 8108f42:	2901      	cmp	r1, #1
 8108f44:	f8cc 4004 	str.w	r4, [ip, #4]
 8108f48:	bf18      	it	ne
 8108f4a:	f8cc 4008 	strne.w	r4, [ip, #8]
 8108f4e:	eb0c 0c83 	add.w	ip, ip, r3, lsl #2
 8108f52:	b12a      	cbz	r2, 8108f60 <st_int8_fill+0x88>
 8108f54:	4601      	mov	r1, r0
 8108f56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8108f5a:	4660      	mov	r0, ip
 8108f5c:	f002 bcf9 	b.w	810b952 <memset>
 8108f60:	bd10      	pop	{r4, pc}
 8108f62:	ea4f 1e01 	mov.w	lr, r1, lsl #4
 8108f66:	4663      	mov	r3, ip
 8108f68:	eb0c 1101 	add.w	r1, ip, r1, lsl #4
 8108f6c:	601c      	str	r4, [r3, #0]
 8108f6e:	605c      	str	r4, [r3, #4]
 8108f70:	609c      	str	r4, [r3, #8]
 8108f72:	60dc      	str	r4, [r3, #12]
 8108f74:	3310      	adds	r3, #16
 8108f76:	4299      	cmp	r1, r3
 8108f78:	d1f8      	bne.n	8108f6c <st_int8_fill+0x94>
 8108f7a:	f3c2 0381 	ubfx	r3, r2, #2, #2
 8108f7e:	44f4      	add	ip, lr
 8108f80:	f002 0203 	and.w	r2, r2, #3
 8108f84:	e7d8      	b.n	8108f38 <st_int8_fill+0x60>
 8108f86:	0893      	lsrs	r3, r2, #2
 8108f88:	f002 0203 	and.w	r2, r2, #3
 8108f8c:	e7d4      	b.n	8108f38 <st_int8_fill+0x60>
 8108f8e:	bf00      	nop

08108f90 <st_int8_copy>:
 8108f90:	4288      	cmp	r0, r1
 8108f92:	d056      	beq.n	8109042 <st_int8_copy+0xb2>
 8108f94:	2a00      	cmp	r2, #0
 8108f96:	d054      	beq.n	8109042 <st_int8_copy+0xb2>
 8108f98:	4288      	cmp	r0, r1
 8108f9a:	d353      	bcc.n	8109044 <st_int8_copy+0xb4>
 8108f9c:	078b      	lsls	r3, r1, #30
 8108f9e:	d102      	bne.n	8108fa6 <st_int8_copy+0x16>
 8108fa0:	e009      	b.n	8108fb6 <st_int8_copy+0x26>
 8108fa2:	2a00      	cmp	r2, #0
 8108fa4:	d05b      	beq.n	810905e <st_int8_copy+0xce>
 8108fa6:	f910 3b01 	ldrsb.w	r3, [r0], #1
 8108faa:	f801 3b01 	strb.w	r3, [r1], #1
 8108fae:	078b      	lsls	r3, r1, #30
 8108fb0:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8108fb4:	d1f5      	bne.n	8108fa2 <st_int8_copy+0x12>
 8108fb6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8108fba:	ea5f 1e12 	movs.w	lr, r2, lsr #4
 8108fbe:	d068      	beq.n	8109092 <st_int8_copy+0x102>
 8108fc0:	ea40 0301 	orr.w	r3, r0, r1
 8108fc4:	075b      	lsls	r3, r3, #29
 8108fc6:	d14b      	bne.n	8109060 <st_int8_copy+0xd0>
 8108fc8:	f1be 0f01 	cmp.w	lr, #1
 8108fcc:	d048      	beq.n	8109060 <st_int8_copy+0xd0>
 8108fce:	f100 0310 	add.w	r3, r0, #16
 8108fd2:	ea4f 140e 	mov.w	r4, lr, lsl #4
 8108fd6:	f101 0c10 	add.w	ip, r1, #16
 8108fda:	eb03 1e0e 	add.w	lr, r3, lr, lsl #4
 8108fde:	ed13 6b04 	vldr	d6, [r3, #-16]
 8108fe2:	ed13 7b02 	vldr	d7, [r3, #-8]
 8108fe6:	3310      	adds	r3, #16
 8108fe8:	4573      	cmp	r3, lr
 8108fea:	ed0c 6b04 	vstr	d6, [ip, #-16]
 8108fee:	ed0c 7b02 	vstr	d7, [ip, #-8]
 8108ff2:	f10c 0c10 	add.w	ip, ip, #16
 8108ff6:	d1f2      	bne.n	8108fde <st_int8_copy+0x4e>
 8108ff8:	f3c2 0381 	ubfx	r3, r2, #2, #2
 8108ffc:	4421      	add	r1, r4
 8108ffe:	4420      	add	r0, r4
 8109000:	f002 0203 	and.w	r2, r2, #3
 8109004:	b16b      	cbz	r3, 8109022 <st_int8_copy+0x92>
 8109006:	6804      	ldr	r4, [r0, #0]
 8109008:	600c      	str	r4, [r1, #0]
 810900a:	1e5c      	subs	r4, r3, #1
 810900c:	d005      	beq.n	810901a <st_int8_copy+0x8a>
 810900e:	6845      	ldr	r5, [r0, #4]
 8109010:	604d      	str	r5, [r1, #4]
 8109012:	2c01      	cmp	r4, #1
 8109014:	bf1c      	itt	ne
 8109016:	6884      	ldrne	r4, [r0, #8]
 8109018:	608c      	strne	r4, [r1, #8]
 810901a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 810901e:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8109022:	b162      	cbz	r2, 810903e <st_int8_copy+0xae>
 8109024:	f990 3000 	ldrsb.w	r3, [r0]
 8109028:	700b      	strb	r3, [r1, #0]
 810902a:	3a01      	subs	r2, #1
 810902c:	d007      	beq.n	810903e <st_int8_copy+0xae>
 810902e:	f990 3001 	ldrsb.w	r3, [r0, #1]
 8109032:	704b      	strb	r3, [r1, #1]
 8109034:	2a01      	cmp	r2, #1
 8109036:	bf1c      	itt	ne
 8109038:	f990 3002 	ldrsbne.w	r3, [r0, #2]
 810903c:	708b      	strbne	r3, [r1, #2]
 810903e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8109042:	4770      	bx	lr
 8109044:	1883      	adds	r3, r0, r2
 8109046:	428b      	cmp	r3, r1
 8109048:	d9a8      	bls.n	8108f9c <st_int8_copy+0xc>
 810904a:	4283      	cmp	r3, r0
 810904c:	440a      	add	r2, r1
 810904e:	d9f8      	bls.n	8109042 <st_int8_copy+0xb2>
 8109050:	f913 1d01 	ldrsb.w	r1, [r3, #-1]!
 8109054:	f802 1d01 	strb.w	r1, [r2, #-1]!
 8109058:	4283      	cmp	r3, r0
 810905a:	d1f9      	bne.n	8109050 <st_int8_copy+0xc0>
 810905c:	4770      	bx	lr
 810905e:	4770      	bx	lr
 8109060:	ea4f 140e 	mov.w	r4, lr, lsl #4
 8109064:	460b      	mov	r3, r1
 8109066:	eb01 1e0e 	add.w	lr, r1, lr, lsl #4
 810906a:	4684      	mov	ip, r0
 810906c:	f8dc 7000 	ldr.w	r7, [ip]
 8109070:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8109074:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8109078:	f8dc 800c 	ldr.w	r8, [ip, #12]
 810907c:	f8c3 800c 	str.w	r8, [r3, #12]
 8109080:	601f      	str	r7, [r3, #0]
 8109082:	605e      	str	r6, [r3, #4]
 8109084:	609d      	str	r5, [r3, #8]
 8109086:	3310      	adds	r3, #16
 8109088:	459e      	cmp	lr, r3
 810908a:	f10c 0c10 	add.w	ip, ip, #16
 810908e:	d1ed      	bne.n	810906c <st_int8_copy+0xdc>
 8109090:	e7b2      	b.n	8108ff8 <st_int8_copy+0x68>
 8109092:	0893      	lsrs	r3, r2, #2
 8109094:	f002 0203 	and.w	r2, r2, #3
 8109098:	e7b4      	b.n	8109004 <st_int8_copy+0x74>
 810909a:	bf00      	nop

0810909c <st_int8_reordered_no_shift_zero>:
 810909c:	b5f0      	push	{r4, r5, r6, r7, lr}
 810909e:	0897      	lsrs	r7, r2, #2
 81090a0:	f9bd 6014 	ldrsh.w	r6, [sp, #20]
 81090a4:	d02c      	beq.n	8109100 <st_int8_reordered_no_shift_zero+0x64>
 81090a6:	eb00 0587 	add.w	r5, r0, r7, lsl #2
 81090aa:	468e      	mov	lr, r1
 81090ac:	f850 cb04 	ldr.w	ip, [r0], #4
 81090b0:	fa2f f49c 	sxtb16	r4, ip, ror #8
 81090b4:	fad4 f403 	ssub16	r4, r4, r3
 81090b8:	fa2f fc8c 	sxtb16	ip, ip
 81090bc:	fadc fc03 	ssub16	ip, ip, r3
 81090c0:	42a8      	cmp	r0, r5
 81090c2:	f8ce c000 	str.w	ip, [lr]
 81090c6:	f8ce 4004 	str.w	r4, [lr, #4]
 81090ca:	f10e 0e08 	add.w	lr, lr, #8
 81090ce:	d1ed      	bne.n	81090ac <st_int8_reordered_no_shift_zero+0x10>
 81090d0:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 81090d4:	f012 0203 	ands.w	r2, r2, #3
 81090d8:	d011      	beq.n	81090fe <st_int8_reordered_no_shift_zero+0x62>
 81090da:	f995 0000 	ldrsb.w	r0, [r5]
 81090de:	b273      	sxtb	r3, r6
 81090e0:	1ac0      	subs	r0, r0, r3
 81090e2:	3a01      	subs	r2, #1
 81090e4:	8008      	strh	r0, [r1, #0]
 81090e6:	d00a      	beq.n	81090fe <st_int8_reordered_no_shift_zero+0x62>
 81090e8:	f995 0001 	ldrsb.w	r0, [r5, #1]
 81090ec:	2a01      	cmp	r2, #1
 81090ee:	eba0 0003 	sub.w	r0, r0, r3
 81090f2:	8048      	strh	r0, [r1, #2]
 81090f4:	d003      	beq.n	81090fe <st_int8_reordered_no_shift_zero+0x62>
 81090f6:	f995 2002 	ldrsb.w	r2, [r5, #2]
 81090fa:	1ad3      	subs	r3, r2, r3
 81090fc:	808b      	strh	r3, [r1, #4]
 81090fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8109100:	4605      	mov	r5, r0
 8109102:	e7e7      	b.n	81090d4 <st_int8_reordered_no_shift_zero+0x38>

08109104 <st_sssa8_ch_nn_mat_mult_kernel_single_opt>:
 8109104:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8109108:	b093      	sub	sp, #76	; 0x4c
 810910a:	f8bd 4074 	ldrh.w	r4, [sp, #116]	; 0x74
 810910e:	920a      	str	r2, [sp, #40]	; 0x28
 8109110:	930f      	str	r3, [sp, #60]	; 0x3c
 8109112:	f8bd 2078 	ldrh.w	r2, [sp, #120]	; 0x78
 8109116:	f89d 3088 	ldrb.w	r3, [sp, #136]	; 0x88
 810911a:	920d      	str	r2, [sp, #52]	; 0x34
 810911c:	0862      	lsrs	r2, r4, #1
 810911e:	940c      	str	r4, [sp, #48]	; 0x30
 8109120:	9104      	str	r1, [sp, #16]
 8109122:	930e      	str	r3, [sp, #56]	; 0x38
 8109124:	920b      	str	r2, [sp, #44]	; 0x2c
 8109126:	2b00      	cmp	r3, #0
 8109128:	f000 8182 	beq.w	8109430 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x32c>
 810912c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 810912e:	b299      	uxth	r1, r3
 8109130:	4613      	mov	r3, r2
 8109132:	2b00      	cmp	r3, #0
 8109134:	f000 80d6 	beq.w	81092e4 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x1e0>
 8109138:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 810913a:	0897      	lsrs	r7, r2, #2
 810913c:	f002 0203 	and.w	r2, r2, #3
 8109140:	9201      	str	r2, [sp, #4]
 8109142:	1c4a      	adds	r2, r1, #1
 8109144:	0049      	lsls	r1, r1, #1
 8109146:	9105      	str	r1, [sp, #20]
 8109148:	9923      	ldr	r1, [sp, #140]	; 0x8c
 810914a:	9703      	str	r7, [sp, #12]
 810914c:	4411      	add	r1, r2
 810914e:	9102      	str	r1, [sp, #8]
 8109150:	990a      	ldr	r1, [sp, #40]	; 0x28
 8109152:	3b01      	subs	r3, #1
 8109154:	f101 0210 	add.w	r2, r1, #16
 8109158:	b29b      	uxth	r3, r3
 810915a:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 810915e:	9306      	str	r3, [sp, #24]
 8109160:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8109162:	9a01      	ldr	r2, [sp, #4]
 8109164:	f103 0e04 	add.w	lr, r3, #4
 8109168:	9b20      	ldr	r3, [sp, #128]	; 0x80
 810916a:	f103 0508 	add.w	r5, r3, #8
 810916e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8109170:	f103 0408 	add.w	r4, r3, #8
 8109174:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8109176:	1c5e      	adds	r6, r3, #1
 8109178:	013b      	lsls	r3, r7, #4
 810917a:	9307      	str	r3, [sp, #28]
 810917c:	9b04      	ldr	r3, [sp, #16]
 810917e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8109182:	9308      	str	r3, [sp, #32]
 8109184:	0093      	lsls	r3, r2, #2
 8109186:	f101 0c08 	add.w	ip, r1, #8
 810918a:	9309      	str	r3, [sp, #36]	; 0x24
 810918c:	f85c 3c08 	ldr.w	r3, [ip, #-8]
 8109190:	9311      	str	r3, [sp, #68]	; 0x44
 8109192:	f85c 2c04 	ldr.w	r2, [ip, #-4]
 8109196:	9903      	ldr	r1, [sp, #12]
 8109198:	9b11      	ldr	r3, [sp, #68]	; 0x44
 810919a:	9211      	str	r2, [sp, #68]	; 0x44
 810919c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 810919e:	2900      	cmp	r1, #0
 81091a0:	f000 8144 	beq.w	810942c <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x328>
 81091a4:	9f04      	ldr	r7, [sp, #16]
 81091a6:	4688      	mov	r8, r1
 81091a8:	4601      	mov	r1, r0
 81091aa:	f8d7 9000 	ldr.w	r9, [r7]
 81091ae:	f8d1 a000 	ldr.w	sl, [r1]
 81091b2:	fb2a 3a09 	smlad	sl, sl, r9, r3
 81091b6:	684b      	ldr	r3, [r1, #4]
 81091b8:	fb23 2909 	smlad	r9, r3, r9, r2
 81091bc:	f8d7 b004 	ldr.w	fp, [r7, #4]
 81091c0:	688b      	ldr	r3, [r1, #8]
 81091c2:	68ca      	ldr	r2, [r1, #12]
 81091c4:	3708      	adds	r7, #8
 81091c6:	3110      	adds	r1, #16
 81091c8:	fb23 a30b 	smlad	r3, r3, fp, sl
 81091cc:	fb22 920b 	smlad	r2, r2, fp, r9
 81091d0:	f1b8 0801 	subs.w	r8, r8, #1
 81091d4:	d1e9      	bne.n	81091aa <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0xa6>
 81091d6:	9907      	ldr	r1, [sp, #28]
 81091d8:	4408      	add	r0, r1
 81091da:	9908      	ldr	r1, [sp, #32]
 81091dc:	9f01      	ldr	r7, [sp, #4]
 81091de:	b31f      	cbz	r7, 8109228 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x124>
 81091e0:	f9b1 7000 	ldrsh.w	r7, [r1]
 81091e4:	f8b0 8000 	ldrh.w	r8, [r0]
 81091e8:	fb17 3308 	smlabb	r3, r7, r8, r3
 81091ec:	f8b0 8002 	ldrh.w	r8, [r0, #2]
 81091f0:	fb18 2207 	smlabb	r2, r8, r7, r2
 81091f4:	9f01      	ldr	r7, [sp, #4]
 81091f6:	2f01      	cmp	r7, #1
 81091f8:	d014      	beq.n	8109224 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x120>
 81091fa:	f9b1 7002 	ldrsh.w	r7, [r1, #2]
 81091fe:	f8b0 8004 	ldrh.w	r8, [r0, #4]
 8109202:	fb17 3308 	smlabb	r3, r7, r8, r3
 8109206:	f8b0 8006 	ldrh.w	r8, [r0, #6]
 810920a:	fb18 2207 	smlabb	r2, r8, r7, r2
 810920e:	9f01      	ldr	r7, [sp, #4]
 8109210:	2f02      	cmp	r7, #2
 8109212:	d007      	beq.n	8109224 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x120>
 8109214:	f9b1 1004 	ldrsh.w	r1, [r1, #4]
 8109218:	8907      	ldrh	r7, [r0, #8]
 810921a:	fb17 3301 	smlabb	r3, r7, r1, r3
 810921e:	8947      	ldrh	r7, [r0, #10]
 8109220:	fb11 2207 	smlabb	r2, r1, r7, r2
 8109224:	9909      	ldr	r1, [sp, #36]	; 0x24
 8109226:	4408      	add	r0, r1
 8109228:	f93e 8c04 	ldrsh.w	r8, [lr, #-4]
 810922c:	f1b8 0f15 	cmp.w	r8, #21
 8109230:	f340 80af 	ble.w	8109392 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x28e>
 8109234:	f1a8 0702 	sub.w	r7, r8, #2
 8109238:	2101      	movs	r1, #1
 810923a:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 810923e:	fa01 f707 	lsl.w	r7, r1, r7
 8109242:	f855 1c08 	ldr.w	r1, [r5, #-8]
 8109246:	fb53 7101 	smmla	r1, r3, r1, r7
 810924a:	fa41 f308 	asr.w	r3, r1, r8
 810924e:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8109252:	1f2f      	subs	r7, r5, #4
 8109254:	440b      	add	r3, r1
 8109256:	f1a4 0804 	sub.w	r8, r4, #4
 810925a:	f1ae 0102 	sub.w	r1, lr, #2
 810925e:	f303 0307 	ssat	r3, #8, r3
 8109262:	b25b      	sxtb	r3, r3
 8109264:	f806 3c01 	strb.w	r3, [r6, #-1]
 8109268:	f9b1 1000 	ldrsh.w	r1, [r1]
 810926c:	2915      	cmp	r1, #21
 810926e:	f340 80ab 	ble.w	81093c8 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x2c4>
 8109272:	683b      	ldr	r3, [r7, #0]
 8109274:	f8d8 8000 	ldr.w	r8, [r8]
 8109278:	1e8f      	subs	r7, r1, #2
 810927a:	f04f 0901 	mov.w	r9, #1
 810927e:	3901      	subs	r1, #1
 8109280:	fa09 f707 	lsl.w	r7, r9, r7
 8109284:	fb52 7303 	smmla	r3, r2, r3, r7
 8109288:	410b      	asrs	r3, r1
 810928a:	4443      	add	r3, r8
 810928c:	f303 0307 	ssat	r3, #8, r3
 8109290:	b25b      	sxtb	r3, r3
 8109292:	9a02      	ldr	r2, [sp, #8]
 8109294:	f802 3c01 	strb.w	r3, [r2, #-1]
 8109298:	9b05      	ldr	r3, [sp, #20]
 810929a:	441a      	add	r2, r3
 810929c:	441e      	add	r6, r3
 810929e:	9b06      	ldr	r3, [sp, #24]
 81092a0:	9202      	str	r2, [sp, #8]
 81092a2:	f10c 0c08 	add.w	ip, ip, #8
 81092a6:	459c      	cmp	ip, r3
 81092a8:	f10e 0e04 	add.w	lr, lr, #4
 81092ac:	f105 0508 	add.w	r5, r5, #8
 81092b0:	f104 0408 	add.w	r4, r4, #8
 81092b4:	f47f af6a 	bne.w	810918c <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x88>
 81092b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 81092ba:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 81092bc:	9905      	ldr	r1, [sp, #20]
 81092be:	fb03 2201 	mla	r2, r3, r1, r2
 81092c2:	9223      	str	r2, [sp, #140]	; 0x8c
 81092c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 81092c6:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 81092ca:	920a      	str	r2, [sp, #40]	; 0x28
 81092cc:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 81092ce:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 81092d2:	921f      	str	r2, [sp, #124]	; 0x7c
 81092d4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 81092d6:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 81092da:	9220      	str	r2, [sp, #128]	; 0x80
 81092dc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 81092de:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 81092e2:	9321      	str	r3, [sp, #132]	; 0x84
 81092e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 81092e6:	07db      	lsls	r3, r3, #31
 81092e8:	d545      	bpl.n	8109376 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x272>
 81092ea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 81092ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 81092ee:	0896      	lsrs	r6, r2, #2
 81092f0:	681b      	ldr	r3, [r3, #0]
 81092f2:	f000 80cc 	beq.w	810948e <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x38a>
 81092f6:	9904      	ldr	r1, [sp, #16]
 81092f8:	00f7      	lsls	r7, r6, #3
 81092fa:	eb00 06c6 	add.w	r6, r0, r6, lsl #3
 81092fe:	6804      	ldr	r4, [r0, #0]
 8109300:	6842      	ldr	r2, [r0, #4]
 8109302:	680d      	ldr	r5, [r1, #0]
 8109304:	3008      	adds	r0, #8
 8109306:	fb24 3305 	smlad	r3, r4, r5, r3
 810930a:	684c      	ldr	r4, [r1, #4]
 810930c:	3108      	adds	r1, #8
 810930e:	fb22 3304 	smlad	r3, r2, r4, r3
 8109312:	42b0      	cmp	r0, r6
 8109314:	d1f3      	bne.n	81092fe <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x1fa>
 8109316:	9a04      	ldr	r2, [sp, #16]
 8109318:	443a      	add	r2, r7
 810931a:	9204      	str	r2, [sp, #16]
 810931c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 810931e:	f012 0203 	ands.w	r2, r2, #3
 8109322:	d011      	beq.n	8109348 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x244>
 8109324:	9c04      	ldr	r4, [sp, #16]
 8109326:	8831      	ldrh	r1, [r6, #0]
 8109328:	8820      	ldrh	r0, [r4, #0]
 810932a:	3a01      	subs	r2, #1
 810932c:	b292      	uxth	r2, r2
 810932e:	fb10 3301 	smlabb	r3, r0, r1, r3
 8109332:	b14a      	cbz	r2, 8109348 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x244>
 8109334:	8860      	ldrh	r0, [r4, #2]
 8109336:	8871      	ldrh	r1, [r6, #2]
 8109338:	2a01      	cmp	r2, #1
 810933a:	fb10 3301 	smlabb	r3, r0, r1, r3
 810933e:	d003      	beq.n	8109348 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x244>
 8109340:	88b1      	ldrh	r1, [r6, #4]
 8109342:	88a2      	ldrh	r2, [r4, #4]
 8109344:	fb11 3302 	smlabb	r3, r1, r2, r3
 8109348:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 810934a:	f9b2 2000 	ldrsh.w	r2, [r2]
 810934e:	2a15      	cmp	r2, #21
 8109350:	dd79      	ble.n	8109446 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x342>
 8109352:	9921      	ldr	r1, [sp, #132]	; 0x84
 8109354:	680c      	ldr	r4, [r1, #0]
 8109356:	9920      	ldr	r1, [sp, #128]	; 0x80
 8109358:	1e95      	subs	r5, r2, #2
 810935a:	2001      	movs	r0, #1
 810935c:	3a01      	subs	r2, #1
 810935e:	6809      	ldr	r1, [r1, #0]
 8109360:	40a8      	lsls	r0, r5
 8109362:	fb53 0301 	smmla	r3, r3, r1, r0
 8109366:	4113      	asrs	r3, r2
 8109368:	4423      	add	r3, r4
 810936a:	f303 0307 	ssat	r3, #8, r3
 810936e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8109370:	f802 3b01 	strb.w	r3, [r2], #1
 8109374:	9223      	str	r2, [sp, #140]	; 0x8c
 8109376:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8109378:	2b00      	cmp	r3, #0
 810937a:	d05c      	beq.n	8109436 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x332>
 810937c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 810937e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8109380:	fb02 f303 	mul.w	r3, r2, r3
 8109384:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8109386:	f1c3 0301 	rsb	r3, r3, #1
 810938a:	18d0      	adds	r0, r2, r3
 810938c:	b013      	add	sp, #76	; 0x4c
 810938e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8109392:	f1b8 0f00 	cmp.w	r8, #0
 8109396:	dd24      	ble.n	81093e2 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x2de>
 8109398:	f855 1c08 	ldr.w	r1, [r5, #-8]
 810939c:	f854 7c08 	ldr.w	r7, [r4, #-8]
 81093a0:	005b      	lsls	r3, r3, #1
 81093a2:	fb53 7301 	smmla	r3, r3, r1, r7
 81093a6:	1f2f      	subs	r7, r5, #4
 81093a8:	fa43 f308 	asr.w	r3, r3, r8
 81093ac:	f1ae 0102 	sub.w	r1, lr, #2
 81093b0:	f1a4 0804 	sub.w	r8, r4, #4
 81093b4:	f303 0307 	ssat	r3, #8, r3
 81093b8:	b25b      	sxtb	r3, r3
 81093ba:	f806 3c01 	strb.w	r3, [r6, #-1]
 81093be:	f9b1 1000 	ldrsh.w	r1, [r1]
 81093c2:	2915      	cmp	r1, #21
 81093c4:	f73f af55 	bgt.w	8109272 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x16e>
 81093c8:	2900      	cmp	r1, #0
 81093ca:	dd20      	ble.n	810940e <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x30a>
 81093cc:	683b      	ldr	r3, [r7, #0]
 81093ce:	f8d8 7000 	ldr.w	r7, [r8]
 81093d2:	0052      	lsls	r2, r2, #1
 81093d4:	fb52 7203 	smmla	r2, r2, r3, r7
 81093d8:	410a      	asrs	r2, r1
 81093da:	f302 0307 	ssat	r3, #8, r2
 81093de:	b25b      	sxtb	r3, r3
 81093e0:	e757      	b.n	8109292 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x18e>
 81093e2:	f1c8 0801 	rsb	r8, r8, #1
 81093e6:	fa03 f808 	lsl.w	r8, r3, r8
 81093ea:	f1ae 0102 	sub.w	r1, lr, #2
 81093ee:	f308 081f 	ssat	r8, #32, r8
 81093f2:	f855 3c08 	ldr.w	r3, [r5, #-8]
 81093f6:	1f2f      	subs	r7, r5, #4
 81093f8:	fb58 f813 	smmulr	r8, r8, r3
 81093fc:	f854 3c08 	ldr.w	r3, [r4, #-8]
 8109400:	4443      	add	r3, r8
 8109402:	f1a4 0804 	sub.w	r8, r4, #4
 8109406:	f303 0307 	ssat	r3, #8, r3
 810940a:	b25b      	sxtb	r3, r3
 810940c:	e72a      	b.n	8109264 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x160>
 810940e:	f1c1 0101 	rsb	r1, r1, #1
 8109412:	408a      	lsls	r2, r1
 8109414:	f302 021f 	ssat	r2, #32, r2
 8109418:	683b      	ldr	r3, [r7, #0]
 810941a:	fb52 f313 	smmulr	r3, r2, r3
 810941e:	f8d8 2000 	ldr.w	r2, [r8]
 8109422:	4413      	add	r3, r2
 8109424:	f303 0307 	ssat	r3, #8, r3
 8109428:	b25b      	sxtb	r3, r3
 810942a:	e732      	b.n	8109292 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x18e>
 810942c:	9904      	ldr	r1, [sp, #16]
 810942e:	e6d5      	b.n	81091dc <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0xd8>
 8109430:	2101      	movs	r1, #1
 8109432:	4613      	mov	r3, r2
 8109434:	e67d      	b.n	8109132 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x2e>
 8109436:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8109438:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 810943a:	1a9b      	subs	r3, r3, r2
 810943c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 810943e:	18d0      	adds	r0, r2, r3
 8109440:	b013      	add	sp, #76	; 0x4c
 8109442:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8109446:	2a00      	cmp	r2, #0
 8109448:	dd0e      	ble.n	8109468 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x364>
 810944a:	9920      	ldr	r1, [sp, #128]	; 0x80
 810944c:	9821      	ldr	r0, [sp, #132]	; 0x84
 810944e:	6809      	ldr	r1, [r1, #0]
 8109450:	6800      	ldr	r0, [r0, #0]
 8109452:	005b      	lsls	r3, r3, #1
 8109454:	fb53 0301 	smmla	r3, r3, r1, r0
 8109458:	4113      	asrs	r3, r2
 810945a:	f303 0307 	ssat	r3, #8, r3
 810945e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8109460:	f802 3b01 	strb.w	r3, [r2], #1
 8109464:	9223      	str	r2, [sp, #140]	; 0x8c
 8109466:	e786      	b.n	8109376 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x272>
 8109468:	f1c2 0201 	rsb	r2, r2, #1
 810946c:	4093      	lsls	r3, r2
 810946e:	f303 031f 	ssat	r3, #32, r3
 8109472:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8109474:	6812      	ldr	r2, [r2, #0]
 8109476:	fb53 f312 	smmulr	r3, r3, r2
 810947a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 810947c:	6812      	ldr	r2, [r2, #0]
 810947e:	4413      	add	r3, r2
 8109480:	f303 0307 	ssat	r3, #8, r3
 8109484:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8109486:	f802 3b01 	strb.w	r3, [r2], #1
 810948a:	9223      	str	r2, [sp, #140]	; 0x8c
 810948c:	e773      	b.n	8109376 <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x272>
 810948e:	4606      	mov	r6, r0
 8109490:	e744      	b.n	810931c <st_sssa8_ch_nn_mat_mult_kernel_single_opt+0x218>
 8109492:	bf00      	nop

08109494 <weights_2channels_prefetch>:
 8109494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8109498:	b087      	sub	sp, #28
 810949a:	2b00      	cmp	r3, #0
 810949c:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
 81094a0:	9302      	str	r3, [sp, #8]
 81094a2:	f340 80d7 	ble.w	8109654 <weights_2channels_prefetch+0x1c0>
 81094a6:	f1a8 0310 	sub.w	r3, r8, #16
 81094aa:	091b      	lsrs	r3, r3, #4
 81094ac:	3301      	adds	r3, #1
 81094ae:	f1a8 0403 	sub.w	r4, r8, #3
 81094b2:	9403      	str	r4, [sp, #12]
 81094b4:	011c      	lsls	r4, r3, #4
 81094b6:	019b      	lsls	r3, r3, #6
 81094b8:	9304      	str	r3, [sp, #16]
 81094ba:	f1a8 0304 	sub.w	r3, r8, #4
 81094be:	9400      	str	r4, [sp, #0]
 81094c0:	f04f 0b00 	mov.w	fp, #0
 81094c4:	9305      	str	r3, [sp, #20]
 81094c6:	f1b8 0f0f 	cmp.w	r8, #15
 81094ca:	f340 80c8 	ble.w	810965e <weights_2channels_prefetch+0x1ca>
 81094ce:	9b00      	ldr	r3, [sp, #0]
 81094d0:	460c      	mov	r4, r1
 81094d2:	18c6      	adds	r6, r0, r3
 81094d4:	4613      	mov	r3, r2
 81094d6:	6807      	ldr	r7, [r0, #0]
 81094d8:	6825      	ldr	r5, [r4, #0]
 81094da:	ea4f 2c37 	mov.w	ip, r7, ror #8
 81094de:	fa2f f787 	sxtb16	r7, r7
 81094e2:	601f      	str	r7, [r3, #0]
 81094e4:	fa2f f78c 	sxtb16	r7, ip
 81094e8:	605f      	str	r7, [r3, #4]
 81094ea:	ea4f 2735 	mov.w	r7, r5, ror #8
 81094ee:	fa2f f585 	sxtb16	r5, r5
 81094f2:	609d      	str	r5, [r3, #8]
 81094f4:	fa2f f587 	sxtb16	r5, r7
 81094f8:	60dd      	str	r5, [r3, #12]
 81094fa:	6847      	ldr	r7, [r0, #4]
 81094fc:	6865      	ldr	r5, [r4, #4]
 81094fe:	ea4f 2c37 	mov.w	ip, r7, ror #8
 8109502:	fa2f f787 	sxtb16	r7, r7
 8109506:	611f      	str	r7, [r3, #16]
 8109508:	fa2f f78c 	sxtb16	r7, ip
 810950c:	615f      	str	r7, [r3, #20]
 810950e:	ea4f 2735 	mov.w	r7, r5, ror #8
 8109512:	fa2f f585 	sxtb16	r5, r5
 8109516:	619d      	str	r5, [r3, #24]
 8109518:	fa2f f587 	sxtb16	r5, r7
 810951c:	61dd      	str	r5, [r3, #28]
 810951e:	6887      	ldr	r7, [r0, #8]
 8109520:	68a5      	ldr	r5, [r4, #8]
 8109522:	ea4f 2c37 	mov.w	ip, r7, ror #8
 8109526:	fa2f f787 	sxtb16	r7, r7
 810952a:	621f      	str	r7, [r3, #32]
 810952c:	fa2f f78c 	sxtb16	r7, ip
 8109530:	625f      	str	r7, [r3, #36]	; 0x24
 8109532:	ea4f 2735 	mov.w	r7, r5, ror #8
 8109536:	fa2f f585 	sxtb16	r5, r5
 810953a:	629d      	str	r5, [r3, #40]	; 0x28
 810953c:	fa2f f587 	sxtb16	r5, r7
 8109540:	62dd      	str	r5, [r3, #44]	; 0x2c
 8109542:	68c7      	ldr	r7, [r0, #12]
 8109544:	68e5      	ldr	r5, [r4, #12]
 8109546:	3010      	adds	r0, #16
 8109548:	42b0      	cmp	r0, r6
 810954a:	ea4f 2c37 	mov.w	ip, r7, ror #8
 810954e:	f104 0410 	add.w	r4, r4, #16
 8109552:	fa2f f787 	sxtb16	r7, r7
 8109556:	f103 0340 	add.w	r3, r3, #64	; 0x40
 810955a:	f843 7c10 	str.w	r7, [r3, #-16]
 810955e:	fa2f f78c 	sxtb16	r7, ip
 8109562:	f843 7c0c 	str.w	r7, [r3, #-12]
 8109566:	ea4f 2735 	mov.w	r7, r5, ror #8
 810956a:	fa2f f585 	sxtb16	r5, r5
 810956e:	f843 5c08 	str.w	r5, [r3, #-8]
 8109572:	fa2f f587 	sxtb16	r5, r7
 8109576:	f843 5c04 	str.w	r5, [r3, #-4]
 810957a:	d1ac      	bne.n	81094d6 <weights_2channels_prefetch+0x42>
 810957c:	9b04      	ldr	r3, [sp, #16]
 810957e:	441a      	add	r2, r3
 8109580:	9b00      	ldr	r3, [sp, #0]
 8109582:	4419      	add	r1, r3
 8109584:	469e      	mov	lr, r3
 8109586:	9b03      	ldr	r3, [sp, #12]
 8109588:	4573      	cmp	r3, lr
 810958a:	dd66      	ble.n	810965a <weights_2channels_prefetch+0x1c6>
 810958c:	9b05      	ldr	r3, [sp, #20]
 810958e:	eba3 090e 	sub.w	r9, r3, lr
 8109592:	ea4f 0999 	mov.w	r9, r9, lsr #2
 8109596:	f109 0a01 	add.w	sl, r9, #1
 810959a:	ea4f 038a 	mov.w	r3, sl, lsl #2
 810959e:	9301      	str	r3, [sp, #4]
 81095a0:	eb06 008a 	add.w	r0, r6, sl, lsl #2
 81095a4:	4613      	mov	r3, r2
 81095a6:	468c      	mov	ip, r1
 81095a8:	f856 5b04 	ldr.w	r5, [r6], #4
 81095ac:	f85c 4b04 	ldr.w	r4, [ip], #4
 81095b0:	4286      	cmp	r6, r0
 81095b2:	ea4f 2735 	mov.w	r7, r5, ror #8
 81095b6:	f103 0310 	add.w	r3, r3, #16
 81095ba:	fa2f f585 	sxtb16	r5, r5
 81095be:	fa2f f787 	sxtb16	r7, r7
 81095c2:	f843 5c10 	str.w	r5, [r3, #-16]
 81095c6:	f843 7c0c 	str.w	r7, [r3, #-12]
 81095ca:	ea4f 2534 	mov.w	r5, r4, ror #8
 81095ce:	fa2f f484 	sxtb16	r4, r4
 81095d2:	f843 4c08 	str.w	r4, [r3, #-8]
 81095d6:	fa2f f485 	sxtb16	r4, r5
 81095da:	f843 4c04 	str.w	r4, [r3, #-4]
 81095de:	d1e3      	bne.n	81095a8 <weights_2channels_prefetch+0x114>
 81095e0:	9b01      	ldr	r3, [sp, #4]
 81095e2:	f10e 0e04 	add.w	lr, lr, #4
 81095e6:	eb02 120a 	add.w	r2, r2, sl, lsl #4
 81095ea:	4419      	add	r1, r3
 81095ec:	eb0e 0e89 	add.w	lr, lr, r9, lsl #2
 81095f0:	45f0      	cmp	r8, lr
 81095f2:	dd29      	ble.n	8109648 <weights_2channels_prefetch+0x1b4>
 81095f4:	f990 3000 	ldrsb.w	r3, [r0]
 81095f8:	8013      	strh	r3, [r2, #0]
 81095fa:	f991 3000 	ldrsb.w	r3, [r1]
 81095fe:	8053      	strh	r3, [r2, #2]
 8109600:	f10e 0301 	add.w	r3, lr, #1
 8109604:	4598      	cmp	r8, r3
 8109606:	dd19      	ble.n	810963c <weights_2channels_prefetch+0x1a8>
 8109608:	f990 3001 	ldrsb.w	r3, [r0, #1]
 810960c:	8093      	strh	r3, [r2, #4]
 810960e:	f991 3001 	ldrsb.w	r3, [r1, #1]
 8109612:	80d3      	strh	r3, [r2, #6]
 8109614:	f10e 0302 	add.w	r3, lr, #2
 8109618:	4598      	cmp	r8, r3
 810961a:	dd0f      	ble.n	810963c <weights_2channels_prefetch+0x1a8>
 810961c:	f990 3002 	ldrsb.w	r3, [r0, #2]
 8109620:	8113      	strh	r3, [r2, #8]
 8109622:	f991 3002 	ldrsb.w	r3, [r1, #2]
 8109626:	8153      	strh	r3, [r2, #10]
 8109628:	f10e 0303 	add.w	r3, lr, #3
 810962c:	4598      	cmp	r8, r3
 810962e:	dd05      	ble.n	810963c <weights_2channels_prefetch+0x1a8>
 8109630:	f990 3003 	ldrsb.w	r3, [r0, #3]
 8109634:	8193      	strh	r3, [r2, #12]
 8109636:	f991 3003 	ldrsb.w	r3, [r1, #3]
 810963a:	81d3      	strh	r3, [r2, #14]
 810963c:	eba8 0e0e 	sub.w	lr, r8, lr
 8109640:	4470      	add	r0, lr
 8109642:	4471      	add	r1, lr
 8109644:	eb02 028e 	add.w	r2, r2, lr, lsl #2
 8109648:	9b02      	ldr	r3, [sp, #8]
 810964a:	f10b 0b01 	add.w	fp, fp, #1
 810964e:	455b      	cmp	r3, fp
 8109650:	f47f af39 	bne.w	81094c6 <weights_2channels_prefetch+0x32>
 8109654:	b007      	add	sp, #28
 8109656:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 810965a:	4630      	mov	r0, r6
 810965c:	e7c8      	b.n	81095f0 <weights_2channels_prefetch+0x15c>
 810965e:	4606      	mov	r6, r0
 8109660:	f04f 0e00 	mov.w	lr, #0
 8109664:	e78f      	b.n	8109586 <weights_2channels_prefetch+0xf2>
 8109666:	bf00      	nop

08109668 <st_sssa8_ch_fullW_prefetch>:
 8109668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 810966c:	b087      	sub	sp, #28
 810966e:	4680      	mov	r8, r0
 8109670:	4618      	mov	r0, r3
 8109672:	4613      	mov	r3, r2
 8109674:	e9dd 2a10 	ldrd	r2, sl, [sp, #64]	; 0x40
 8109678:	104f      	asrs	r7, r1, #1
 810967a:	9103      	str	r1, [sp, #12]
 810967c:	eb08 0402 	add.w	r4, r8, r2
 8109680:	9704      	str	r7, [sp, #16]
 8109682:	d020      	beq.n	81096c6 <st_sssa8_ch_fullW_prefetch+0x5e>
 8109684:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8109686:	f8cd 8014 	str.w	r8, [sp, #20]
 810968a:	4646      	mov	r6, r8
 810968c:	4655      	mov	r5, sl
 810968e:	ea4f 0942 	mov.w	r9, r2, lsl #1
 8109692:	ea4f 0b82 	mov.w	fp, r2, lsl #2
 8109696:	4680      	mov	r8, r0
 8109698:	469a      	mov	sl, r3
 810969a:	462a      	mov	r2, r5
 810969c:	4621      	mov	r1, r4
 810969e:	4630      	mov	r0, r6
 81096a0:	f8cd 8000 	str.w	r8, [sp]
 81096a4:	4653      	mov	r3, sl
 81096a6:	f7ff fef5 	bl	8109494 <weights_2channels_prefetch>
 81096aa:	3f01      	subs	r7, #1
 81096ac:	445d      	add	r5, fp
 81096ae:	444c      	add	r4, r9
 81096b0:	444e      	add	r6, r9
 81096b2:	d1f2      	bne.n	810969a <st_sssa8_ch_fullW_prefetch+0x32>
 81096b4:	9b04      	ldr	r3, [sp, #16]
 81096b6:	f8dd 8014 	ldr.w	r8, [sp, #20]
 81096ba:	f8dd a044 	ldr.w	sl, [sp, #68]	; 0x44
 81096be:	fb03 8809 	mla	r8, r3, r9, r8
 81096c2:	fb03 aa0b 	mla	sl, r3, fp, sl
 81096c6:	9b03      	ldr	r3, [sp, #12]
 81096c8:	07db      	lsls	r3, r3, #31
 81096ca:	d509      	bpl.n	81096e0 <st_sssa8_ch_fullW_prefetch+0x78>
 81096cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 81096ce:	2b00      	cmp	r3, #0
 81096d0:	dd06      	ble.n	81096e0 <st_sssa8_ch_fullW_prefetch+0x78>
 81096d2:	4443      	add	r3, r8
 81096d4:	f918 2b01 	ldrsb.w	r2, [r8], #1
 81096d8:	f82a 2b02 	strh.w	r2, [sl], #2
 81096dc:	4543      	cmp	r3, r8
 81096de:	d1f9      	bne.n	81096d4 <st_sssa8_ch_fullW_prefetch+0x6c>
 81096e0:	b007      	add	sp, #28
 81096e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 81096e6:	bf00      	nop

081096e8 <st_int8_to_f32>:
 81096e8:	b530      	push	{r4, r5, lr}
 81096ea:	0894      	lsrs	r4, r2, #2
 81096ec:	d036      	beq.n	810975c <st_int8_to_f32+0x74>
 81096ee:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 81097ac <st_int8_to_f32+0xc4>
 81096f2:	1d03      	adds	r3, r0, #4
 81096f4:	f101 0c10 	add.w	ip, r1, #16
 81096f8:	eb00 0084 	add.w	r0, r0, r4, lsl #2
 81096fc:	f913 ec04 	ldrsb.w	lr, [r3, #-4]
 8109700:	ee07 ea90 	vmov	s15, lr
 8109704:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8109708:	469e      	mov	lr, r3
 810970a:	ee67 7a87 	vmul.f32	s15, s15, s14
 810970e:	3304      	adds	r3, #4
 8109710:	ed4c 7a04 	vstr	s15, [ip, #-16]
 8109714:	f913 5c07 	ldrsb.w	r5, [r3, #-7]
 8109718:	ee07 5a90 	vmov	s15, r5
 810971c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8109720:	4586      	cmp	lr, r0
 8109722:	ee67 7a87 	vmul.f32	s15, s15, s14
 8109726:	f10c 0c10 	add.w	ip, ip, #16
 810972a:	ed4c 7a07 	vstr	s15, [ip, #-28]	; 0xffffffe4
 810972e:	f913 5c06 	ldrsb.w	r5, [r3, #-6]
 8109732:	ee07 5a90 	vmov	s15, r5
 8109736:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 810973a:	ee67 7a87 	vmul.f32	s15, s15, s14
 810973e:	ed4c 7a06 	vstr	s15, [ip, #-24]	; 0xffffffe8
 8109742:	f913 5c05 	ldrsb.w	r5, [r3, #-5]
 8109746:	ee07 5a90 	vmov	s15, r5
 810974a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 810974e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8109752:	ed4c 7a05 	vstr	s15, [ip, #-20]	; 0xffffffec
 8109756:	d1d1      	bne.n	81096fc <st_int8_to_f32+0x14>
 8109758:	eb01 1104 	add.w	r1, r1, r4, lsl #4
 810975c:	f012 0203 	ands.w	r2, r2, #3
 8109760:	d023      	beq.n	81097aa <st_int8_to_f32+0xc2>
 8109762:	f990 3000 	ldrsb.w	r3, [r0]
 8109766:	ed9f 7a11 	vldr	s14, [pc, #68]	; 81097ac <st_int8_to_f32+0xc4>
 810976a:	ee07 3a90 	vmov	s15, r3
 810976e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8109772:	3a01      	subs	r2, #1
 8109774:	ee67 7a87 	vmul.f32	s15, s15, s14
 8109778:	edc1 7a00 	vstr	s15, [r1]
 810977c:	d015      	beq.n	81097aa <st_int8_to_f32+0xc2>
 810977e:	f990 3001 	ldrsb.w	r3, [r0, #1]
 8109782:	ee07 3a90 	vmov	s15, r3
 8109786:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 810978a:	2a01      	cmp	r2, #1
 810978c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8109790:	edc1 7a01 	vstr	s15, [r1, #4]
 8109794:	d009      	beq.n	81097aa <st_int8_to_f32+0xc2>
 8109796:	f990 3002 	ldrsb.w	r3, [r0, #2]
 810979a:	ee07 3a90 	vmov	s15, r3
 810979e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 81097a2:	ee67 7a87 	vmul.f32	s15, s15, s14
 81097a6:	edc1 7a02 	vstr	s15, [r1, #8]
 81097aa:	bd30      	pop	{r4, r5, pc}
 81097ac:	3c000000 	.word	0x3c000000

081097b0 <st_sssa8_dense_loop>:
 81097b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 81097b4:	b083      	sub	sp, #12
 81097b6:	bf00      	nop
 81097b8:	f8dd b03c 	ldr.w	fp, [sp, #60]	; 0x3c
 81097bc:	f1bb 0f00 	cmp.w	fp, #0
 81097c0:	bfcc      	ite	gt
 81097c2:	f04f 0c00 	movgt.w	ip, #0
 81097c6:	f04f 3cff 	movle.w	ip, #4294967295	; 0xffffffff
 81097ca:	f1bb 0f15 	cmp.w	fp, #21
 81097ce:	bfc8      	it	gt
 81097d0:	f04f 0c01 	movgt.w	ip, #1
 81097d4:	f8cd c000 	str.w	ip, [sp]
 81097d8:	9001      	str	r0, [sp, #4]
 81097da:	4692      	mov	sl, r2
 81097dc:	4699      	mov	r9, r3
 81097de:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
 81097e2:	460f      	mov	r7, r1
 81097e4:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 81097e8:	eb0b 0244 	add.w	r2, fp, r4, lsl #1
 81097ec:	9202      	str	r2, [sp, #8]
 81097ee:	2c00      	cmp	r4, #0
 81097f0:	f000 80dc 	beq.w	81099ac <Exit>

081097f4 <MainLoop>:
 81097f4:	f8dd 8004 	ldr.w	r8, [sp, #4]
 81097f8:	f8d9 e000 	ldr.w	lr, [r9]
 81097fc:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8109800:	ea4f 162a 	mov.w	r6, sl, asr #4
 8109804:	2e00      	cmp	r6, #0
 8109806:	f109 0908 	add.w	r9, r9, #8
 810980a:	d05b      	beq.n	81098c4 <NextLoop4>

0810980c <Loop16>:
 810980c:	6838      	ldr	r0, [r7, #0]
 810980e:	6879      	ldr	r1, [r7, #4]
 8109810:	f858 4b04 	ldr.w	r4, [r8], #4
 8109814:	f858 5b04 	ldr.w	r5, [r8], #4
 8109818:	fa2f f391 	sxtb16	r3, r1, ror #8
 810981c:	fa2f f181 	sxtb16	r1, r1
 8109820:	fa2f f290 	sxtb16	r2, r0, ror #8
 8109824:	fa2f f080 	sxtb16	r0, r0
 8109828:	fb23 cc05 	smlad	ip, r3, r5, ip
 810982c:	fb21 cc04 	smlad	ip, r1, r4, ip
 8109830:	fb22 ee05 	smlad	lr, r2, r5, lr
 8109834:	fb20 ee04 	smlad	lr, r0, r4, lr
 8109838:	68b8      	ldr	r0, [r7, #8]
 810983a:	68f9      	ldr	r1, [r7, #12]
 810983c:	f858 4b04 	ldr.w	r4, [r8], #4
 8109840:	f858 5b04 	ldr.w	r5, [r8], #4
 8109844:	fa2f f391 	sxtb16	r3, r1, ror #8
 8109848:	fa2f f181 	sxtb16	r1, r1
 810984c:	fa2f f290 	sxtb16	r2, r0, ror #8
 8109850:	fa2f f080 	sxtb16	r0, r0
 8109854:	fb23 cc05 	smlad	ip, r3, r5, ip
 8109858:	fb21 cc04 	smlad	ip, r1, r4, ip
 810985c:	fb22 ee05 	smlad	lr, r2, r5, lr
 8109860:	fb20 ee04 	smlad	lr, r0, r4, lr
 8109864:	6938      	ldr	r0, [r7, #16]
 8109866:	6979      	ldr	r1, [r7, #20]
 8109868:	f858 4b04 	ldr.w	r4, [r8], #4
 810986c:	f858 5b04 	ldr.w	r5, [r8], #4
 8109870:	fa2f f391 	sxtb16	r3, r1, ror #8
 8109874:	fa2f f181 	sxtb16	r1, r1
 8109878:	fa2f f290 	sxtb16	r2, r0, ror #8
 810987c:	fa2f f080 	sxtb16	r0, r0
 8109880:	fb23 cc05 	smlad	ip, r3, r5, ip
 8109884:	fb21 cc04 	smlad	ip, r1, r4, ip
 8109888:	fb22 ee05 	smlad	lr, r2, r5, lr
 810988c:	fb20 ee04 	smlad	lr, r0, r4, lr
 8109890:	69b8      	ldr	r0, [r7, #24]
 8109892:	69f9      	ldr	r1, [r7, #28]
 8109894:	f858 4b04 	ldr.w	r4, [r8], #4
 8109898:	f858 5b04 	ldr.w	r5, [r8], #4
 810989c:	fa2f f391 	sxtb16	r3, r1, ror #8
 81098a0:	fa2f f181 	sxtb16	r1, r1
 81098a4:	fa2f f290 	sxtb16	r2, r0, ror #8
 81098a8:	fa2f f080 	sxtb16	r0, r0
 81098ac:	fb23 cc05 	smlad	ip, r3, r5, ip
 81098b0:	fb21 cc04 	smlad	ip, r1, r4, ip
 81098b4:	fb22 ee05 	smlad	lr, r2, r5, lr
 81098b8:	fb20 ee04 	smlad	lr, r0, r4, lr
 81098bc:	3e01      	subs	r6, #1
 81098be:	f107 0720 	add.w	r7, r7, #32
 81098c2:	dca3      	bgt.n	810980c <Loop16>

081098c4 <NextLoop4>:
 81098c4:	f3ca 0681 	ubfx	r6, sl, #2, #2
 81098c8:	2e00      	cmp	r6, #0
 81098ca:	d019      	beq.n	8109900 <FinalLoop>

081098cc <Loop4>:
 81098cc:	6838      	ldr	r0, [r7, #0]
 81098ce:	6879      	ldr	r1, [r7, #4]
 81098d0:	f858 4b04 	ldr.w	r4, [r8], #4
 81098d4:	f858 5b04 	ldr.w	r5, [r8], #4
 81098d8:	fa2f f391 	sxtb16	r3, r1, ror #8
 81098dc:	fa2f f181 	sxtb16	r1, r1
 81098e0:	fa2f f290 	sxtb16	r2, r0, ror #8
 81098e4:	fa2f f080 	sxtb16	r0, r0
 81098e8:	fb23 cc05 	smlad	ip, r3, r5, ip
 81098ec:	fb21 cc04 	smlad	ip, r1, r4, ip
 81098f0:	fb22 ee05 	smlad	lr, r2, r5, lr
 81098f4:	fb20 ee04 	smlad	lr, r0, r4, lr
 81098f8:	3e01      	subs	r6, #1
 81098fa:	f107 0708 	add.w	r7, r7, #8
 81098fe:	dce5      	bgt.n	81098cc <Loop4>

08109900 <FinalLoop>:
 8109900:	f00a 0603 	and.w	r6, sl, #3
 8109904:	2e00      	cmp	r6, #0
 8109906:	dd0b      	ble.n	8109920 <OutputFormatting>

08109908 <Loop1>:
 8109908:	f938 4b02 	ldrsh.w	r4, [r8], #2
 810990c:	f917 0b01 	ldrsb.w	r0, [r7], #1
 8109910:	f917 1b01 	ldrsb.w	r1, [r7], #1
 8109914:	fb10 ee04 	smlabb	lr, r0, r4, lr
 8109918:	fb11 cc04 	smlabb	ip, r1, r4, ip
 810991c:	3e01      	subs	r6, #1
 810991e:	d1f3      	bne.n	8109908 <Loop1>

08109920 <OutputFormatting>:
 8109920:	980e      	ldr	r0, [sp, #56]	; 0x38
 8109922:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8109924:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8109926:	9e00      	ldr	r6, [sp, #0]
 8109928:	2e00      	cmp	r6, #0
 810992a:	d10c      	bne.n	8109946 <OutputFormatting_ex>
 810992c:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8109930:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 8109934:	fb5e 5e00 	smmla	lr, lr, r0, r5
 8109938:	fb5c 5c00 	smmla	ip, ip, r0, r5
 810993c:	fa4e fe01 	asr.w	lr, lr, r1
 8109940:	fa4c fc01 	asr.w	ip, ip, r1
 8109944:	e026      	b.n	8109994 <EndScaling>

08109946 <OutputFormatting_ex>:
 8109946:	1c73      	adds	r3, r6, #1
 8109948:	d014      	beq.n	8109974 <OutputFormatting_Neg>
 810994a:	f04f 0301 	mov.w	r3, #1
 810994e:	fa03 f301 	lsl.w	r3, r3, r1
 8109952:	ea4f 03a3 	mov.w	r3, r3, asr #2
 8109956:	fb5e 3e00 	smmla	lr, lr, r0, r3
 810995a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 810995e:	fa4e fe01 	asr.w	lr, lr, r1
 8109962:	44ae      	add	lr, r5
 8109964:	fb5c 3c00 	smmla	ip, ip, r0, r3
 8109968:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 810996c:	fa4c fc01 	asr.w	ip, ip, r1
 8109970:	44ac      	add	ip, r5
 8109972:	e00f      	b.n	8109994 <EndScaling>

08109974 <OutputFormatting_Neg>:
 8109974:	f1c1 0301 	rsb	r3, r1, #1
 8109978:	fa0e fe03 	lsl.w	lr, lr, r3
 810997c:	f30e 0e1f 	ssat	lr, #32, lr
 8109980:	fb5e fe10 	smmulr	lr, lr, r0
 8109984:	fa0c fc03 	lsl.w	ip, ip, r3
 8109988:	f30c 0c1f 	ssat	ip, #32, ip
 810998c:	fb5c fc10 	smmulr	ip, ip, r0
 8109990:	44ae      	add	lr, r5
 8109992:	44ac      	add	ip, r5

08109994 <EndScaling>:
 8109994:	f30e 0e07 	ssat	lr, #8, lr
 8109998:	9b02      	ldr	r3, [sp, #8]
 810999a:	f30c 0c07 	ssat	ip, #8, ip
 810999e:	f36c 2e0f 	bfi	lr, ip, #8, #8
 81099a2:	f82b eb02 	strh.w	lr, [fp], #2
 81099a6:	459b      	cmp	fp, r3
 81099a8:	f47f af24 	bne.w	81097f4 <MainLoop>

081099ac <Exit>:
 81099ac:	b003      	add	sp, #12
 81099ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 81099b2:	bf00      	nop
 81099b4:	f3af 8000 	nop.w
 81099b8:	f3af 8000 	nop.w
 81099bc:	f3af 8000 	nop.w

081099c0 <st_sssa8_dense_memopt_loop>:
 81099c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 81099c4:	b087      	sub	sp, #28
 81099c6:	bf00      	nop
 81099c8:	bf00      	nop
 81099ca:	bf00      	nop
 81099cc:	f8dd b050 	ldr.w	fp, [sp, #80]	; 0x50
 81099d0:	f1bb 0f00 	cmp.w	fp, #0
 81099d4:	bfcc      	ite	gt
 81099d6:	f04f 0c00 	movgt.w	ip, #0
 81099da:	f04f 3cff 	movle.w	ip, #4294967295	; 0xffffffff
 81099de:	f1bb 0f15 	cmp.w	fp, #21
 81099e2:	bfc8      	it	gt
 81099e4:	f04f 0c01 	movgt.w	ip, #1
 81099e8:	f8cd c018 	str.w	ip, [sp, #24]
 81099ec:	9d12      	ldr	r5, [sp, #72]	; 0x48
 81099ee:	f1c5 0a00 	rsb	sl, r5, #0
 81099f2:	eaca 4a0a 	pkhbt	sl, sl, sl, lsl #16
 81099f6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 81099f8:	4680      	mov	r8, r0
 81099fa:	460f      	mov	r7, r1
 81099fc:	4699      	mov	r9, r3
 81099fe:	f8dd b054 	ldr.w	fp, [sp, #84]	; 0x54
 8109a02:	9004      	str	r0, [sp, #16]
 8109a04:	9200      	str	r2, [sp, #0]
 8109a06:	f022 050f 	bic.w	r5, r2, #15
 8109a0a:	4405      	add	r5, r0
 8109a0c:	9503      	str	r5, [sp, #12]
 8109a0e:	f022 0503 	bic.w	r5, r2, #3
 8109a12:	4405      	add	r5, r0
 8109a14:	9502      	str	r5, [sp, #8]
 8109a16:	f002 0503 	and.w	r5, r2, #3
 8109a1a:	9505      	str	r5, [sp, #20]
 8109a1c:	2c00      	cmp	r4, #0
 8109a1e:	f340 80f5 	ble.w	8109c0c <Exit_m>
 8109a22:	eb0b 0344 	add.w	r3, fp, r4, lsl #1
 8109a26:	9301      	str	r3, [sp, #4]

08109a28 <MainLoop_m>:
 8109a28:	9b00      	ldr	r3, [sp, #0]
 8109a2a:	f859 eb04 	ldr.w	lr, [r9], #4
 8109a2e:	f859 cb04 	ldr.w	ip, [r9], #4
 8109a32:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8109a36:	2b0f      	cmp	r3, #15
 8109a38:	dd6c      	ble.n	8109b14 <NextLoop4_m>
 8109a3a:	9b03      	ldr	r3, [sp, #12]

08109a3c <Loop16_m>:
 8109a3c:	6838      	ldr	r0, [r7, #0]
 8109a3e:	6879      	ldr	r1, [r7, #4]
 8109a40:	f858 4b04 	ldr.w	r4, [r8], #4
 8109a44:	fa2f f690 	sxtb16	r6, r0, ror #8
 8109a48:	fa2f f591 	sxtb16	r5, r1, ror #8
 8109a4c:	ea4f 2234 	mov.w	r2, r4, ror #8
 8109a50:	fa2f f181 	sxtb16	r1, r1
 8109a54:	fa2f f080 	sxtb16	r0, r0
 8109a58:	fa2a f484 	sxtab16	r4, sl, r4
 8109a5c:	fa2a f282 	sxtab16	r2, sl, r2
 8109a60:	fb24 ee00 	smlad	lr, r4, r0, lr
 8109a64:	fb22 ee06 	smlad	lr, r2, r6, lr
 8109a68:	fb24 cc01 	smlad	ip, r4, r1, ip
 8109a6c:	fb22 cc05 	smlad	ip, r2, r5, ip
 8109a70:	68b8      	ldr	r0, [r7, #8]
 8109a72:	68f9      	ldr	r1, [r7, #12]
 8109a74:	f858 4b04 	ldr.w	r4, [r8], #4
 8109a78:	fa2f f690 	sxtb16	r6, r0, ror #8
 8109a7c:	fa2f f591 	sxtb16	r5, r1, ror #8
 8109a80:	ea4f 2234 	mov.w	r2, r4, ror #8
 8109a84:	fa2f f181 	sxtb16	r1, r1
 8109a88:	fa2f f080 	sxtb16	r0, r0
 8109a8c:	fa2a f484 	sxtab16	r4, sl, r4
 8109a90:	fa2a f282 	sxtab16	r2, sl, r2
 8109a94:	fb24 ee00 	smlad	lr, r4, r0, lr
 8109a98:	fb22 ee06 	smlad	lr, r2, r6, lr
 8109a9c:	fb24 cc01 	smlad	ip, r4, r1, ip
 8109aa0:	fb22 cc05 	smlad	ip, r2, r5, ip
 8109aa4:	6938      	ldr	r0, [r7, #16]
 8109aa6:	6979      	ldr	r1, [r7, #20]
 8109aa8:	f858 4b04 	ldr.w	r4, [r8], #4
 8109aac:	fa2f f690 	sxtb16	r6, r0, ror #8
 8109ab0:	fa2f f591 	sxtb16	r5, r1, ror #8
 8109ab4:	ea4f 2234 	mov.w	r2, r4, ror #8
 8109ab8:	fa2f f181 	sxtb16	r1, r1
 8109abc:	fa2f f080 	sxtb16	r0, r0
 8109ac0:	fa2a f484 	sxtab16	r4, sl, r4
 8109ac4:	fa2a f282 	sxtab16	r2, sl, r2
 8109ac8:	fb24 ee00 	smlad	lr, r4, r0, lr
 8109acc:	fb22 ee06 	smlad	lr, r2, r6, lr
 8109ad0:	fb24 cc01 	smlad	ip, r4, r1, ip
 8109ad4:	fb22 cc05 	smlad	ip, r2, r5, ip
 8109ad8:	69b8      	ldr	r0, [r7, #24]
 8109ada:	69f9      	ldr	r1, [r7, #28]
 8109adc:	f858 4b04 	ldr.w	r4, [r8], #4
 8109ae0:	fa2f f690 	sxtb16	r6, r0, ror #8
 8109ae4:	fa2f f591 	sxtb16	r5, r1, ror #8
 8109ae8:	ea4f 2234 	mov.w	r2, r4, ror #8
 8109aec:	fa2f f181 	sxtb16	r1, r1
 8109af0:	fa2f f080 	sxtb16	r0, r0
 8109af4:	fa2a f484 	sxtab16	r4, sl, r4
 8109af8:	fa2a f282 	sxtab16	r2, sl, r2
 8109afc:	fb24 ee00 	smlad	lr, r4, r0, lr
 8109b00:	fb22 ee06 	smlad	lr, r2, r6, lr
 8109b04:	fb24 cc01 	smlad	ip, r4, r1, ip
 8109b08:	fb22 cc05 	smlad	ip, r2, r5, ip
 8109b0c:	4598      	cmp	r8, r3
 8109b0e:	f107 0720 	add.w	r7, r7, #32
 8109b12:	d193      	bne.n	8109a3c <Loop16_m>

08109b14 <NextLoop4_m>:
 8109b14:	9b02      	ldr	r3, [sp, #8]
 8109b16:	4598      	cmp	r8, r3
 8109b18:	d01d      	beq.n	8109b56 <FinalLoop_m>

08109b1a <Loop4_m>:
 8109b1a:	6838      	ldr	r0, [r7, #0]
 8109b1c:	6879      	ldr	r1, [r7, #4]
 8109b1e:	f858 4b04 	ldr.w	r4, [r8], #4
 8109b22:	fa2f f690 	sxtb16	r6, r0, ror #8
 8109b26:	fa2f f591 	sxtb16	r5, r1, ror #8
 8109b2a:	ea4f 2234 	mov.w	r2, r4, ror #8
 8109b2e:	fa2f f181 	sxtb16	r1, r1
 8109b32:	fa2f f080 	sxtb16	r0, r0
 8109b36:	fa2a f484 	sxtab16	r4, sl, r4
 8109b3a:	fa2a f282 	sxtab16	r2, sl, r2
 8109b3e:	fb24 ee00 	smlad	lr, r4, r0, lr
 8109b42:	fb22 ee06 	smlad	lr, r2, r6, lr
 8109b46:	fb24 cc01 	smlad	ip, r4, r1, ip
 8109b4a:	fb22 cc05 	smlad	ip, r2, r5, ip
 8109b4e:	f107 0708 	add.w	r7, r7, #8
 8109b52:	4598      	cmp	r8, r3
 8109b54:	d1e1      	bne.n	8109b1a <Loop4_m>

08109b56 <FinalLoop_m>:
 8109b56:	9b05      	ldr	r3, [sp, #20]
 8109b58:	2b00      	cmp	r3, #0
 8109b5a:	d011      	beq.n	8109b80 <OutputFormatting_m>

08109b5c <Loop1_m>:
 8109b5c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8109b5e:	f918 4b01 	ldrsb.w	r4, [r8], #1
 8109b62:	eba4 0405 	sub.w	r4, r4, r5
 8109b66:	f917 5b01 	ldrsb.w	r5, [r7], #1
 8109b6a:	b224      	sxth	r4, r4
 8109b6c:	fb14 ee05 	smlabb	lr, r4, r5, lr
 8109b70:	f917 5b01 	ldrsb.w	r5, [r7], #1
 8109b74:	fb14 cc05 	smlabb	ip, r4, r5, ip
 8109b78:	f1a3 0301 	sub.w	r3, r3, #1
 8109b7c:	2b00      	cmp	r3, #0
 8109b7e:	dced      	bgt.n	8109b5c <Loop1_m>

08109b80 <OutputFormatting_m>:
 8109b80:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8109b82:	9914      	ldr	r1, [sp, #80]	; 0x50
 8109b84:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8109b86:	9e06      	ldr	r6, [sp, #24]
 8109b88:	2e00      	cmp	r6, #0
 8109b8a:	d10c      	bne.n	8109ba6 <OutputFormatting_m_ex>
 8109b8c:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8109b90:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 8109b94:	fb5e 5e00 	smmla	lr, lr, r0, r5
 8109b98:	fb5c 5c00 	smmla	ip, ip, r0, r5
 8109b9c:	fa4e fe01 	asr.w	lr, lr, r1
 8109ba0:	fa4c fc01 	asr.w	ip, ip, r1
 8109ba4:	e026      	b.n	8109bf4 <EndScaling_m>

08109ba6 <OutputFormatting_m_ex>:
 8109ba6:	1c73      	adds	r3, r6, #1
 8109ba8:	d014      	beq.n	8109bd4 <OutputFormatting_m_Neg>
 8109baa:	f04f 0301 	mov.w	r3, #1
 8109bae:	fa03 f301 	lsl.w	r3, r3, r1
 8109bb2:	ea4f 03a3 	mov.w	r3, r3, asr #2
 8109bb6:	fb5e 3e00 	smmla	lr, lr, r0, r3
 8109bba:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8109bbe:	fa4e fe01 	asr.w	lr, lr, r1
 8109bc2:	44ae      	add	lr, r5
 8109bc4:	fb5c 3c00 	smmla	ip, ip, r0, r3
 8109bc8:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 8109bcc:	fa4c fc01 	asr.w	ip, ip, r1
 8109bd0:	44ac      	add	ip, r5
 8109bd2:	e00f      	b.n	8109bf4 <EndScaling_m>

08109bd4 <OutputFormatting_m_Neg>:
 8109bd4:	f1c1 0301 	rsb	r3, r1, #1
 8109bd8:	fa0e fe03 	lsl.w	lr, lr, r3
 8109bdc:	f30e 0e1f 	ssat	lr, #32, lr
 8109be0:	fb5e fe10 	smmulr	lr, lr, r0
 8109be4:	fa0c fc03 	lsl.w	ip, ip, r3
 8109be8:	f30c 0c1f 	ssat	ip, #32, ip
 8109bec:	fb5c fc10 	smmulr	ip, ip, r0
 8109bf0:	44ae      	add	lr, r5
 8109bf2:	44ac      	add	ip, r5

08109bf4 <EndScaling_m>:
 8109bf4:	f30e 0e07 	ssat	lr, #8, lr
 8109bf8:	9b01      	ldr	r3, [sp, #4]
 8109bfa:	f30c 0c07 	ssat	ip, #8, ip
 8109bfe:	f36c 2e0f 	bfi	lr, ip, #8, #8
 8109c02:	f82b eb02 	strh.w	lr, [fp], #2
 8109c06:	459b      	cmp	fp, r3
 8109c08:	f6ff af0e 	blt.w	8109a28 <MainLoop_m>

08109c0c <Exit_m>:
 8109c0c:	b007      	add	sp, #28
 8109c0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8109c12:	bf00      	nop

08109c14 <st_sssa8_ch_nn_mat_mult_kernel_opt>:
 8109c14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8109c18:	b086      	sub	sp, #24
 8109c1a:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8109c1e:	9100      	str	r1, [sp, #0]
 8109c20:	9203      	str	r2, [sp, #12]
 8109c22:	2f00      	cmp	r7, #0
 8109c24:	9305      	str	r3, [sp, #20]
 8109c26:	bf18      	it	ne
 8109c28:	2301      	movne	r3, #1
 8109c2a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8109c2c:	fb04 3303 	mla	r3, r4, r3, r3
 8109c30:	9304      	str	r3, [sp, #16]
 8109c32:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8109c34:	bf14      	ite	ne
 8109c36:	462f      	movne	r7, r5
 8109c38:	2701      	moveq	r7, #1
 8109c3a:	9701      	str	r7, [sp, #4]
 8109c3c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8109c40:	085b      	lsrs	r3, r3, #1
 8109c42:	f000 809f 	beq.w	8109d84 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x170>
 8109c46:	f8dd b050 	ldr.w	fp, [sp, #80]	; 0x50
 8109c4a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8109c4c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8109c50:	9302      	str	r3, [sp, #8]
 8109c52:	f8dd e048 	ldr.w	lr, [sp, #72]	; 0x48
 8109c56:	9f03      	ldr	r7, [sp, #12]
 8109c58:	ea5f 089e 	movs.w	r8, lr, lsr #2
 8109c5c:	f8dd c000 	ldr.w	ip, [sp]
 8109c60:	f857 6b04 	ldr.w	r6, [r7], #4
 8109c64:	f857 3b04 	ldr.w	r3, [r7], #4
 8109c68:	9703      	str	r7, [sp, #12]
 8109c6a:	461a      	mov	r2, r3
 8109c6c:	4631      	mov	r1, r6
 8109c6e:	d022      	beq.n	8109cb6 <st_sssa8_ch_nn_mat_mult_kernel_opt+0xa2>
 8109c70:	f85c 701e 	ldr.w	r7, [ip, lr, lsl #1]
 8109c74:	f85c 9b04 	ldr.w	r9, [ip], #4
 8109c78:	f850 ab04 	ldr.w	sl, [r0], #4
 8109c7c:	f850 5b04 	ldr.w	r5, [r0], #4
 8109c80:	fb2a 6609 	smlad	r6, sl, r9, r6
 8109c84:	fb2a 1107 	smlad	r1, sl, r7, r1
 8109c88:	fb25 3309 	smlad	r3, r5, r9, r3
 8109c8c:	fb25 2207 	smlad	r2, r5, r7, r2
 8109c90:	f85c 701e 	ldr.w	r7, [ip, lr, lsl #1]
 8109c94:	f85c 9b04 	ldr.w	r9, [ip], #4
 8109c98:	f850 ab04 	ldr.w	sl, [r0], #4
 8109c9c:	f850 5b04 	ldr.w	r5, [r0], #4
 8109ca0:	fb2a 6609 	smlad	r6, sl, r9, r6
 8109ca4:	fb2a 1107 	smlad	r1, sl, r7, r1
 8109ca8:	fb25 3309 	smlad	r3, r5, r9, r3
 8109cac:	fb25 2207 	smlad	r2, r5, r7, r2
 8109cb0:	f1b8 0801 	subs.w	r8, r8, #1
 8109cb4:	d1dc      	bne.n	8109c70 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x5c>
 8109cb6:	f00e 0703 	and.w	r7, lr, #3
 8109cba:	b18f      	cbz	r7, 8109ce0 <st_sssa8_ch_nn_mat_mult_kernel_opt+0xcc>
 8109cbc:	f93c 801e 	ldrsh.w	r8, [ip, lr, lsl #1]
 8109cc0:	f93c ab02 	ldrsh.w	sl, [ip], #2
 8109cc4:	f930 5b02 	ldrsh.w	r5, [r0], #2
 8109cc8:	f930 9b02 	ldrsh.w	r9, [r0], #2
 8109ccc:	fb0a 6605 	mla	r6, sl, r5, r6
 8109cd0:	fb09 330a 	mla	r3, r9, sl, r3
 8109cd4:	fb08 1105 	mla	r1, r8, r5, r1
 8109cd8:	fb09 2208 	mla	r2, r9, r8, r2
 8109cdc:	3f01      	subs	r7, #1
 8109cde:	dced      	bgt.n	8109cbc <st_sssa8_ch_nn_mat_mult_kernel_opt+0xa8>
 8109ce0:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 8109ce4:	9f15      	ldr	r7, [sp, #84]	; 0x54
 8109ce6:	f93a 4b02 	ldrsh.w	r4, [sl], #2
 8109cea:	f857 cb04 	ldr.w	ip, [r7], #4
 8109cee:	f85b 5b04 	ldr.w	r5, [fp], #4
 8109cf2:	f1c4 0915 	rsb	r9, r4, #21
 8109cf6:	ea99 0904 	eors.w	r9, r9, r4
 8109cfa:	f340 80c8 	ble.w	8109e8e <st_sssa8_ch_nn_mat_mult_kernel_opt+0x27a>
 8109cfe:	ea4f 0646 	mov.w	r6, r6, lsl #1
 8109d02:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8109d06:	fb56 c605 	smmla	r6, r6, r5, ip
 8109d0a:	fb51 c105 	smmla	r1, r1, r5, ip
 8109d0e:	fa46 f604 	asr.w	r6, r6, r4
 8109d12:	fa41 f104 	asr.w	r1, r1, r4
 8109d16:	f93a 4b02 	ldrsh.w	r4, [sl], #2
 8109d1a:	f857 cb04 	ldr.w	ip, [r7], #4
 8109d1e:	f85b 5b04 	ldr.w	r5, [fp], #4
 8109d22:	f1c4 0915 	rsb	r9, r4, #21
 8109d26:	ea99 0904 	eors.w	r9, r9, r4
 8109d2a:	f340 8099 	ble.w	8109e60 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x24c>
 8109d2e:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8109d32:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8109d36:	fb53 c305 	smmla	r3, r3, r5, ip
 8109d3a:	fb52 c205 	smmla	r2, r2, r5, ip
 8109d3e:	fa43 f304 	asr.w	r3, r3, r4
 8109d42:	fa42 f204 	asr.w	r2, r2, r4
 8109d46:	f306 0607 	ssat	r6, #8, r6
 8109d4a:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8109d4e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8109d50:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8109d54:	7026      	strb	r6, [r4, #0]
 8109d56:	44a0      	add	r8, r4
 8109d58:	f301 0107 	ssat	r1, #8, r1
 8109d5c:	f888 1000 	strb.w	r1, [r8]
 8109d60:	f303 0307 	ssat	r3, #8, r3
 8109d64:	f804 3009 	strb.w	r3, [r4, r9]
 8109d68:	f302 0207 	ssat	r2, #8, r2
 8109d6c:	f808 2009 	strb.w	r2, [r8, r9]
 8109d70:	eb04 0249 	add.w	r2, r4, r9, lsl #1
 8109d74:	9217      	str	r2, [sp, #92]	; 0x5c
 8109d76:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
 8109d7a:	9c02      	ldr	r4, [sp, #8]
 8109d7c:	9715      	str	r7, [sp, #84]	; 0x54
 8109d7e:	45a2      	cmp	sl, r4
 8109d80:	f47f af67 	bne.w	8109c52 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x3e>
 8109d84:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8109d86:	f013 0301 	ands.w	r3, r3, #1
 8109d8a:	d054      	beq.n	8109e36 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x222>
 8109d8c:	f8bd e048 	ldrh.w	lr, [sp, #72]	; 0x48
 8109d90:	9b03      	ldr	r3, [sp, #12]
 8109d92:	f8dd c000 	ldr.w	ip, [sp]
 8109d96:	6819      	ldr	r1, [r3, #0]
 8109d98:	ea5f 079e 	movs.w	r7, lr, lsr #2
 8109d9c:	eb0c 044e 	add.w	r4, ip, lr, lsl #1
 8109da0:	460e      	mov	r6, r1
 8109da2:	d015      	beq.n	8109dd0 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x1bc>
 8109da4:	f85c 501e 	ldr.w	r5, [ip, lr, lsl #1]
 8109da8:	f85c 8b04 	ldr.w	r8, [ip], #4
 8109dac:	f850 ab04 	ldr.w	sl, [r0], #4
 8109db0:	f850 3b04 	ldr.w	r3, [r0], #4
 8109db4:	fb2a 6608 	smlad	r6, sl, r8, r6
 8109db8:	fb2a 1105 	smlad	r1, sl, r5, r1
 8109dbc:	f85c a01e 	ldr.w	sl, [ip, lr, lsl #1]
 8109dc0:	f85c 8b04 	ldr.w	r8, [ip], #4
 8109dc4:	fb23 6608 	smlad	r6, r3, r8, r6
 8109dc8:	fb23 110a 	smlad	r1, r3, sl, r1
 8109dcc:	3f01      	subs	r7, #1
 8109dce:	d1e9      	bne.n	8109da4 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x190>
 8109dd0:	f01e 0703 	ands.w	r7, lr, #3
 8109dd4:	d00b      	beq.n	8109dee <st_sssa8_ch_nn_mat_mult_kernel_opt+0x1da>
 8109dd6:	f83c 301e 	ldrh.w	r3, [ip, lr, lsl #1]
 8109dda:	f83c 9b02 	ldrh.w	r9, [ip], #2
 8109dde:	f930 ab02 	ldrsh.w	sl, [r0], #2
 8109de2:	fb19 660a 	smlabb	r6, r9, sl, r6
 8109de6:	3f01      	subs	r7, #1
 8109de8:	fb13 110a 	smlabb	r1, r3, sl, r1
 8109dec:	dcf3      	bgt.n	8109dd6 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x1c2>
 8109dee:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 8109df2:	9f15      	ldr	r7, [sp, #84]	; 0x54
 8109df4:	f9ba 4000 	ldrsh.w	r4, [sl]
 8109df8:	f8d7 c000 	ldr.w	ip, [r7]
 8109dfc:	f8db 5000 	ldr.w	r5, [fp]
 8109e00:	f1c4 0915 	rsb	r9, r4, #21
 8109e04:	ea99 0904 	eors.w	r9, r9, r4
 8109e08:	dd58      	ble.n	8109ebc <st_sssa8_ch_nn_mat_mult_kernel_opt+0x2a8>
 8109e0a:	ea4f 0646 	mov.w	r6, r6, lsl #1
 8109e0e:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8109e12:	fb56 c605 	smmla	r6, r6, r5, ip
 8109e16:	fb51 c105 	smmla	r1, r1, r5, ip
 8109e1a:	fa46 f604 	asr.w	r6, r6, r4
 8109e1e:	fa41 f104 	asr.w	r1, r1, r4
 8109e22:	f306 0607 	ssat	r6, #8, r6
 8109e26:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8109e28:	9c04      	ldr	r4, [sp, #16]
 8109e2a:	7016      	strb	r6, [r2, #0]
 8109e2c:	f301 0107 	ssat	r1, #8, r1
 8109e30:	5511      	strb	r1, [r2, r4]
 8109e32:	9b01      	ldr	r3, [sp, #4]
 8109e34:	441a      	add	r2, r3
 8109e36:	9911      	ldr	r1, [sp, #68]	; 0x44
 8109e38:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8109e3a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8109e3c:	b133      	cbz	r3, 8109e4c <st_sssa8_ch_nn_mat_mult_kernel_opt+0x238>
 8109e3e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8109e40:	f104 0002 	add.w	r0, r4, #2
 8109e44:	fb03 0011 	mls	r0, r3, r1, r0
 8109e48:	4410      	add	r0, r2
 8109e4a:	e006      	b.n	8109e5a <st_sssa8_ch_nn_mat_mult_kernel_opt+0x246>
 8109e4c:	eba2 0001 	sub.w	r0, r2, r1
 8109e50:	9a05      	ldr	r2, [sp, #20]
 8109e52:	f104 0402 	add.w	r4, r4, #2
 8109e56:	fb02 0004 	mla	r0, r2, r4, r0
 8109e5a:	b006      	add	sp, #24
 8109e5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8109e60:	2c00      	cmp	r4, #0
 8109e62:	dd42      	ble.n	8109eea <st_sssa8_ch_nn_mat_mult_kernel_opt+0x2d6>
 8109e64:	f04f 0901 	mov.w	r9, #1
 8109e68:	fa09 f904 	lsl.w	r9, r9, r4
 8109e6c:	ea4f 09a9 	mov.w	r9, r9, asr #2
 8109e70:	fb53 9305 	smmla	r3, r3, r5, r9
 8109e74:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8109e78:	fa43 f304 	asr.w	r3, r3, r4
 8109e7c:	4463      	add	r3, ip
 8109e7e:	fb52 9205 	smmla	r2, r2, r5, r9
 8109e82:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8109e86:	fa42 f204 	asr.w	r2, r2, r4
 8109e8a:	4462      	add	r2, ip
 8109e8c:	e75b      	b.n	8109d46 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x132>
 8109e8e:	2c00      	cmp	r4, #0
 8109e90:	dd3c      	ble.n	8109f0c <st_sssa8_ch_nn_mat_mult_kernel_opt+0x2f8>
 8109e92:	f04f 0901 	mov.w	r9, #1
 8109e96:	fa09 f904 	lsl.w	r9, r9, r4
 8109e9a:	ea4f 09a9 	mov.w	r9, r9, asr #2
 8109e9e:	fb56 9605 	smmla	r6, r6, r5, r9
 8109ea2:	ea4f 0646 	mov.w	r6, r6, lsl #1
 8109ea6:	fa46 f604 	asr.w	r6, r6, r4
 8109eaa:	4466      	add	r6, ip
 8109eac:	fb51 9105 	smmla	r1, r1, r5, r9
 8109eb0:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8109eb4:	fa41 f104 	asr.w	r1, r1, r4
 8109eb8:	4461      	add	r1, ip
 8109eba:	e72c      	b.n	8109d16 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x102>
 8109ebc:	2c00      	cmp	r4, #0
 8109ebe:	dd36      	ble.n	8109f2e <st_sssa8_ch_nn_mat_mult_kernel_opt+0x31a>
 8109ec0:	f04f 0901 	mov.w	r9, #1
 8109ec4:	fa09 f904 	lsl.w	r9, r9, r4
 8109ec8:	ea4f 09a9 	mov.w	r9, r9, asr #2
 8109ecc:	fb56 9605 	smmla	r6, r6, r5, r9
 8109ed0:	ea4f 0646 	mov.w	r6, r6, lsl #1
 8109ed4:	fa46 f604 	asr.w	r6, r6, r4
 8109ed8:	4466      	add	r6, ip
 8109eda:	fb51 9105 	smmla	r1, r1, r5, r9
 8109ede:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8109ee2:	fa41 f104 	asr.w	r1, r1, r4
 8109ee6:	4461      	add	r1, ip
 8109ee8:	e79b      	b.n	8109e22 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x20e>
 8109eea:	f1c4 0901 	rsb	r9, r4, #1
 8109eee:	fa03 f309 	lsl.w	r3, r3, r9
 8109ef2:	f303 031f 	ssat	r3, #32, r3
 8109ef6:	fb53 f315 	smmulr	r3, r3, r5
 8109efa:	fa02 f209 	lsl.w	r2, r2, r9
 8109efe:	f302 021f 	ssat	r2, #32, r2
 8109f02:	fb52 f215 	smmulr	r2, r2, r5
 8109f06:	4463      	add	r3, ip
 8109f08:	4462      	add	r2, ip
 8109f0a:	e71c      	b.n	8109d46 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x132>
 8109f0c:	f1c4 0901 	rsb	r9, r4, #1
 8109f10:	fa06 f609 	lsl.w	r6, r6, r9
 8109f14:	f306 061f 	ssat	r6, #32, r6
 8109f18:	fb56 f615 	smmulr	r6, r6, r5
 8109f1c:	fa01 f109 	lsl.w	r1, r1, r9
 8109f20:	f301 011f 	ssat	r1, #32, r1
 8109f24:	fb51 f115 	smmulr	r1, r1, r5
 8109f28:	4466      	add	r6, ip
 8109f2a:	4461      	add	r1, ip
 8109f2c:	e6f3      	b.n	8109d16 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x102>
 8109f2e:	f1c4 0901 	rsb	r9, r4, #1
 8109f32:	fa06 f609 	lsl.w	r6, r6, r9
 8109f36:	f306 061f 	ssat	r6, #32, r6
 8109f3a:	fb56 f615 	smmulr	r6, r6, r5
 8109f3e:	fa01 f109 	lsl.w	r1, r1, r9
 8109f42:	f301 011f 	ssat	r1, #32, r1
 8109f46:	fb51 f115 	smmulr	r1, r1, r5
 8109f4a:	4466      	add	r6, ip
 8109f4c:	4461      	add	r1, ip
 8109f4e:	e768      	b.n	8109e22 <st_sssa8_ch_nn_mat_mult_kernel_opt+0x20e>

08109f50 <st_sssa8_ch_nn_mat_mult_pw_nt_t>:
 8109f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8109f54:	b099      	sub	sp, #100	; 0x64
 8109f56:	9014      	str	r0, [sp, #80]	; 0x50
 8109f58:	9113      	str	r1, [sp, #76]	; 0x4c
 8109f5a:	9216      	str	r2, [sp, #88]	; 0x58
 8109f5c:	9312      	str	r3, [sp, #72]	; 0x48
 8109f5e:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8109f60:	f000 0303 	and.w	r3, r0, #3
 8109f64:	2b03      	cmp	r3, #3
 8109f66:	bf0c      	ite	eq
 8109f68:	2601      	moveq	r6, #1
 8109f6a:	2600      	movne	r6, #0
 8109f6c:	9617      	str	r6, [sp, #92]	; 0x5c
 8109f6e:	2803      	cmp	r0, #3
 8109f70:	bf0c      	ite	eq
 8109f72:	2601      	moveq	r6, #1
 8109f74:	2600      	movne	r6, #0
 8109f76:	9618      	str	r6, [sp, #96]	; 0x60
 8109f78:	f010 0002 	ands.w	r0, r0, #2
 8109f7c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8109f7e:	2800      	cmp	r0, #0
 8109f80:	bf14      	ite	ne
 8109f82:	4618      	movne	r0, r3
 8109f84:	2001      	moveq	r0, #1
 8109f86:	9010      	str	r0, [sp, #64]	; 0x40
 8109f88:	9826      	ldr	r0, [sp, #152]	; 0x98
 8109f8a:	bf0c      	ite	eq
 8109f8c:	4606      	moveq	r6, r0
 8109f8e:	2601      	movne	r6, #1
 8109f90:	9611      	str	r6, [sp, #68]	; 0x44
 8109f92:	e9dd 042c 	ldrd	r0, r4, [sp, #176]	; 0xb0
 8109f96:	2c00      	cmp	r4, #0
 8109f98:	bf18      	it	ne
 8109f9a:	4620      	movne	r0, r4
 8109f9c:	902c      	str	r0, [sp, #176]	; 0xb0
 8109f9e:	9826      	ldr	r0, [sp, #152]	; 0x98
 8109fa0:	2801      	cmp	r0, #1
 8109fa2:	f340 81be 	ble.w	810a322 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x3d2>
 8109fa6:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8109faa:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8109fac:	f014 0f02 	tst.w	r4, #2
 8109fb0:	d101      	bne.n	8109fb6 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x66>
 8109fb2:	f04f 0302 	mov.w	r3, #2
 8109fb6:	9315      	str	r3, [sp, #84]	; 0x54
 8109fb8:	f04f 0800 	mov.w	r8, #0
 8109fbc:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
 8109fc0:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 8109fc4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8109fc6:	eb02 028b 	add.w	r2, r2, fp, lsl #2
 8109fca:	f9b2 3000 	ldrsh.w	r3, [r2]
 8109fce:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8109fd2:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8109fd6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8109fd8:	eb02 02cb 	add.w	r2, r2, fp, lsl #3
 8109fdc:	e9d2 1200 	ldrd	r1, r2, [r2]
 8109fe0:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8109fe4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8109fe6:	eb02 02cb 	add.w	r2, r2, fp, lsl #3
 8109fea:	e9d2 1200 	ldrd	r1, r2, [r2]
 8109fee:	e9cd 1200 	strd	r1, r2, [sp]
 8109ff2:	2b00      	cmp	r3, #0
 8109ff4:	bfcc      	ite	gt
 8109ff6:	2000      	movgt	r0, #0
 8109ff8:	f04f 30ff 	movle.w	r0, #4294967295	; 0xffffffff
 8109ffc:	2b15      	cmp	r3, #21
 8109ffe:	bfc8      	it	gt
 810a000:	2001      	movgt	r0, #1
 810a002:	2c00      	cmp	r4, #0
 810a004:	bfcc      	ite	gt
 810a006:	2100      	movgt	r1, #0
 810a008:	f04f 31ff 	movle.w	r1, #4294967295	; 0xffffffff
 810a00c:	2c15      	cmp	r4, #21
 810a00e:	bfc8      	it	gt
 810a010:	2101      	movgt	r1, #1
 810a012:	e9cd 0106 	strd	r0, r1, [sp, #24]
 810a016:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 810a018:	2b00      	cmp	r3, #0
 810a01a:	f000 8297 	beq.w	810a54c <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x5fc>
 810a01e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 810a020:	2b00      	cmp	r3, #0
 810a022:	f040 82bb 	bne.w	810a59c <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x64c>
 810a026:	461a      	mov	r2, r3
 810a028:	4618      	mov	r0, r3
 810a02a:	9916      	ldr	r1, [sp, #88]	; 0x58
 810a02c:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
 810a030:	e9d1 3400 	ldrd	r3, r4, [r1]
 810a034:	4403      	add	r3, r0
 810a036:	4414      	add	r4, r2
 810a038:	e9cd 3409 	strd	r3, r4, [sp, #36]	; 0x24
 810a03c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 810a03e:	9824      	ldr	r0, [sp, #144]	; 0x90
 810a040:	9918      	ldr	r1, [sp, #96]	; 0x60
 810a042:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 810a044:	2900      	cmp	r1, #0
 810a046:	bf1c      	itt	ne
 810a048:	3203      	addne	r2, #3
 810a04a:	18d2      	addne	r2, r2, r3
 810a04c:	f8dd 9050 	ldr.w	r9, [sp, #80]	; 0x50
 810a050:	920b      	str	r2, [sp, #44]	; 0x2c
 810a052:	1040      	asrs	r0, r0, #1
 810a054:	f000 8144 	beq.w	810a2e0 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x390>
 810a058:	930f      	str	r3, [sp, #60]	; 0x3c
 810a05a:	900e      	str	r0, [sp, #56]	; 0x38
 810a05c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 810a05e:	9f27      	ldr	r7, [sp, #156]	; 0x9c
 810a060:	9a11      	ldr	r2, [sp, #68]	; 0x44
 810a062:	9e2c      	ldr	r6, [sp, #176]	; 0xb0
 810a064:	e9dd ce09 	ldrd	ip, lr, [sp, #36]	; 0x24
 810a068:	46e2      	mov	sl, ip
 810a06a:	46f3      	mov	fp, lr
 810a06c:	4413      	add	r3, r2
 810a06e:	930c      	str	r3, [sp, #48]	; 0x30
 810a070:	ea5f 1827 	movs.w	r8, r7, asr #4
 810a074:	f000 8094 	beq.w	810a1a0 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x250>
 810a078:	f859 5007 	ldr.w	r5, [r9, r7]
 810a07c:	f856 0b04 	ldr.w	r0, [r6], #4
 810a080:	f856 1b04 	ldr.w	r1, [r6], #4
 810a084:	f856 2b04 	ldr.w	r2, [r6], #4
 810a088:	f856 3b04 	ldr.w	r3, [r6], #4
 810a08c:	fa2f f485 	sxtb16	r4, r5
 810a090:	fa2f f595 	sxtb16	r5, r5, ror #8
 810a094:	fb24 aa00 	smlad	sl, r4, r0, sl
 810a098:	fb24 bb02 	smlad	fp, r4, r2, fp
 810a09c:	fb25 aa01 	smlad	sl, r5, r1, sl
 810a0a0:	fb25 bb03 	smlad	fp, r5, r3, fp
 810a0a4:	f859 4b04 	ldr.w	r4, [r9], #4
 810a0a8:	fa2f f584 	sxtb16	r5, r4
 810a0ac:	fa2f f494 	sxtb16	r4, r4, ror #8
 810a0b0:	fb25 cc00 	smlad	ip, r5, r0, ip
 810a0b4:	fb25 ee02 	smlad	lr, r5, r2, lr
 810a0b8:	fb24 cc01 	smlad	ip, r4, r1, ip
 810a0bc:	fb24 ee03 	smlad	lr, r4, r3, lr
 810a0c0:	f859 5007 	ldr.w	r5, [r9, r7]
 810a0c4:	f856 0b04 	ldr.w	r0, [r6], #4
 810a0c8:	f856 1b04 	ldr.w	r1, [r6], #4
 810a0cc:	f856 2b04 	ldr.w	r2, [r6], #4
 810a0d0:	f856 3b04 	ldr.w	r3, [r6], #4
 810a0d4:	fa2f f485 	sxtb16	r4, r5
 810a0d8:	fa2f f595 	sxtb16	r5, r5, ror #8
 810a0dc:	fb24 aa00 	smlad	sl, r4, r0, sl
 810a0e0:	fb24 bb02 	smlad	fp, r4, r2, fp
 810a0e4:	fb25 aa01 	smlad	sl, r5, r1, sl
 810a0e8:	fb25 bb03 	smlad	fp, r5, r3, fp
 810a0ec:	f859 4b04 	ldr.w	r4, [r9], #4
 810a0f0:	fa2f f584 	sxtb16	r5, r4
 810a0f4:	fa2f f494 	sxtb16	r4, r4, ror #8
 810a0f8:	fb25 cc00 	smlad	ip, r5, r0, ip
 810a0fc:	fb25 ee02 	smlad	lr, r5, r2, lr
 810a100:	fb24 cc01 	smlad	ip, r4, r1, ip
 810a104:	fb24 ee03 	smlad	lr, r4, r3, lr
 810a108:	f859 5007 	ldr.w	r5, [r9, r7]
 810a10c:	f856 0b04 	ldr.w	r0, [r6], #4
 810a110:	f856 1b04 	ldr.w	r1, [r6], #4
 810a114:	f856 2b04 	ldr.w	r2, [r6], #4
 810a118:	f856 3b04 	ldr.w	r3, [r6], #4
 810a11c:	fa2f f485 	sxtb16	r4, r5
 810a120:	fa2f f595 	sxtb16	r5, r5, ror #8
 810a124:	fb24 aa00 	smlad	sl, r4, r0, sl
 810a128:	fb24 bb02 	smlad	fp, r4, r2, fp
 810a12c:	fb25 aa01 	smlad	sl, r5, r1, sl
 810a130:	fb25 bb03 	smlad	fp, r5, r3, fp
 810a134:	f859 4b04 	ldr.w	r4, [r9], #4
 810a138:	fa2f f584 	sxtb16	r5, r4
 810a13c:	fa2f f494 	sxtb16	r4, r4, ror #8
 810a140:	fb25 cc00 	smlad	ip, r5, r0, ip
 810a144:	fb25 ee02 	smlad	lr, r5, r2, lr
 810a148:	fb24 cc01 	smlad	ip, r4, r1, ip
 810a14c:	fb24 ee03 	smlad	lr, r4, r3, lr
 810a150:	f859 5007 	ldr.w	r5, [r9, r7]
 810a154:	f856 0b04 	ldr.w	r0, [r6], #4
 810a158:	f856 1b04 	ldr.w	r1, [r6], #4
 810a15c:	f856 2b04 	ldr.w	r2, [r6], #4
 810a160:	f856 3b04 	ldr.w	r3, [r6], #4
 810a164:	fa2f f485 	sxtb16	r4, r5
 810a168:	fa2f f595 	sxtb16	r5, r5, ror #8
 810a16c:	fb24 aa00 	smlad	sl, r4, r0, sl
 810a170:	fb24 bb02 	smlad	fp, r4, r2, fp
 810a174:	fb25 aa01 	smlad	sl, r5, r1, sl
 810a178:	fb25 bb03 	smlad	fp, r5, r3, fp
 810a17c:	f859 4b04 	ldr.w	r4, [r9], #4
 810a180:	fa2f f584 	sxtb16	r5, r4
 810a184:	fa2f f494 	sxtb16	r4, r4, ror #8
 810a188:	fb25 cc00 	smlad	ip, r5, r0, ip
 810a18c:	fb25 ee02 	smlad	lr, r5, r2, lr
 810a190:	fb24 cc01 	smlad	ip, r4, r1, ip
 810a194:	fb24 ee03 	smlad	lr, r4, r3, lr
 810a198:	f1b8 0801 	subs.w	r8, r8, #1
 810a19c:	f73f af6c 	bgt.w	810a078 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x128>
 810a1a0:	f017 000f 	ands.w	r0, r7, #15
 810a1a4:	d046      	beq.n	810a234 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x2e4>
 810a1a6:	f3c7 0881 	ubfx	r8, r7, #2, #2
 810a1aa:	f1b8 0f00 	cmp.w	r8, #0
 810a1ae:	d026      	beq.n	810a1fe <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x2ae>
 810a1b0:	f859 5007 	ldr.w	r5, [r9, r7]
 810a1b4:	f856 0b04 	ldr.w	r0, [r6], #4
 810a1b8:	f856 1b04 	ldr.w	r1, [r6], #4
 810a1bc:	f856 2b04 	ldr.w	r2, [r6], #4
 810a1c0:	f856 3b04 	ldr.w	r3, [r6], #4
 810a1c4:	fa2f f485 	sxtb16	r4, r5
 810a1c8:	fa2f f595 	sxtb16	r5, r5, ror #8
 810a1cc:	fb24 aa00 	smlad	sl, r4, r0, sl
 810a1d0:	fb24 bb02 	smlad	fp, r4, r2, fp
 810a1d4:	fb25 aa01 	smlad	sl, r5, r1, sl
 810a1d8:	fb25 bb03 	smlad	fp, r5, r3, fp
 810a1dc:	f859 4b04 	ldr.w	r4, [r9], #4
 810a1e0:	fa2f f584 	sxtb16	r5, r4
 810a1e4:	fa2f f494 	sxtb16	r4, r4, ror #8
 810a1e8:	fb25 cc00 	smlad	ip, r5, r0, ip
 810a1ec:	fb25 ee02 	smlad	lr, r5, r2, lr
 810a1f0:	fb24 cc01 	smlad	ip, r4, r1, ip
 810a1f4:	fb24 ee03 	smlad	lr, r4, r3, lr
 810a1f8:	f1b8 0801 	subs.w	r8, r8, #1
 810a1fc:	dcd8      	bgt.n	810a1b0 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x260>
 810a1fe:	f017 0803 	ands.w	r8, r7, #3
 810a202:	f1b8 0f00 	cmp.w	r8, #0
 810a206:	d015      	beq.n	810a234 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x2e4>
 810a208:	9827      	ldr	r0, [sp, #156]	; 0x9c
 810a20a:	f936 3b02 	ldrsh.w	r3, [r6], #2
 810a20e:	f936 5b02 	ldrsh.w	r5, [r6], #2
 810a212:	f999 1000 	ldrsb.w	r1, [r9]
 810a216:	fb13 cc01 	smlabb	ip, r3, r1, ip
 810a21a:	fb15 ee01 	smlabb	lr, r5, r1, lr
 810a21e:	f919 1000 	ldrsb.w	r1, [r9, r0]
 810a222:	fb13 aa01 	smlabb	sl, r3, r1, sl
 810a226:	fb15 bb01 	smlabb	fp, r5, r1, fp
 810a22a:	f109 0901 	add.w	r9, r9, #1
 810a22e:	f1b8 0801 	subs.w	r8, r8, #1
 810a232:	dcea      	bgt.n	810a20a <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x2ba>
 810a234:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 810a236:	462e      	mov	r6, r5
 810a238:	9817      	ldr	r0, [sp, #92]	; 0x5c
 810a23a:	b168      	cbz	r0, 810a258 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x308>
 810a23c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 810a23e:	1e90      	subs	r0, r2, #2
 810a240:	dc09      	bgt.n	810a256 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x306>
 810a242:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 810a244:	f1c2 0202 	rsb	r2, r2, #2
 810a248:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 810a24c:	920c      	str	r2, [sp, #48]	; 0x30
 810a24e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 810a250:	4410      	add	r0, r2
 810a252:	f105 0502 	add.w	r5, r5, #2
 810a256:	900f      	str	r0, [sp, #60]	; 0x3c
 810a258:	9800      	ldr	r0, [sp, #0]
 810a25a:	9902      	ldr	r1, [sp, #8]
 810a25c:	9a04      	ldr	r2, [sp, #16]
 810a25e:	9b06      	ldr	r3, [sp, #24]
 810a260:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 810a262:	2b00      	cmp	r3, #0
 810a264:	f040 80c9 	bne.w	810a3fa <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x4aa>
 810a268:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 810a26c:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 810a270:	fb5c 0c01 	smmla	ip, ip, r1, r0
 810a274:	fb5a 0a01 	smmla	sl, sl, r1, r0
 810a278:	fa4c fc02 	asr.w	ip, ip, r2
 810a27c:	fa4a fa02 	asr.w	sl, sl, r2
 810a280:	f30c 0c07 	ssat	ip, #8, ip
 810a284:	f30a 0a07 	ssat	sl, #8, sl
 810a288:	f886 c000 	strb.w	ip, [r6]
 810a28c:	f887 a000 	strb.w	sl, [r7]
 810a290:	9801      	ldr	r0, [sp, #4]
 810a292:	9903      	ldr	r1, [sp, #12]
 810a294:	9a05      	ldr	r2, [sp, #20]
 810a296:	9b07      	ldr	r3, [sp, #28]
 810a298:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
 810a29c:	2b00      	cmp	r3, #0
 810a29e:	f040 80d4 	bne.w	810a44a <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x4fa>
 810a2a2:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 810a2a6:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 810a2aa:	fb5e 0e01 	smmla	lr, lr, r1, r0
 810a2ae:	fb5b 0b01 	smmla	fp, fp, r1, r0
 810a2b2:	fa4e fe02 	asr.w	lr, lr, r2
 810a2b6:	fa4b fb02 	asr.w	fp, fp, r2
 810a2ba:	f30e 0e07 	ssat	lr, #8, lr
 810a2be:	f30b 0b07 	ssat	fp, #8, fp
 810a2c2:	f806 e008 	strb.w	lr, [r6, r8]
 810a2c6:	f807 b008 	strb.w	fp, [r7, r8]
 810a2ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 810a2cc:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 810a2ce:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 810a2d2:	930b      	str	r3, [sp, #44]	; 0x2c
 810a2d4:	4491      	add	r9, r2
 810a2d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 810a2d8:	3b01      	subs	r3, #1
 810a2da:	930e      	str	r3, [sp, #56]	; 0x38
 810a2dc:	f47f aebe 	bne.w	810a05c <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x10c>
 810a2e0:	f8cd 9020 	str.w	r9, [sp, #32]
 810a2e4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 810a2e6:	f013 0f01 	tst.w	r3, #1
 810a2ea:	f040 80d6 	bne.w	810a49a <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x54a>
 810a2ee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 810a2f0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 810a2f2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 810a2f6:	9313      	str	r3, [sp, #76]	; 0x4c
 810a2f8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 810a2fa:	9a15      	ldr	r2, [sp, #84]	; 0x54
 810a2fc:	4413      	add	r3, r2
 810a2fe:	9312      	str	r3, [sp, #72]	; 0x48
 810a300:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 810a302:	b123      	cbz	r3, 810a30e <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x3be>
 810a304:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 810a306:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 810a308:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 810a30c:	932c      	str	r3, [sp, #176]	; 0xb0
 810a30e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 810a310:	9b26      	ldr	r3, [sp, #152]	; 0x98
 810a312:	ea4f 0363 	mov.w	r3, r3, asr #1
 810a316:	f102 0201 	add.w	r2, r2, #1
 810a31a:	920d      	str	r2, [sp, #52]	; 0x34
 810a31c:	4293      	cmp	r3, r2
 810a31e:	f73f ae4f 	bgt.w	8109fc0 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x70>
 810a322:	9d26      	ldr	r5, [sp, #152]	; 0x98
 810a324:	f015 0501 	ands.w	r5, r5, #1
 810a328:	d060      	beq.n	810a3ec <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x49c>
 810a32a:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 810a32e:	9d18      	ldr	r5, [sp, #96]	; 0x60
 810a330:	9e12      	ldr	r6, [sp, #72]	; 0x48
 810a332:	2d00      	cmp	r5, #0
 810a334:	bf1c      	itt	ne
 810a336:	3603      	addne	r6, #3
 810a338:	4446      	addne	r6, r8
 810a33a:	9924      	ldr	r1, [sp, #144]	; 0x90
 810a33c:	2900      	cmp	r1, #0
 810a33e:	dd55      	ble.n	810a3ec <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x49c>
 810a340:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 810a344:	9d16      	ldr	r5, [sp, #88]	; 0x58
 810a346:	9f26      	ldr	r7, [sp, #152]	; 0x98
 810a348:	f1a7 0701 	sub.w	r7, r7, #1
 810a34c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 810a350:	f8dc c000 	ldr.w	ip, [ip]
 810a354:	9b22      	ldr	r3, [sp, #136]	; 0x88
 810a356:	eb03 0487 	add.w	r4, r3, r7, lsl #2
 810a35a:	6824      	ldr	r4, [r4, #0]
 810a35c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 810a35e:	eb03 0087 	add.w	r0, r3, r7, lsl #2
 810a362:	6800      	ldr	r0, [r0, #0]
 810a364:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 810a366:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 810a36a:	f9b7 7000 	ldrsh.w	r7, [r7]
 810a36e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 810a370:	2f00      	cmp	r7, #0
 810a372:	bfcc      	ite	gt
 810a374:	f04f 0900 	movgt.w	r9, #0
 810a378:	f04f 39ff 	movle.w	r9, #4294967295	; 0xffffffff
 810a37c:	2f15      	cmp	r7, #21
 810a37e:	bfc8      	it	gt
 810a380:	f04f 0901 	movgt.w	r9, #1
 810a384:	9d14      	ldr	r5, [sp, #80]	; 0x50
 810a386:	f8dd b09c 	ldr.w	fp, [sp, #156]	; 0x9c
 810a38a:	f1bb 0f00 	cmp.w	fp, #0
 810a38e:	46e6      	mov	lr, ip
 810a390:	dd0c      	ble.n	810a3ac <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x45c>
 810a392:	f8dd 804c 	ldr.w	r8, [sp, #76]	; 0x4c
 810a396:	f915 3b01 	ldrsb.w	r3, [r5], #1
 810a39a:	f918 ab01 	ldrsb.w	sl, [r8], #1
 810a39e:	eba3 0302 	sub.w	r3, r3, r2
 810a3a2:	fb0a ee03 	mla	lr, sl, r3, lr
 810a3a6:	f1bb 0b01 	subs.w	fp, fp, #1
 810a3aa:	dcf4      	bgt.n	810a396 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x446>
 810a3ac:	f1b9 0f00 	cmp.w	r9, #0
 810a3b0:	f040 8164 	bne.w	810a67c <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x72c>
 810a3b4:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 810a3b8:	fb5e 0e04 	smmla	lr, lr, r4, r0
 810a3bc:	fa4e fe07 	asr.w	lr, lr, r7
 810a3c0:	f30e 0e07 	ssat	lr, #8, lr
 810a3c4:	f886 e000 	strb.w	lr, [r6]
 810a3c8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 810a3ca:	f013 0f02 	tst.w	r3, #2
 810a3ce:	d011      	beq.n	810a3f4 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x4a4>
 810a3d0:	f013 0f01 	tst.w	r3, #1
 810a3d4:	d005      	beq.n	810a3e2 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x492>
 810a3d6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 810a3d8:	3b01      	subs	r3, #1
 810a3da:	d102      	bne.n	810a3e2 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x492>
 810a3dc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 810a3de:	f106 0602 	add.w	r6, r6, #2
 810a3e2:	f106 0601 	add.w	r6, r6, #1
 810a3e6:	930f      	str	r3, [sp, #60]	; 0x3c
 810a3e8:	3901      	subs	r1, #1
 810a3ea:	dccc      	bgt.n	810a386 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x436>
 810a3ec:	2000      	movs	r0, #0
 810a3ee:	b019      	add	sp, #100	; 0x64
 810a3f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 810a3f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 810a3f6:	441e      	add	r6, r3
 810a3f8:	e7f6      	b.n	810a3e8 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x498>
 810a3fa:	3301      	adds	r3, #1
 810a3fc:	d014      	beq.n	810a428 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x4d8>
 810a3fe:	f04f 0301 	mov.w	r3, #1
 810a402:	fa03 f302 	lsl.w	r3, r3, r2
 810a406:	ea4f 03a3 	mov.w	r3, r3, asr #2
 810a40a:	fb5c 3c01 	smmla	ip, ip, r1, r3
 810a40e:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 810a412:	fa4c fc02 	asr.w	ip, ip, r2
 810a416:	4484      	add	ip, r0
 810a418:	fb5a 3a01 	smmla	sl, sl, r1, r3
 810a41c:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 810a420:	fa4a fa02 	asr.w	sl, sl, r2
 810a424:	4482      	add	sl, r0
 810a426:	e72b      	b.n	810a280 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x330>
 810a428:	f1c2 0301 	rsb	r3, r2, #1
 810a42c:	fa0c fc03 	lsl.w	ip, ip, r3
 810a430:	f30c 0c1f 	ssat	ip, #32, ip
 810a434:	fb5c fc11 	smmulr	ip, ip, r1
 810a438:	fa0a fa03 	lsl.w	sl, sl, r3
 810a43c:	f30a 0a1f 	ssat	sl, #32, sl
 810a440:	fb5a fa11 	smmulr	sl, sl, r1
 810a444:	4484      	add	ip, r0
 810a446:	4482      	add	sl, r0
 810a448:	e71a      	b.n	810a280 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x330>
 810a44a:	3301      	adds	r3, #1
 810a44c:	d014      	beq.n	810a478 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x528>
 810a44e:	f04f 0301 	mov.w	r3, #1
 810a452:	fa03 f302 	lsl.w	r3, r3, r2
 810a456:	ea4f 03a3 	mov.w	r3, r3, asr #2
 810a45a:	fb5e 3e01 	smmla	lr, lr, r1, r3
 810a45e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 810a462:	fa4e fe02 	asr.w	lr, lr, r2
 810a466:	4486      	add	lr, r0
 810a468:	fb5b 3b01 	smmla	fp, fp, r1, r3
 810a46c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 810a470:	fa4b fb02 	asr.w	fp, fp, r2
 810a474:	4483      	add	fp, r0
 810a476:	e720      	b.n	810a2ba <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x36a>
 810a478:	f1c2 0301 	rsb	r3, r2, #1
 810a47c:	fa0e fe03 	lsl.w	lr, lr, r3
 810a480:	f30e 0e1f 	ssat	lr, #32, lr
 810a484:	fb5e fe11 	smmulr	lr, lr, r1
 810a488:	fa0b fb03 	lsl.w	fp, fp, r3
 810a48c:	f30b 0b1f 	ssat	fp, #32, fp
 810a490:	fb5b fb11 	smmulr	fp, fp, r1
 810a494:	4486      	add	lr, r0
 810a496:	4483      	add	fp, r0
 810a498:	e70f      	b.n	810a2ba <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x36a>
 810a49a:	9f27      	ldr	r7, [sp, #156]	; 0x9c
 810a49c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 810a4a0:	9e2c      	ldr	r6, [sp, #176]	; 0xb0
 810a4a2:	e9dd ce09 	ldrd	ip, lr, [sp, #36]	; 0x24
 810a4a6:	ea5f 08a7 	movs.w	r8, r7, asr #2
 810a4aa:	d018      	beq.n	810a4de <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x58e>
 810a4ac:	f859 4b04 	ldr.w	r4, [r9], #4
 810a4b0:	f856 0b04 	ldr.w	r0, [r6], #4
 810a4b4:	f856 1b04 	ldr.w	r1, [r6], #4
 810a4b8:	f856 2b04 	ldr.w	r2, [r6], #4
 810a4bc:	f856 3b04 	ldr.w	r3, [r6], #4
 810a4c0:	fa2f f584 	sxtb16	r5, r4
 810a4c4:	fa2f f494 	sxtb16	r4, r4, ror #8
 810a4c8:	fb25 cc00 	smlad	ip, r5, r0, ip
 810a4cc:	fb25 ee02 	smlad	lr, r5, r2, lr
 810a4d0:	fb24 cc01 	smlad	ip, r4, r1, ip
 810a4d4:	fb24 ee03 	smlad	lr, r4, r3, lr
 810a4d8:	f1b8 0801 	subs.w	r8, r8, #1
 810a4dc:	dce6      	bgt.n	810a4ac <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x55c>
 810a4de:	f017 0803 	ands.w	r8, r7, #3
 810a4e2:	f1b8 0f00 	cmp.w	r8, #0
 810a4e6:	d00c      	beq.n	810a502 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x5b2>
 810a4e8:	f936 3b02 	ldrsh.w	r3, [r6], #2
 810a4ec:	f936 5b02 	ldrsh.w	r5, [r6], #2
 810a4f0:	f919 1b01 	ldrsb.w	r1, [r9], #1
 810a4f4:	fb13 cc01 	smlabb	ip, r3, r1, ip
 810a4f8:	fb15 ee01 	smlabb	lr, r5, r1, lr
 810a4fc:	f1b8 0801 	subs.w	r8, r8, #1
 810a500:	dcf2      	bgt.n	810a4e8 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x598>
 810a502:	9800      	ldr	r0, [sp, #0]
 810a504:	9902      	ldr	r1, [sp, #8]
 810a506:	9a04      	ldr	r2, [sp, #16]
 810a508:	9b06      	ldr	r3, [sp, #24]
 810a50a:	9f10      	ldr	r7, [sp, #64]	; 0x40
 810a50c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 810a50e:	4437      	add	r7, r6
 810a510:	2b00      	cmp	r3, #0
 810a512:	f040 8099 	bne.w	810a648 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x6f8>
 810a516:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 810a51a:	fb5c 0c01 	smmla	ip, ip, r1, r0
 810a51e:	fa4c fc02 	asr.w	ip, ip, r2
 810a522:	f30c 0c07 	ssat	ip, #8, ip
 810a526:	f886 c000 	strb.w	ip, [r6]
 810a52a:	9801      	ldr	r0, [sp, #4]
 810a52c:	9903      	ldr	r1, [sp, #12]
 810a52e:	9a05      	ldr	r2, [sp, #20]
 810a530:	9b07      	ldr	r3, [sp, #28]
 810a532:	2b00      	cmp	r3, #0
 810a534:	d166      	bne.n	810a604 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x6b4>
 810a536:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 810a53a:	fb5e 0e01 	smmla	lr, lr, r1, r0
 810a53e:	fa4e fe02 	asr.w	lr, lr, r2
 810a542:	f30e 0e07 	ssat	lr, #8, lr
 810a546:	f887 e000 	strb.w	lr, [r7]
 810a54a:	e6d0      	b.n	810a2ee <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x39e>
 810a54c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 810a54e:	9f27      	ldr	r7, [sp, #156]	; 0x9c
 810a550:	eb00 0907 	add.w	r9, r0, r7
 810a554:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 810a556:	2f03      	cmp	r7, #3
 810a558:	dd11      	ble.n	810a57e <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x62e>
 810a55a:	ea4f 06a7 	mov.w	r6, r7, asr #2
 810a55e:	f850 1b04 	ldr.w	r1, [r0], #4
 810a562:	f859 4b04 	ldr.w	r4, [r9], #4
 810a566:	fa2f f291 	sxtb16	r2, r1, ror #8
 810a56a:	fa2f f181 	sxtb16	r1, r1
 810a56e:	fa2f f894 	sxtb16	r8, r4, ror #8
 810a572:	fa2f f484 	sxtb16	r4, r4
 810a576:	e8a3 0116 	stmia.w	r3!, {r1, r2, r4, r8}
 810a57a:	3e01      	subs	r6, #1
 810a57c:	dcef      	bgt.n	810a55e <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x60e>
 810a57e:	f017 0603 	ands.w	r6, r7, #3
 810a582:	f77f ad4c 	ble.w	810a01e <st_sssa8_ch_nn_mat_mult_pw_nt_t+0xce>
 810a586:	f910 1b01 	ldrsb.w	r1, [r0], #1
 810a58a:	f823 1b02 	strh.w	r1, [r3], #2
 810a58e:	f919 1b01 	ldrsb.w	r1, [r9], #1
 810a592:	f823 1b02 	strh.w	r1, [r3], #2
 810a596:	3e01      	subs	r6, #1
 810a598:	dcf5      	bgt.n	810a586 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x636>
 810a59a:	e540      	b.n	810a01e <st_sssa8_ch_nn_mat_mult_pw_nt_t+0xce>
 810a59c:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 810a59e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 810a5a0:	f04f 0300 	mov.w	r3, #0
 810a5a4:	4618      	mov	r0, r3
 810a5a6:	10b1      	asrs	r1, r6, #2
 810a5a8:	d017      	beq.n	810a5da <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x68a>
 810a5aa:	e8b2 1680 	ldmia.w	r2!, {r7, r9, sl, ip}
 810a5ae:	fa00 f087 	sxtah	r0, r0, r7
 810a5b2:	fa00 f0a7 	sxtah	r0, r0, r7, ror #16
 810a5b6:	fa00 f089 	sxtah	r0, r0, r9
 810a5ba:	fa00 f0a9 	sxtah	r0, r0, r9, ror #16
 810a5be:	fa03 f38a 	sxtah	r3, r3, sl
 810a5c2:	fa03 f3aa 	sxtah	r3, r3, sl, ror #16
 810a5c6:	fa03 f38c 	sxtah	r3, r3, ip
 810a5ca:	fa03 f3ac 	sxtah	r3, r3, ip, ror #16
 810a5ce:	3901      	subs	r1, #1
 810a5d0:	dceb      	bgt.n	810a5aa <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x65a>
 810a5d2:	f1c0 0000 	rsb	r0, r0, #0
 810a5d6:	f1c3 0300 	rsb	r3, r3, #0
 810a5da:	f016 0103 	ands.w	r1, r6, #3
 810a5de:	d00b      	beq.n	810a5f8 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x6a8>
 810a5e0:	f9b2 4000 	ldrsh.w	r4, [r2]
 810a5e4:	eba0 0004 	sub.w	r0, r0, r4
 810a5e8:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 810a5ec:	eba3 0304 	sub.w	r3, r3, r4
 810a5f0:	3901      	subs	r1, #1
 810a5f2:	f102 0204 	add.w	r2, r2, #4
 810a5f6:	dcf3      	bgt.n	810a5e0 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x690>
 810a5f8:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 810a5fa:	fb02 f000 	mul.w	r0, r2, r0
 810a5fe:	fb03 f202 	mul.w	r2, r3, r2
 810a602:	e512      	b.n	810a02a <st_sssa8_ch_nn_mat_mult_pw_nt_t+0xda>
 810a604:	3301      	adds	r3, #1
 810a606:	d011      	beq.n	810a62c <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x6dc>
 810a608:	f04f 0301 	mov.w	r3, #1
 810a60c:	fa03 f302 	lsl.w	r3, r3, r2
 810a610:	ea4f 03a3 	mov.w	r3, r3, asr #2
 810a614:	fb5e 3e01 	smmla	lr, lr, r1, r3
 810a618:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 810a61c:	fa4e fe02 	asr.w	lr, lr, r2
 810a620:	4486      	add	lr, r0
 810a622:	f30e 0e07 	ssat	lr, #8, lr
 810a626:	f887 e000 	strb.w	lr, [r7]
 810a62a:	e660      	b.n	810a2ee <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x39e>
 810a62c:	f1c2 0301 	rsb	r3, r2, #1
 810a630:	fa0e fe03 	lsl.w	lr, lr, r3
 810a634:	f30e 0e1f 	ssat	lr, #32, lr
 810a638:	fb5e fe11 	smmulr	lr, lr, r1
 810a63c:	4486      	add	lr, r0
 810a63e:	f30e 0e07 	ssat	lr, #8, lr
 810a642:	f887 e000 	strb.w	lr, [r7]
 810a646:	e652      	b.n	810a2ee <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x39e>
 810a648:	3301      	adds	r3, #1
 810a64a:	d00d      	beq.n	810a668 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x718>
 810a64c:	f04f 0301 	mov.w	r3, #1
 810a650:	fa03 f302 	lsl.w	r3, r3, r2
 810a654:	ea4f 03a3 	mov.w	r3, r3, asr #2
 810a658:	fb5c 3c01 	smmla	ip, ip, r1, r3
 810a65c:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 810a660:	fa4c fc02 	asr.w	ip, ip, r2
 810a664:	4484      	add	ip, r0
 810a666:	e75c      	b.n	810a522 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x5d2>
 810a668:	f1c2 0301 	rsb	r3, r2, #1
 810a66c:	fa0c fc03 	lsl.w	ip, ip, r3
 810a670:	f30c 0c1f 	ssat	ip, #32, ip
 810a674:	fb5c fc11 	smmulr	ip, ip, r1
 810a678:	4484      	add	ip, r0
 810a67a:	e752      	b.n	810a522 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x5d2>
 810a67c:	1c7b      	adds	r3, r7, #1
 810a67e:	d00d      	beq.n	810a69c <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x74c>
 810a680:	f04f 0301 	mov.w	r3, #1
 810a684:	fa03 f307 	lsl.w	r3, r3, r7
 810a688:	ea4f 03a3 	mov.w	r3, r3, asr #2
 810a68c:	fb5e 3e04 	smmla	lr, lr, r4, r3
 810a690:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 810a694:	fa4e fe07 	asr.w	lr, lr, r7
 810a698:	4486      	add	lr, r0
 810a69a:	e691      	b.n	810a3c0 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x470>
 810a69c:	f1c7 0301 	rsb	r3, r7, #1
 810a6a0:	fa0e fe03 	lsl.w	lr, lr, r3
 810a6a4:	f30e 0e1f 	ssat	lr, #32, lr
 810a6a8:	fb5e fe14 	smmulr	lr, lr, r4
 810a6ac:	4486      	add	lr, r0
 810a6ae:	e687      	b.n	810a3c0 <st_sssa8_ch_nn_mat_mult_pw_nt_t+0x470>

0810a6b0 <st_sssa8_ch_nn_mat_mult_pw_nt_t_KWS>:
 810a6b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 810a6b4:	b099      	sub	sp, #100	; 0x64
 810a6b6:	bf00      	nop
 810a6b8:	9014      	str	r0, [sp, #80]	; 0x50
 810a6ba:	9113      	str	r1, [sp, #76]	; 0x4c
 810a6bc:	9216      	str	r2, [sp, #88]	; 0x58
 810a6be:	9312      	str	r3, [sp, #72]	; 0x48
 810a6c0:	f04f 0800 	mov.w	r8, #0
 810a6c4:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
 810a6c8:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 810a6cc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 810a6ce:	eb02 028b 	add.w	r2, r2, fp, lsl #2
 810a6d2:	f9b2 3000 	ldrsh.w	r3, [r2]
 810a6d6:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 810a6da:	e9cd 3404 	strd	r3, r4, [sp, #16]
 810a6de:	9a22      	ldr	r2, [sp, #136]	; 0x88
 810a6e0:	eb02 02cb 	add.w	r2, r2, fp, lsl #3
 810a6e4:	e9d2 1200 	ldrd	r1, r2, [r2]
 810a6e8:	e9cd 1202 	strd	r1, r2, [sp, #8]
 810a6ec:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 810a6ee:	eb02 02cb 	add.w	r2, r2, fp, lsl #3
 810a6f2:	e9d2 1200 	ldrd	r1, r2, [r2]
 810a6f6:	e9cd 1200 	strd	r1, r2, [sp]
 810a6fa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 810a6fc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 810a6fe:	f04f 0610 	mov.w	r6, #16
 810a702:	6c04      	ldr	r4, [r0, #64]	; 0x40
 810a704:	f850 1b04 	ldr.w	r1, [r0], #4
 810a708:	fa2f f291 	sxtb16	r2, r1, ror #8
 810a70c:	fa2f f181 	sxtb16	r1, r1
 810a710:	fa2f f894 	sxtb16	r8, r4, ror #8
 810a714:	fa2f f484 	sxtb16	r4, r4
 810a718:	e8a3 0116 	stmia.w	r3!, {r1, r2, r4, r8}
 810a71c:	3e01      	subs	r6, #1
 810a71e:	dcf0      	bgt.n	810a702 <st_sssa8_ch_nn_mat_mult_pw_nt_t_KWS+0x52>
 810a720:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 810a722:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 810a724:	f04f 0300 	mov.w	r3, #0
 810a728:	4618      	mov	r0, r3
 810a72a:	f04f 0110 	mov.w	r1, #16
 810a72e:	e8b2 1700 	ldmia.w	r2!, {r8, r9, sl, ip}
 810a732:	fa00 f088 	sxtah	r0, r0, r8
 810a736:	fa00 f0a8 	sxtah	r0, r0, r8, ror #16
 810a73a:	fa00 f089 	sxtah	r0, r0, r9
 810a73e:	fa00 f0a9 	sxtah	r0, r0, r9, ror #16
 810a742:	fa03 f38a 	sxtah	r3, r3, sl
 810a746:	fa03 f3aa 	sxtah	r3, r3, sl, ror #16
 810a74a:	fa03 f38c 	sxtah	r3, r3, ip
 810a74e:	fa03 f3ac 	sxtah	r3, r3, ip, ror #16
 810a752:	3901      	subs	r1, #1
 810a754:	dceb      	bgt.n	810a72e <st_sssa8_ch_nn_mat_mult_pw_nt_t_KWS+0x7e>
 810a756:	f1c0 0000 	rsb	r0, r0, #0
 810a75a:	f1c3 0300 	rsb	r3, r3, #0
 810a75e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 810a760:	fb02 f000 	mul.w	r0, r2, r0
 810a764:	fb03 f202 	mul.w	r2, r3, r2
 810a768:	9916      	ldr	r1, [sp, #88]	; 0x58
 810a76a:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
 810a76e:	e9d1 3400 	ldrd	r3, r4, [r1]
 810a772:	4403      	add	r3, r0
 810a774:	4414      	add	r4, r2
 810a776:	e9cd 3409 	strd	r3, r4, [sp, #36]	; 0x24
 810a77a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 810a77c:	f04f 0305 	mov.w	r3, #5
 810a780:	f102 0203 	add.w	r2, r2, #3
 810a784:	441a      	add	r2, r3
 810a786:	f8dd 9050 	ldr.w	r9, [sp, #80]	; 0x50
 810a78a:	920b      	str	r2, [sp, #44]	; 0x2c
 810a78c:	f04f 073e 	mov.w	r7, #62	; 0x3e
 810a790:	930f      	str	r3, [sp, #60]	; 0x3c
 810a792:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 810a794:	9e2c      	ldr	r6, [sp, #176]	; 0xb0
 810a796:	e9dd ce09 	ldrd	ip, lr, [sp, #36]	; 0x24
 810a79a:	46e2      	mov	sl, ip
 810a79c:	46f3      	mov	fp, lr
 810a79e:	f103 0301 	add.w	r3, r3, #1
 810a7a2:	930c      	str	r3, [sp, #48]	; 0x30
 810a7a4:	f04f 0802 	mov.w	r8, #2
 810a7a8:	f8d9 5040 	ldr.w	r5, [r9, #64]	; 0x40
 810a7ac:	f856 0b04 	ldr.w	r0, [r6], #4
 810a7b0:	f856 1b04 	ldr.w	r1, [r6], #4
 810a7b4:	f856 2b04 	ldr.w	r2, [r6], #4
 810a7b8:	f856 3b04 	ldr.w	r3, [r6], #4
 810a7bc:	fa2f f485 	sxtb16	r4, r5
 810a7c0:	fa2f f595 	sxtb16	r5, r5, ror #8
 810a7c4:	fb24 aa00 	smlad	sl, r4, r0, sl
 810a7c8:	fb24 bb02 	smlad	fp, r4, r2, fp
 810a7cc:	fb25 aa01 	smlad	sl, r5, r1, sl
 810a7d0:	fb25 bb03 	smlad	fp, r5, r3, fp
 810a7d4:	f859 4b04 	ldr.w	r4, [r9], #4
 810a7d8:	fa2f f584 	sxtb16	r5, r4
 810a7dc:	fa2f f494 	sxtb16	r4, r4, ror #8
 810a7e0:	fb25 cc00 	smlad	ip, r5, r0, ip
 810a7e4:	fb25 ee02 	smlad	lr, r5, r2, lr
 810a7e8:	fb24 cc01 	smlad	ip, r4, r1, ip
 810a7ec:	fb24 ee03 	smlad	lr, r4, r3, lr
 810a7f0:	f8d9 5040 	ldr.w	r5, [r9, #64]	; 0x40
 810a7f4:	f856 0b04 	ldr.w	r0, [r6], #4
 810a7f8:	f856 1b04 	ldr.w	r1, [r6], #4
 810a7fc:	f856 2b04 	ldr.w	r2, [r6], #4
 810a800:	f856 3b04 	ldr.w	r3, [r6], #4
 810a804:	fa2f f485 	sxtb16	r4, r5
 810a808:	fa2f f595 	sxtb16	r5, r5, ror #8
 810a80c:	fb24 aa00 	smlad	sl, r4, r0, sl
 810a810:	fb24 bb02 	smlad	fp, r4, r2, fp
 810a814:	fb25 aa01 	smlad	sl, r5, r1, sl
 810a818:	fb25 bb03 	smlad	fp, r5, r3, fp
 810a81c:	f859 4b04 	ldr.w	r4, [r9], #4
 810a820:	fa2f f584 	sxtb16	r5, r4
 810a824:	fa2f f494 	sxtb16	r4, r4, ror #8
 810a828:	fb25 cc00 	smlad	ip, r5, r0, ip
 810a82c:	fb25 ee02 	smlad	lr, r5, r2, lr
 810a830:	fb24 cc01 	smlad	ip, r4, r1, ip
 810a834:	fb24 ee03 	smlad	lr, r4, r3, lr
 810a838:	f8d9 5040 	ldr.w	r5, [r9, #64]	; 0x40
 810a83c:	f856 0b04 	ldr.w	r0, [r6], #4
 810a840:	f856 1b04 	ldr.w	r1, [r6], #4
 810a844:	f856 2b04 	ldr.w	r2, [r6], #4
 810a848:	f856 3b04 	ldr.w	r3, [r6], #4
 810a84c:	fa2f f485 	sxtb16	r4, r5
 810a850:	fa2f f595 	sxtb16	r5, r5, ror #8
 810a854:	fb24 aa00 	smlad	sl, r4, r0, sl
 810a858:	fb24 bb02 	smlad	fp, r4, r2, fp
 810a85c:	fb25 aa01 	smlad	sl, r5, r1, sl
 810a860:	fb25 bb03 	smlad	fp, r5, r3, fp
 810a864:	f859 4b04 	ldr.w	r4, [r9], #4
 810a868:	fa2f f584 	sxtb16	r5, r4
 810a86c:	fa2f f494 	sxtb16	r4, r4, ror #8
 810a870:	fb25 cc00 	smlad	ip, r5, r0, ip
 810a874:	fb25 ee02 	smlad	lr, r5, r2, lr
 810a878:	fb24 cc01 	smlad	ip, r4, r1, ip
 810a87c:	fb24 ee03 	smlad	lr, r4, r3, lr
 810a880:	f8d9 5040 	ldr.w	r5, [r9, #64]	; 0x40
 810a884:	f856 0b04 	ldr.w	r0, [r6], #4
 810a888:	f856 1b04 	ldr.w	r1, [r6], #4
 810a88c:	f856 2b04 	ldr.w	r2, [r6], #4
 810a890:	f856 3b04 	ldr.w	r3, [r6], #4
 810a894:	fa2f f485 	sxtb16	r4, r5
 810a898:	fa2f f595 	sxtb16	r5, r5, ror #8
 810a89c:	fb24 aa00 	smlad	sl, r4, r0, sl
 810a8a0:	fb24 bb02 	smlad	fp, r4, r2, fp
 810a8a4:	fb25 aa01 	smlad	sl, r5, r1, sl
 810a8a8:	fb25 bb03 	smlad	fp, r5, r3, fp
 810a8ac:	f859 4b04 	ldr.w	r4, [r9], #4
 810a8b0:	fa2f f584 	sxtb16	r5, r4
 810a8b4:	fa2f f494 	sxtb16	r4, r4, ror #8
 810a8b8:	fb25 cc00 	smlad	ip, r5, r0, ip
 810a8bc:	fb25 ee02 	smlad	lr, r5, r2, lr
 810a8c0:	fb24 cc01 	smlad	ip, r4, r1, ip
 810a8c4:	fb24 ee03 	smlad	lr, r4, r3, lr
 810a8c8:	f8d9 5040 	ldr.w	r5, [r9, #64]	; 0x40
 810a8cc:	f856 0b04 	ldr.w	r0, [r6], #4
 810a8d0:	f856 1b04 	ldr.w	r1, [r6], #4
 810a8d4:	f856 2b04 	ldr.w	r2, [r6], #4
 810a8d8:	f856 3b04 	ldr.w	r3, [r6], #4
 810a8dc:	fa2f f485 	sxtb16	r4, r5
 810a8e0:	fa2f f595 	sxtb16	r5, r5, ror #8
 810a8e4:	fb24 aa00 	smlad	sl, r4, r0, sl
 810a8e8:	fb24 bb02 	smlad	fp, r4, r2, fp
 810a8ec:	fb25 aa01 	smlad	sl, r5, r1, sl
 810a8f0:	fb25 bb03 	smlad	fp, r5, r3, fp
 810a8f4:	f859 4b04 	ldr.w	r4, [r9], #4
 810a8f8:	fa2f f584 	sxtb16	r5, r4
 810a8fc:	fa2f f494 	sxtb16	r4, r4, ror #8
 810a900:	fb25 cc00 	smlad	ip, r5, r0, ip
 810a904:	fb25 ee02 	smlad	lr, r5, r2, lr
 810a908:	fb24 cc01 	smlad	ip, r4, r1, ip
 810a90c:	fb24 ee03 	smlad	lr, r4, r3, lr
 810a910:	f8d9 5040 	ldr.w	r5, [r9, #64]	; 0x40
 810a914:	f856 0b04 	ldr.w	r0, [r6], #4
 810a918:	f856 1b04 	ldr.w	r1, [r6], #4
 810a91c:	f856 2b04 	ldr.w	r2, [r6], #4
 810a920:	f856 3b04 	ldr.w	r3, [r6], #4
 810a924:	fa2f f485 	sxtb16	r4, r5
 810a928:	fa2f f595 	sxtb16	r5, r5, ror #8
 810a92c:	fb24 aa00 	smlad	sl, r4, r0, sl
 810a930:	fb24 bb02 	smlad	fp, r4, r2, fp
 810a934:	fb25 aa01 	smlad	sl, r5, r1, sl
 810a938:	fb25 bb03 	smlad	fp, r5, r3, fp
 810a93c:	f859 4b04 	ldr.w	r4, [r9], #4
 810a940:	fa2f f584 	sxtb16	r5, r4
 810a944:	fa2f f494 	sxtb16	r4, r4, ror #8
 810a948:	fb25 cc00 	smlad	ip, r5, r0, ip
 810a94c:	fb25 ee02 	smlad	lr, r5, r2, lr
 810a950:	fb24 cc01 	smlad	ip, r4, r1, ip
 810a954:	fb24 ee03 	smlad	lr, r4, r3, lr
 810a958:	f8d9 5040 	ldr.w	r5, [r9, #64]	; 0x40
 810a95c:	f856 0b04 	ldr.w	r0, [r6], #4
 810a960:	f856 1b04 	ldr.w	r1, [r6], #4
 810a964:	f856 2b04 	ldr.w	r2, [r6], #4
 810a968:	f856 3b04 	ldr.w	r3, [r6], #4
 810a96c:	fa2f f485 	sxtb16	r4, r5
 810a970:	fa2f f595 	sxtb16	r5, r5, ror #8
 810a974:	fb24 aa00 	smlad	sl, r4, r0, sl
 810a978:	fb24 bb02 	smlad	fp, r4, r2, fp
 810a97c:	fb25 aa01 	smlad	sl, r5, r1, sl
 810a980:	fb25 bb03 	smlad	fp, r5, r3, fp
 810a984:	f859 4b04 	ldr.w	r4, [r9], #4
 810a988:	fa2f f584 	sxtb16	r5, r4
 810a98c:	fa2f f494 	sxtb16	r4, r4, ror #8
 810a990:	fb25 cc00 	smlad	ip, r5, r0, ip
 810a994:	fb25 ee02 	smlad	lr, r5, r2, lr
 810a998:	fb24 cc01 	smlad	ip, r4, r1, ip
 810a99c:	fb24 ee03 	smlad	lr, r4, r3, lr
 810a9a0:	f8d9 5040 	ldr.w	r5, [r9, #64]	; 0x40
 810a9a4:	f856 0b04 	ldr.w	r0, [r6], #4
 810a9a8:	f856 1b04 	ldr.w	r1, [r6], #4
 810a9ac:	f856 2b04 	ldr.w	r2, [r6], #4
 810a9b0:	f856 3b04 	ldr.w	r3, [r6], #4
 810a9b4:	fa2f f485 	sxtb16	r4, r5
 810a9b8:	fa2f f595 	sxtb16	r5, r5, ror #8
 810a9bc:	fb24 aa00 	smlad	sl, r4, r0, sl
 810a9c0:	fb24 bb02 	smlad	fp, r4, r2, fp
 810a9c4:	fb25 aa01 	smlad	sl, r5, r1, sl
 810a9c8:	fb25 bb03 	smlad	fp, r5, r3, fp
 810a9cc:	f859 4b04 	ldr.w	r4, [r9], #4
 810a9d0:	fa2f f584 	sxtb16	r5, r4
 810a9d4:	fa2f f494 	sxtb16	r4, r4, ror #8
 810a9d8:	fb25 cc00 	smlad	ip, r5, r0, ip
 810a9dc:	fb25 ee02 	smlad	lr, r5, r2, lr
 810a9e0:	fb24 cc01 	smlad	ip, r4, r1, ip
 810a9e4:	fb24 ee03 	smlad	lr, r4, r3, lr
 810a9e8:	f1b8 0801 	subs.w	r8, r8, #1
 810a9ec:	f73f aedc 	bgt.w	810a7a8 <st_sssa8_ch_nn_mat_mult_pw_nt_t_KWS+0xf8>
 810a9f0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 810a9f2:	462e      	mov	r6, r5
 810a9f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 810a9f6:	1e90      	subs	r0, r2, #2
 810a9f8:	dc09      	bgt.n	810aa0e <st_sssa8_ch_nn_mat_mult_pw_nt_t_KWS+0x35e>
 810a9fa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 810a9fc:	f1c2 0202 	rsb	r2, r2, #2
 810aa00:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 810aa04:	920c      	str	r2, [sp, #48]	; 0x30
 810aa06:	f100 0005 	add.w	r0, r0, #5
 810aa0a:	f105 0502 	add.w	r5, r5, #2
 810aa0e:	900f      	str	r0, [sp, #60]	; 0x3c
 810aa10:	9800      	ldr	r0, [sp, #0]
 810aa12:	9902      	ldr	r1, [sp, #8]
 810aa14:	9a04      	ldr	r2, [sp, #16]
 810aa16:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 810aa18:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 810aa1c:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 810aa20:	fb5c 0c01 	smmla	ip, ip, r1, r0
 810aa24:	fb5a 0a01 	smmla	sl, sl, r1, r0
 810aa28:	fa4c fc02 	asr.w	ip, ip, r2
 810aa2c:	fa4a fa02 	asr.w	sl, sl, r2
 810aa30:	f30c 0c07 	ssat	ip, #8, ip
 810aa34:	f30a 0a07 	ssat	sl, #8, sl
 810aa38:	f886 c000 	strb.w	ip, [r6]
 810aa3c:	f884 a000 	strb.w	sl, [r4]
 810aa40:	9801      	ldr	r0, [sp, #4]
 810aa42:	9903      	ldr	r1, [sp, #12]
 810aa44:	9a05      	ldr	r2, [sp, #20]
 810aa46:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 810aa4a:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 810aa4e:	fb5e 0e01 	smmla	lr, lr, r1, r0
 810aa52:	fb5b 0b01 	smmla	fp, fp, r1, r0
 810aa56:	fa4e fe02 	asr.w	lr, lr, r2
 810aa5a:	fa4b fb02 	asr.w	fp, fp, r2
 810aa5e:	f30e 0e07 	ssat	lr, #8, lr
 810aa62:	f30b 0b07 	ssat	fp, #8, fp
 810aa66:	f886 e0bd 	strb.w	lr, [r6, #189]	; 0xbd
 810aa6a:	f884 b0bd 	strb.w	fp, [r4, #189]	; 0xbd
 810aa6e:	f105 0302 	add.w	r3, r5, #2
 810aa72:	930b      	str	r3, [sp, #44]	; 0x2c
 810aa74:	f109 0940 	add.w	r9, r9, #64	; 0x40
 810aa78:	3f01      	subs	r7, #1
 810aa7a:	f47f ae8a 	bne.w	810a792 <st_sssa8_ch_nn_mat_mult_pw_nt_t_KWS+0xe2>
 810aa7e:	f8cd 9020 	str.w	r9, [sp, #32]
 810aa82:	f8dd 9020 	ldr.w	r9, [sp, #32]
 810aa86:	9e2c      	ldr	r6, [sp, #176]	; 0xb0
 810aa88:	e9dd ce09 	ldrd	ip, lr, [sp, #36]	; 0x24
 810aa8c:	f04f 0810 	mov.w	r8, #16
 810aa90:	f859 4b04 	ldr.w	r4, [r9], #4
 810aa94:	f856 0b04 	ldr.w	r0, [r6], #4
 810aa98:	f856 1b04 	ldr.w	r1, [r6], #4
 810aa9c:	f856 2b04 	ldr.w	r2, [r6], #4
 810aaa0:	f856 3b04 	ldr.w	r3, [r6], #4
 810aaa4:	fa2f f584 	sxtb16	r5, r4
 810aaa8:	fa2f f494 	sxtb16	r4, r4, ror #8
 810aaac:	fb25 cc00 	smlad	ip, r5, r0, ip
 810aab0:	fb25 ee02 	smlad	lr, r5, r2, lr
 810aab4:	fb24 cc01 	smlad	ip, r4, r1, ip
 810aab8:	fb24 ee03 	smlad	lr, r4, r3, lr
 810aabc:	f1b8 0801 	subs.w	r8, r8, #1
 810aac0:	dce6      	bgt.n	810aa90 <st_sssa8_ch_nn_mat_mult_pw_nt_t_KWS+0x3e0>
 810aac2:	9800      	ldr	r0, [sp, #0]
 810aac4:	9902      	ldr	r1, [sp, #8]
 810aac6:	9a04      	ldr	r2, [sp, #16]
 810aac8:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 810aaca:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 810aace:	fb5c 0c01 	smmla	ip, ip, r1, r0
 810aad2:	fa4c fc02 	asr.w	ip, ip, r2
 810aad6:	f30c 0c07 	ssat	ip, #8, ip
 810aada:	f886 c000 	strb.w	ip, [r6]
 810aade:	9801      	ldr	r0, [sp, #4]
 810aae0:	9903      	ldr	r1, [sp, #12]
 810aae2:	9a05      	ldr	r2, [sp, #20]
 810aae4:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 810aae8:	fb5e 0e01 	smmla	lr, lr, r1, r0
 810aaec:	fa4e fe02 	asr.w	lr, lr, r2
 810aaf0:	f30e 0e07 	ssat	lr, #8, lr
 810aaf4:	f886 e0bd 	strb.w	lr, [r6, #189]	; 0xbd
 810aaf8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 810aafa:	f103 0380 	add.w	r3, r3, #128	; 0x80
 810aafe:	9313      	str	r3, [sp, #76]	; 0x4c
 810ab00:	9b12      	ldr	r3, [sp, #72]	; 0x48
 810ab02:	9a15      	ldr	r2, [sp, #84]	; 0x54
 810ab04:	f503 73bd 	add.w	r3, r3, #378	; 0x17a
 810ab08:	9312      	str	r3, [sp, #72]	; 0x48
 810ab0a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 810ab0c:	f102 0201 	add.w	r2, r2, #1
 810ab10:	920d      	str	r2, [sp, #52]	; 0x34
 810ab12:	2a20      	cmp	r2, #32
 810ab14:	f6ff add8 	blt.w	810a6c8 <st_sssa8_ch_nn_mat_mult_pw_nt_t_KWS+0x18>
 810ab18:	2000      	movs	r0, #0
 810ab1a:	b019      	add	sp, #100	; 0x64
 810ab1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0810ab20 <ai_sum_f32>:
 810ab20:	edd1 7a00 	vldr	s15, [r1]
 810ab24:	ed92 7a00 	vldr	s14, [r2]
 810ab28:	ee77 7a87 	vadd.f32	s15, s15, s14
 810ab2c:	edc0 7a00 	vstr	s15, [r0]
 810ab30:	4770      	bx	lr
 810ab32:	bf00      	nop

0810ab34 <ai_sum_buffer_INT8>:
 810ab34:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 810ab38:	9c07      	ldr	r4, [sp, #28]
 810ab3a:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 810ab3e:	ed94 0a00 	vldr	s0, [r4]
 810ab42:	9c08      	ldr	r4, [sp, #32]
 810ab44:	f994 6000 	ldrsb.w	r6, [r4]
 810ab48:	9c09      	ldr	r4, [sp, #36]	; 0x24
 810ab4a:	edd4 0a00 	vldr	s1, [r4]
 810ab4e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 810ab50:	f994 9000 	ldrsb.w	r9, [r4]
 810ab54:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 810ab56:	ed94 1a00 	vldr	s2, [r4]
 810ab5a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 810ab5c:	f994 5000 	ldrsb.w	r5, [r4]
 810ab60:	f1b8 0f00 	cmp.w	r8, #0
 810ab64:	d10e      	bne.n	810ab84 <ai_sum_buffer_INT8+0x50>
 810ab66:	eeb4 0a41 	vcmp.f32	s0, s2
 810ab6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 810ab6e:	d102      	bne.n	810ab76 <ai_sum_buffer_INT8+0x42>
 810ab70:	42ae      	cmp	r6, r5
 810ab72:	f000 8138 	beq.w	810ade6 <ai_sum_buffer_INT8+0x2b2>
 810ab76:	e9cd 9508 	strd	r9, r5, [sp, #32]
 810ab7a:	9607      	str	r6, [sp, #28]
 810ab7c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 810ab80:	f000 ba3c 	b.w	810affc <ai_math_elementwise_sum_int8>
 810ab84:	eec0 5a81 	vdiv.f32	s11, s1, s2
 810ab88:	f04f 0c01 	mov.w	ip, #1
 810ab8c:	089f      	lsrs	r7, r3, #2
 810ab8e:	eec0 7a01 	vdiv.f32	s15, s0, s2
 810ab92:	ee15 4a90 	vmov	r4, s11
 810ab96:	ee17 ea90 	vmov	lr, s15
 810ab9a:	f3c4 54c7 	ubfx	r4, r4, #23, #8
 810ab9e:	f1c4 047e 	rsb	r4, r4, #126	; 0x7e
 810aba2:	f3ce 5ec7 	ubfx	lr, lr, #23, #8
 810aba6:	ea04 74e4 	and.w	r4, r4, r4, asr #31
 810abaa:	f1ce 0e7e 	rsb	lr, lr, #126	; 0x7e
 810abae:	4574      	cmp	r4, lr
 810abb0:	bfa8      	it	ge
 810abb2:	4674      	movge	r4, lr
 810abb4:	f104 0e1d 	add.w	lr, r4, #29
 810abb8:	fa0c fe0e 	lsl.w	lr, ip, lr
 810abbc:	ee07 ea10 	vmov	s14, lr
 810abc0:	45e0      	cmp	r8, ip
 810abc2:	eeb8 6ac7 	vcvt.f32.s32	s12, s14
 810abc6:	f000 8087 	beq.w	810acd8 <ai_sum_buffer_INT8+0x1a4>
 810abca:	ee07 6a10 	vmov	s14, r6
 810abce:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 810abd2:	ee07 5a10 	vmov	s14, r5
 810abd6:	f992 2000 	ldrsb.w	r2, [r2]
 810abda:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 810abde:	eba2 0209 	sub.w	r2, r2, r9
 810abe2:	eea6 7ae7 	vfms.f32	s14, s13, s15
 810abe6:	f104 0616 	add.w	r6, r4, #22
 810abea:	3415      	adds	r4, #21
 810abec:	ee05 2a10 	vmov	s10, r2
 810abf0:	ee77 7aa7 	vadd.f32	s15, s15, s15
 810abf4:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 810abf8:	fa0c f204 	lsl.w	r2, ip, r4
 810abfc:	fa0c f406 	lsl.w	r4, ip, r6
 810ac00:	eea5 7a25 	vfma.f32	s14, s10, s11
 810ac04:	ee67 6a86 	vmul.f32	s13, s15, s12
 810ac08:	ee07 4a90 	vmov	s15, r4
 810ac0c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 810ac10:	ee67 7a87 	vmul.f32	s15, s15, s14
 810ac14:	eebd 7ae6 	vcvt.s32.f32	s14, s13
 810ac18:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 810ac1c:	ee17 4a10 	vmov	r4, s14
 810ac20:	ee17 5a90 	vmov	r5, s15
 810ac24:	4415      	add	r5, r2
 810ac26:	2f00      	cmp	r7, #0
 810ac28:	f000 80f7 	beq.w	810ae1a <ai_sum_buffer_INT8+0x2e6>
 810ac2c:	ea4f 0887 	mov.w	r8, r7, lsl #2
 810ac30:	f100 0e04 	add.w	lr, r0, #4
 810ac34:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 810ac38:	f851 2b04 	ldr.w	r2, [r1], #4
 810ac3c:	ea4f 2c02 	mov.w	ip, r2, lsl #8
 810ac40:	f00c 2cff 	and.w	ip, ip, #4278255360	; 0xff00ff00
 810ac44:	fb34 590c 	smlawb	r9, r4, ip, r5
 810ac48:	fa49 f906 	asr.w	r9, r9, r6
 810ac4c:	f309 0907 	ssat	r9, #8, r9
 810ac50:	f80e 9c04 	strb.w	r9, [lr, #-4]
 810ac54:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
 810ac58:	fb34 5902 	smlawb	r9, r4, r2, r5
 810ac5c:	fa49 f906 	asr.w	r9, r9, r6
 810ac60:	f309 0907 	ssat	r9, #8, r9
 810ac64:	f80e 9c03 	strb.w	r9, [lr, #-3]
 810ac68:	fb34 5c1c 	smlawt	ip, r4, ip, r5
 810ac6c:	fa4c fc06 	asr.w	ip, ip, r6
 810ac70:	f30c 0c07 	ssat	ip, #8, ip
 810ac74:	f80e cc02 	strb.w	ip, [lr, #-2]
 810ac78:	fb34 5212 	smlawt	r2, r4, r2, r5
 810ac7c:	4132      	asrs	r2, r6
 810ac7e:	f302 0207 	ssat	r2, #8, r2
 810ac82:	42b9      	cmp	r1, r7
 810ac84:	f80e 2c01 	strb.w	r2, [lr, #-1]
 810ac88:	f10e 0e04 	add.w	lr, lr, #4
 810ac8c:	d1d4      	bne.n	810ac38 <ai_sum_buffer_INT8+0x104>
 810ac8e:	4440      	add	r0, r8
 810ac90:	f013 0303 	ands.w	r3, r3, #3
 810ac94:	d01e      	beq.n	810acd4 <ai_sum_buffer_INT8+0x1a0>
 810ac96:	f997 2000 	ldrsb.w	r2, [r7]
 810ac9a:	0212      	lsls	r2, r2, #8
 810ac9c:	fb34 5202 	smlawb	r2, r4, r2, r5
 810aca0:	4132      	asrs	r2, r6
 810aca2:	f302 0207 	ssat	r2, #8, r2
 810aca6:	3b01      	subs	r3, #1
 810aca8:	7002      	strb	r2, [r0, #0]
 810acaa:	d013      	beq.n	810acd4 <ai_sum_buffer_INT8+0x1a0>
 810acac:	f997 2001 	ldrsb.w	r2, [r7, #1]
 810acb0:	0212      	lsls	r2, r2, #8
 810acb2:	fb34 5202 	smlawb	r2, r4, r2, r5
 810acb6:	4132      	asrs	r2, r6
 810acb8:	f302 0207 	ssat	r2, #8, r2
 810acbc:	2b01      	cmp	r3, #1
 810acbe:	7042      	strb	r2, [r0, #1]
 810acc0:	d008      	beq.n	810acd4 <ai_sum_buffer_INT8+0x1a0>
 810acc2:	f997 3002 	ldrsb.w	r3, [r7, #2]
 810acc6:	021b      	lsls	r3, r3, #8
 810acc8:	fb34 5303 	smlawb	r3, r4, r3, r5
 810accc:	4133      	asrs	r3, r6
 810acce:	f303 0307 	ssat	r3, #8, r3
 810acd2:	7083      	strb	r3, [r0, #2]
 810acd4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 810acd8:	ee07 9a10 	vmov	s14, r9
 810acdc:	eeb8 5ac7 	vcvt.f32.s32	s10, s14
 810ace0:	ee07 5a10 	vmov	s14, r5
 810ace4:	f991 1000 	ldrsb.w	r1, [r1]
 810ace8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 810acec:	1b89      	subs	r1, r1, r6
 810acee:	eea5 7a65 	vfms.f32	s14, s10, s11
 810acf2:	f104 0e16 	add.w	lr, r4, #22
 810acf6:	3415      	adds	r4, #21
 810acf8:	ee06 1a90 	vmov	s13, r1
 810acfc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 810ad00:	fa08 f10e 	lsl.w	r1, r8, lr
 810ad04:	eea6 7aa7 	vfma.f32	s14, s13, s15
 810ad08:	fa08 f404 	lsl.w	r4, r8, r4
 810ad0c:	ee07 1a90 	vmov	s15, r1
 810ad10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 810ad14:	ee75 5aa5 	vadd.f32	s11, s11, s11
 810ad18:	ee67 7a87 	vmul.f32	s15, s15, s14
 810ad1c:	ee65 5a86 	vmul.f32	s11, s11, s12
 810ad20:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 810ad24:	eebd 7ae5 	vcvt.s32.f32	s14, s11
 810ad28:	ee17 5a90 	vmov	r5, s15
 810ad2c:	ee17 6a10 	vmov	r6, s14
 810ad30:	4425      	add	r5, r4
 810ad32:	2f00      	cmp	r7, #0
 810ad34:	d073      	beq.n	810ae1e <ai_sum_buffer_INT8+0x2ea>
 810ad36:	ea4f 0887 	mov.w	r8, r7, lsl #2
 810ad3a:	f100 0c04 	add.w	ip, r0, #4
 810ad3e:	eb02 0787 	add.w	r7, r2, r7, lsl #2
 810ad42:	f852 1b04 	ldr.w	r1, [r2], #4
 810ad46:	020c      	lsls	r4, r1, #8
 810ad48:	f004 24ff 	and.w	r4, r4, #4278255360	; 0xff00ff00
 810ad4c:	fb36 5904 	smlawb	r9, r6, r4, r5
 810ad50:	fa49 f90e 	asr.w	r9, r9, lr
 810ad54:	f309 0907 	ssat	r9, #8, r9
 810ad58:	f80c 9c04 	strb.w	r9, [ip, #-4]
 810ad5c:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
 810ad60:	fb36 5901 	smlawb	r9, r6, r1, r5
 810ad64:	fa49 f90e 	asr.w	r9, r9, lr
 810ad68:	f309 0907 	ssat	r9, #8, r9
 810ad6c:	f80c 9c03 	strb.w	r9, [ip, #-3]
 810ad70:	fb36 5414 	smlawt	r4, r6, r4, r5
 810ad74:	fa44 f40e 	asr.w	r4, r4, lr
 810ad78:	f304 0407 	ssat	r4, #8, r4
 810ad7c:	f80c 4c02 	strb.w	r4, [ip, #-2]
 810ad80:	fb36 5111 	smlawt	r1, r6, r1, r5
 810ad84:	fa41 f10e 	asr.w	r1, r1, lr
 810ad88:	f301 0107 	ssat	r1, #8, r1
 810ad8c:	42ba      	cmp	r2, r7
 810ad8e:	f80c 1c01 	strb.w	r1, [ip, #-1]
 810ad92:	f10c 0c04 	add.w	ip, ip, #4
 810ad96:	d1d4      	bne.n	810ad42 <ai_sum_buffer_INT8+0x20e>
 810ad98:	4440      	add	r0, r8
 810ad9a:	f013 0303 	ands.w	r3, r3, #3
 810ad9e:	d099      	beq.n	810acd4 <ai_sum_buffer_INT8+0x1a0>
 810ada0:	f997 2000 	ldrsb.w	r2, [r7]
 810ada4:	0212      	lsls	r2, r2, #8
 810ada6:	fb36 5202 	smlawb	r2, r6, r2, r5
 810adaa:	fa42 f20e 	asr.w	r2, r2, lr
 810adae:	f302 0207 	ssat	r2, #8, r2
 810adb2:	3b01      	subs	r3, #1
 810adb4:	7002      	strb	r2, [r0, #0]
 810adb6:	d08d      	beq.n	810acd4 <ai_sum_buffer_INT8+0x1a0>
 810adb8:	f997 2001 	ldrsb.w	r2, [r7, #1]
 810adbc:	0212      	lsls	r2, r2, #8
 810adbe:	fb36 5202 	smlawb	r2, r6, r2, r5
 810adc2:	fa42 f20e 	asr.w	r2, r2, lr
 810adc6:	f302 0207 	ssat	r2, #8, r2
 810adca:	2b01      	cmp	r3, #1
 810adcc:	7042      	strb	r2, [r0, #1]
 810adce:	d081      	beq.n	810acd4 <ai_sum_buffer_INT8+0x1a0>
 810add0:	f997 3002 	ldrsb.w	r3, [r7, #2]
 810add4:	021b      	lsls	r3, r3, #8
 810add6:	fb36 5303 	smlawb	r3, r6, r3, r5
 810adda:	fa43 f30e 	asr.w	r3, r3, lr
 810adde:	f303 0307 	ssat	r3, #8, r3
 810ade2:	7083      	strb	r3, [r0, #2]
 810ade4:	e776      	b.n	810acd4 <ai_sum_buffer_INT8+0x1a0>
 810ade6:	eef4 0a41 	vcmp.f32	s1, s2
 810adea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 810adee:	f47f aec2 	bne.w	810ab76 <ai_sum_buffer_INT8+0x42>
 810adf2:	45b1      	cmp	r9, r6
 810adf4:	f47f aebf 	bne.w	810ab76 <ai_sum_buffer_INT8+0x42>
 810adf8:	2b00      	cmp	r3, #0
 810adfa:	f43f af6b 	beq.w	810acd4 <ai_sum_buffer_INT8+0x1a0>
 810adfe:	4403      	add	r3, r0
 810ae00:	f911 4b01 	ldrsb.w	r4, [r1], #1
 810ae04:	f912 5b01 	ldrsb.w	r5, [r2], #1
 810ae08:	442c      	add	r4, r5
 810ae0a:	444c      	add	r4, r9
 810ae0c:	f304 0407 	ssat	r4, #8, r4
 810ae10:	f800 4b01 	strb.w	r4, [r0], #1
 810ae14:	4298      	cmp	r0, r3
 810ae16:	d1f3      	bne.n	810ae00 <ai_sum_buffer_INT8+0x2cc>
 810ae18:	e75c      	b.n	810acd4 <ai_sum_buffer_INT8+0x1a0>
 810ae1a:	460f      	mov	r7, r1
 810ae1c:	e738      	b.n	810ac90 <ai_sum_buffer_INT8+0x15c>
 810ae1e:	4617      	mov	r7, r2
 810ae20:	e7bb      	b.n	810ad9a <ai_sum_buffer_INT8+0x266>
 810ae22:	bf00      	nop

0810ae24 <ai_array_get_byte_size>:
 810ae24:	b319      	cbz	r1, 810ae6e <ai_array_get_byte_size+0x4a>
 810ae26:	f3c0 13c6 	ubfx	r3, r0, #7, #7
 810ae2a:	fb01 f303 	mul.w	r3, r1, r3
 810ae2e:	f3c0 4243 	ubfx	r2, r0, #17, #4
 810ae32:	3307      	adds	r3, #7
 810ae34:	f3c0 5141 	ubfx	r1, r0, #21, #2
 810ae38:	f023 0307 	bic.w	r3, r3, #7
 810ae3c:	2a04      	cmp	r2, #4
 810ae3e:	ea4f 10e0 	mov.w	r0, r0, asr #7
 810ae42:	fa23 f101 	lsr.w	r1, r3, r1
 810ae46:	d00b      	beq.n	810ae60 <ai_array_get_byte_size+0x3c>
 810ae48:	2a08      	cmp	r2, #8
 810ae4a:	d002      	beq.n	810ae52 <ai_array_get_byte_size+0x2e>
 810ae4c:	3107      	adds	r1, #7
 810ae4e:	08c8      	lsrs	r0, r1, #3
 810ae50:	4770      	bx	lr
 810ae52:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 810ae56:	eb01 2100 	add.w	r1, r1, r0, lsl #8
 810ae5a:	3107      	adds	r1, #7
 810ae5c:	08c8      	lsrs	r0, r1, #3
 810ae5e:	4770      	bx	lr
 810ae60:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 810ae64:	eb01 1100 	add.w	r1, r1, r0, lsl #4
 810ae68:	3107      	adds	r1, #7
 810ae6a:	08c8      	lsrs	r0, r1, #3
 810ae6c:	4770      	bx	lr
 810ae6e:	4608      	mov	r0, r1
 810ae70:	4770      	bx	lr
 810ae72:	bf00      	nop

0810ae74 <ai_version_get>:
 810ae74:	0212      	lsls	r2, r2, #8
 810ae76:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 810ae7a:	ea42 6000 	orr.w	r0, r2, r0, lsl #24
 810ae7e:	4770      	bx	lr

0810ae80 <core_get_broadcasted_shape>:
 810ae80:	b470      	push	{r4, r5, r6}
 810ae82:	6804      	ldr	r4, [r0, #0]
 810ae84:	f3c4 2417 	ubfx	r4, r4, #8, #24
 810ae88:	b324      	cbz	r4, 810aed4 <core_get_broadcasted_shape+0x54>
 810ae8a:	4623      	mov	r3, r4
 810ae8c:	3b01      	subs	r3, #1
 810ae8e:	429c      	cmp	r4, r3
 810ae90:	d91b      	bls.n	810aeca <core_get_broadcasted_shape+0x4a>
 810ae92:	6814      	ldr	r4, [r2, #0]
 810ae94:	680e      	ldr	r6, [r1, #0]
 810ae96:	ebb3 2f14 	cmp.w	r3, r4, lsr #8
 810ae9a:	bf36      	itet	cc
 810ae9c:	6854      	ldrcc	r4, [r2, #4]
 810ae9e:	2401      	movcs	r4, #1
 810aea0:	f854 4023 	ldrcc.w	r4, [r4, r3, lsl #2]
 810aea4:	ea4f 0c83 	mov.w	ip, r3, lsl #2
 810aea8:	bf38      	it	cc
 810aeaa:	ea4f 0c83 	movcc.w	ip, r3, lsl #2
 810aeae:	ebb3 2f16 	cmp.w	r3, r6, lsr #8
 810aeb2:	f04f 0501 	mov.w	r5, #1
 810aeb6:	bf3c      	itt	cc
 810aeb8:	684d      	ldrcc	r5, [r1, #4]
 810aeba:	f855 500c 	ldrcc.w	r5, [r5, ip]
 810aebe:	42ac      	cmp	r4, r5
 810aec0:	bf38      	it	cc
 810aec2:	462c      	movcc	r4, r5
 810aec4:	6845      	ldr	r5, [r0, #4]
 810aec6:	f845 400c 	str.w	r4, [r5, ip]
 810aeca:	b11b      	cbz	r3, 810aed4 <core_get_broadcasted_shape+0x54>
 810aecc:	6804      	ldr	r4, [r0, #0]
 810aece:	f3c4 2417 	ubfx	r4, r4, #8, #24
 810aed2:	e7db      	b.n	810ae8c <core_get_broadcasted_shape+0xc>
 810aed4:	bc70      	pop	{r4, r5, r6}
 810aed6:	4770      	bx	lr

0810aed8 <core_compute_offsets>:
 810aed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 810aedc:	e9d1 4600 	ldrd	r4, r6, [r1]
 810aee0:	f5b4 6fa0 	cmp.w	r4, #1280	; 0x500
 810aee4:	f8d2 9004 	ldr.w	r9, [r2, #4]
 810aee8:	6871      	ldr	r1, [r6, #4]
 810aeea:	6812      	ldr	r2, [r2, #0]
 810aeec:	bf28      	it	cs
 810aeee:	6935      	ldrcs	r5, [r6, #16]
 810aef0:	f8d9 c004 	ldr.w	ip, [r9, #4]
 810aef4:	f8d0 b000 	ldr.w	fp, [r0]
 810aef8:	bf2e      	itee	cs
 810aefa:	fb05 fe01 	mulcs.w	lr, r5, r1
 810aefe:	468e      	movcc	lr, r1
 810af00:	2501      	movcc	r5, #1
 810af02:	f5b2 6fa0 	cmp.w	r2, #1280	; 0x500
 810af06:	bf28      	it	cs
 810af08:	f8d9 2010 	ldrcs.w	r2, [r9, #16]
 810af0c:	e9d6 4802 	ldrd	r4, r8, [r6, #8]
 810af10:	e9d9 6902 	ldrd	r6, r9, [r9, #8]
 810af14:	bf38      	it	cc
 810af16:	2201      	movcc	r2, #1
 810af18:	b083      	sub	sp, #12
 810af1a:	ebb4 0a06 	subs.w	sl, r4, r6
 810af1e:	bf18      	it	ne
 810af20:	f04f 0a01 	movne.w	sl, #1
 810af24:	f5bb 7f00 	cmp.w	fp, #512	; 0x200
 810af28:	9201      	str	r2, [sp, #4]
 810af2a:	f3cb 2217 	ubfx	r2, fp, #8, #24
 810af2e:	d308      	bcc.n	810af42 <core_compute_offsets+0x6a>
 810af30:	6847      	ldr	r7, [r0, #4]
 810af32:	4561      	cmp	r1, ip
 810af34:	bf0c      	ite	eq
 810af36:	461a      	moveq	r2, r3
 810af38:	2200      	movne	r2, #0
 810af3a:	607a      	str	r2, [r7, #4]
 810af3c:	6802      	ldr	r2, [r0, #0]
 810af3e:	f3c2 2217 	ubfx	r2, r2, #8, #24
 810af42:	9f01      	ldr	r7, [sp, #4]
 810af44:	42bd      	cmp	r5, r7
 810af46:	d03f      	beq.n	810afc8 <core_compute_offsets+0xf0>
 810af48:	eba1 0b0c 	sub.w	fp, r1, ip
 810af4c:	fabb fb8b 	clz	fp, fp
 810af50:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 810af54:	fb01 fb0b 	mul.w	fp, r1, fp
 810af58:	f1cb 0b00 	rsb	fp, fp, #0
 810af5c:	2a04      	cmp	r2, #4
 810af5e:	d906      	bls.n	810af6e <core_compute_offsets+0x96>
 810af60:	6847      	ldr	r7, [r0, #4]
 810af62:	fb0b f203 	mul.w	r2, fp, r3
 810af66:	613a      	str	r2, [r7, #16]
 810af68:	6802      	ldr	r2, [r0, #0]
 810af6a:	f3c2 2217 	ubfx	r2, r2, #8, #24
 810af6e:	42b4      	cmp	r4, r6
 810af70:	d03a      	beq.n	810afe8 <core_compute_offsets+0x110>
 810af72:	f04f 0b00 	mov.w	fp, #0
 810af76:	2a02      	cmp	r2, #2
 810af78:	fb0e fa0a 	mul.w	sl, lr, sl
 810af7c:	d90e      	bls.n	810af9c <core_compute_offsets+0xc4>
 810af7e:	9a01      	ldr	r2, [sp, #4]
 810af80:	6847      	ldr	r7, [r0, #4]
 810af82:	1aaa      	subs	r2, r5, r2
 810af84:	bf18      	it	ne
 810af86:	2201      	movne	r2, #1
 810af88:	ebab 0b0a 	sub.w	fp, fp, sl
 810af8c:	fb01 bb02 	mla	fp, r1, r2, fp
 810af90:	fb03 f20b 	mul.w	r2, r3, fp
 810af94:	60ba      	str	r2, [r7, #8]
 810af96:	6802      	ldr	r2, [r0, #0]
 810af98:	f3c2 2217 	ubfx	r2, r2, #8, #24
 810af9c:	45c8      	cmp	r8, r9
 810af9e:	d019      	beq.n	810afd4 <core_compute_offsets+0xfc>
 810afa0:	2100      	movs	r1, #0
 810afa2:	2a03      	cmp	r2, #3
 810afa4:	d90d      	bls.n	810afc2 <core_compute_offsets+0xea>
 810afa6:	ebb8 0809 	subs.w	r8, r8, r9
 810afaa:	fb0e f404 	mul.w	r4, lr, r4
 810afae:	bf18      	it	ne
 810afb0:	f04f 0801 	movne.w	r8, #1
 810afb4:	fb08 1114 	mls	r1, r8, r4, r1
 810afb8:	6842      	ldr	r2, [r0, #4]
 810afba:	4451      	add	r1, sl
 810afbc:	fb03 f101 	mul.w	r1, r3, r1
 810afc0:	60d1      	str	r1, [r2, #12]
 810afc2:	b003      	add	sp, #12
 810afc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 810afc8:	ebb1 0b0c 	subs.w	fp, r1, ip
 810afcc:	bf18      	it	ne
 810afce:	f04f 0b01 	movne.w	fp, #1
 810afd2:	e7c3      	b.n	810af5c <core_compute_offsets+0x84>
 810afd4:	42b4      	cmp	r4, r6
 810afd6:	d0e3      	beq.n	810afa0 <core_compute_offsets+0xc8>
 810afd8:	9e01      	ldr	r6, [sp, #4]
 810afda:	42b5      	cmp	r5, r6
 810afdc:	d0e0      	beq.n	810afa0 <core_compute_offsets+0xc8>
 810afde:	ebb1 010c 	subs.w	r1, r1, ip
 810afe2:	bf18      	it	ne
 810afe4:	2101      	movne	r1, #1
 810afe6:	e7dc      	b.n	810afa2 <core_compute_offsets+0xca>
 810afe8:	9f01      	ldr	r7, [sp, #4]
 810afea:	42bd      	cmp	r5, r7
 810afec:	d0c1      	beq.n	810af72 <core_compute_offsets+0x9a>
 810afee:	ebb1 0b0c 	subs.w	fp, r1, ip
 810aff2:	bf18      	it	ne
 810aff4:	f04f 0b01 	movne.w	fp, #1
 810aff8:	e7bd      	b.n	810af76 <core_compute_offsets+0x9e>
 810affa:	bf00      	nop

0810affc <ai_math_elementwise_sum_int8>:
 810affc:	eec0 7a81 	vdiv.f32	s15, s1, s2
 810b000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 810b004:	b085      	sub	sp, #20
 810b006:	4684      	mov	ip, r0
 810b008:	9001      	str	r0, [sp, #4]
 810b00a:	f99d 003c 	ldrsb.w	r0, [sp, #60]	; 0x3c
 810b00e:	9302      	str	r3, [sp, #8]
 810b010:	461d      	mov	r5, r3
 810b012:	2401      	movs	r4, #1
 810b014:	eec0 6a01 	vdiv.f32	s13, s0, s2
 810b018:	ee07 0a10 	vmov	s14, r0
 810b01c:	f99d 0038 	ldrsb.w	r0, [sp, #56]	; 0x38
 810b020:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 810b024:	ee17 3a90 	vmov	r3, s15
 810b028:	4240      	negs	r0, r0
 810b02a:	ee37 6aa7 	vadd.f32	s12, s15, s15
 810b02e:	ee27 7ac7 	vnmul.f32	s14, s15, s14
 810b032:	ee07 0a90 	vmov	s15, r0
 810b036:	ee16 0a90 	vmov	r0, s13
 810b03a:	f3c3 53c7 	ubfx	r3, r3, #23, #8
 810b03e:	f1c3 037e 	rsb	r3, r3, #126	; 0x7e
 810b042:	f3c0 50c7 	ubfx	r0, r0, #23, #8
 810b046:	ea03 73e3 	and.w	r3, r3, r3, asr #31
 810b04a:	f1c0 007e 	rsb	r0, r0, #126	; 0x7e
 810b04e:	4283      	cmp	r3, r0
 810b050:	bfa8      	it	ge
 810b052:	4603      	movge	r3, r0
 810b054:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 810b058:	f99d 0040 	ldrsb.w	r0, [sp, #64]	; 0x40
 810b05c:	eea7 7aa6 	vfma.f32	s14, s15, s13
 810b060:	f103 0916 	add.w	r9, r3, #22
 810b064:	ea5f 0b95 	movs.w	fp, r5, lsr #2
 810b068:	ee07 0a90 	vmov	s15, r0
 810b06c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 810b070:	fa04 f009 	lsl.w	r0, r4, r9
 810b074:	ee77 7a87 	vadd.f32	s15, s15, s14
 810b078:	ee07 0a10 	vmov	s14, r0
 810b07c:	f103 001d 	add.w	r0, r3, #29
 810b080:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 810b084:	fa04 f000 	lsl.w	r0, r4, r0
 810b088:	ee67 7a87 	vmul.f32	s15, s15, s14
 810b08c:	ee07 0a10 	vmov	s14, r0
 810b090:	ee76 5aa6 	vadd.f32	s11, s13, s13
 810b094:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 810b098:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 810b09c:	ee65 5a87 	vmul.f32	s11, s11, s14
 810b0a0:	ee17 6a90 	vmov	r6, s15
 810b0a4:	ee26 7a07 	vmul.f32	s14, s12, s14
 810b0a8:	eefd 7ae5 	vcvt.s32.f32	s15, s11
 810b0ac:	f103 0315 	add.w	r3, r3, #21
 810b0b0:	ee17 8a90 	vmov	r8, s15
 810b0b4:	fa04 f403 	lsl.w	r4, r4, r3
 810b0b8:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 810b0bc:	4426      	add	r6, r4
 810b0be:	ee17 7a90 	vmov	r7, s15
 810b0c2:	f106 36ff 	add.w	r6, r6, #4294967295	; 0xffffffff
 810b0c6:	f000 8081 	beq.w	810b1cc <ai_math_elementwise_sum_int8+0x1d0>
 810b0ca:	4663      	mov	r3, ip
 810b0cc:	1d1d      	adds	r5, r3, #4
 810b0ce:	ea4f 038b 	mov.w	r3, fp, lsl #2
 810b0d2:	9303      	str	r3, [sp, #12]
 810b0d4:	eb01 0b8b 	add.w	fp, r1, fp, lsl #2
 810b0d8:	4692      	mov	sl, r2
 810b0da:	f851 4b04 	ldr.w	r4, [r1], #4
 810b0de:	f85a 3b04 	ldr.w	r3, [sl], #4
 810b0e2:	ea4f 2e04 	mov.w	lr, r4, lsl #8
 810b0e6:	f00e 2eff 	and.w	lr, lr, #4278255360	; 0xff00ff00
 810b0ea:	fb38 6c0e 	smlawb	ip, r8, lr, r6
 810b0ee:	0218      	lsls	r0, r3, #8
 810b0f0:	f000 20ff 	and.w	r0, r0, #4278255360	; 0xff00ff00
 810b0f4:	fb37 cc00 	smlawb	ip, r7, r0, ip
 810b0f8:	fa4c fc09 	asr.w	ip, ip, r9
 810b0fc:	f30c 0c07 	ssat	ip, #8, ip
 810b100:	f805 cc04 	strb.w	ip, [r5, #-4]
 810b104:	f004 24ff 	and.w	r4, r4, #4278255360	; 0xff00ff00
 810b108:	fb38 6c04 	smlawb	ip, r8, r4, r6
 810b10c:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
 810b110:	fb37 cc03 	smlawb	ip, r7, r3, ip
 810b114:	fa4c fc09 	asr.w	ip, ip, r9
 810b118:	f30c 0c07 	ssat	ip, #8, ip
 810b11c:	f805 cc03 	strb.w	ip, [r5, #-3]
 810b120:	fb38 6e1e 	smlawt	lr, r8, lr, r6
 810b124:	fb37 e010 	smlawt	r0, r7, r0, lr
 810b128:	fa40 f009 	asr.w	r0, r0, r9
 810b12c:	f300 0007 	ssat	r0, #8, r0
 810b130:	f805 0c02 	strb.w	r0, [r5, #-2]
 810b134:	fb38 6414 	smlawt	r4, r8, r4, r6
 810b138:	fb37 4313 	smlawt	r3, r7, r3, r4
 810b13c:	fa43 f309 	asr.w	r3, r3, r9
 810b140:	f303 0307 	ssat	r3, #8, r3
 810b144:	4559      	cmp	r1, fp
 810b146:	f805 3c01 	strb.w	r3, [r5, #-1]
 810b14a:	f105 0504 	add.w	r5, r5, #4
 810b14e:	d1c4      	bne.n	810b0da <ai_math_elementwise_sum_int8+0xde>
 810b150:	9b01      	ldr	r3, [sp, #4]
 810b152:	9903      	ldr	r1, [sp, #12]
 810b154:	440b      	add	r3, r1
 810b156:	9301      	str	r3, [sp, #4]
 810b158:	440a      	add	r2, r1
 810b15a:	9b02      	ldr	r3, [sp, #8]
 810b15c:	f013 0003 	ands.w	r0, r3, #3
 810b160:	d031      	beq.n	810b1c6 <ai_math_elementwise_sum_int8+0x1ca>
 810b162:	f99b 1000 	ldrsb.w	r1, [fp]
 810b166:	0209      	lsls	r1, r1, #8
 810b168:	fb38 6101 	smlawb	r1, r8, r1, r6
 810b16c:	f992 3000 	ldrsb.w	r3, [r2]
 810b170:	021b      	lsls	r3, r3, #8
 810b172:	fb37 1303 	smlawb	r3, r7, r3, r1
 810b176:	fa43 f309 	asr.w	r3, r3, r9
 810b17a:	f303 0307 	ssat	r3, #8, r3
 810b17e:	9c01      	ldr	r4, [sp, #4]
 810b180:	3801      	subs	r0, #1
 810b182:	7023      	strb	r3, [r4, #0]
 810b184:	d01f      	beq.n	810b1c6 <ai_math_elementwise_sum_int8+0x1ca>
 810b186:	f99b 1001 	ldrsb.w	r1, [fp, #1]
 810b18a:	0209      	lsls	r1, r1, #8
 810b18c:	fb38 6101 	smlawb	r1, r8, r1, r6
 810b190:	f992 3001 	ldrsb.w	r3, [r2, #1]
 810b194:	021b      	lsls	r3, r3, #8
 810b196:	fb37 1303 	smlawb	r3, r7, r3, r1
 810b19a:	fa43 f309 	asr.w	r3, r3, r9
 810b19e:	f303 0307 	ssat	r3, #8, r3
 810b1a2:	2801      	cmp	r0, #1
 810b1a4:	7063      	strb	r3, [r4, #1]
 810b1a6:	d00e      	beq.n	810b1c6 <ai_math_elementwise_sum_int8+0x1ca>
 810b1a8:	f99b 3002 	ldrsb.w	r3, [fp, #2]
 810b1ac:	021b      	lsls	r3, r3, #8
 810b1ae:	fb38 6803 	smlawb	r8, r8, r3, r6
 810b1b2:	f992 3002 	ldrsb.w	r3, [r2, #2]
 810b1b6:	021b      	lsls	r3, r3, #8
 810b1b8:	fb37 8303 	smlawb	r3, r7, r3, r8
 810b1bc:	fa43 f309 	asr.w	r3, r3, r9
 810b1c0:	f303 0307 	ssat	r3, #8, r3
 810b1c4:	70a3      	strb	r3, [r4, #2]
 810b1c6:	b005      	add	sp, #20
 810b1c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 810b1cc:	468b      	mov	fp, r1
 810b1ce:	e7c4      	b.n	810b15a <ai_math_elementwise_sum_int8+0x15e>

0810b1d0 <powf>:
 810b1d0:	b508      	push	{r3, lr}
 810b1d2:	ed2d 8b04 	vpush	{d8-d9}
 810b1d6:	eeb0 8a60 	vmov.f32	s16, s1
 810b1da:	eeb0 9a40 	vmov.f32	s18, s0
 810b1de:	f000 f863 	bl	810b2a8 <__ieee754_powf>
 810b1e2:	eeb4 8a48 	vcmp.f32	s16, s16
 810b1e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 810b1ea:	eef0 8a40 	vmov.f32	s17, s0
 810b1ee:	d63e      	bvs.n	810b26e <powf+0x9e>
 810b1f0:	eeb5 9a40 	vcmp.f32	s18, #0.0
 810b1f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 810b1f8:	d112      	bne.n	810b220 <powf+0x50>
 810b1fa:	eeb5 8a40 	vcmp.f32	s16, #0.0
 810b1fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 810b202:	d039      	beq.n	810b278 <powf+0xa8>
 810b204:	eeb0 0a48 	vmov.f32	s0, s16
 810b208:	f000 f839 	bl	810b27e <finitef>
 810b20c:	b378      	cbz	r0, 810b26e <powf+0x9e>
 810b20e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 810b212:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 810b216:	d52a      	bpl.n	810b26e <powf+0x9e>
 810b218:	f000 fba4 	bl	810b964 <__errno>
 810b21c:	2322      	movs	r3, #34	; 0x22
 810b21e:	e014      	b.n	810b24a <powf+0x7a>
 810b220:	f000 f82d 	bl	810b27e <finitef>
 810b224:	b998      	cbnz	r0, 810b24e <powf+0x7e>
 810b226:	eeb0 0a49 	vmov.f32	s0, s18
 810b22a:	f000 f828 	bl	810b27e <finitef>
 810b22e:	b170      	cbz	r0, 810b24e <powf+0x7e>
 810b230:	eeb0 0a48 	vmov.f32	s0, s16
 810b234:	f000 f823 	bl	810b27e <finitef>
 810b238:	b148      	cbz	r0, 810b24e <powf+0x7e>
 810b23a:	eef4 8a68 	vcmp.f32	s17, s17
 810b23e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 810b242:	d7e9      	bvc.n	810b218 <powf+0x48>
 810b244:	f000 fb8e 	bl	810b964 <__errno>
 810b248:	2321      	movs	r3, #33	; 0x21
 810b24a:	6003      	str	r3, [r0, #0]
 810b24c:	e00f      	b.n	810b26e <powf+0x9e>
 810b24e:	eef5 8a40 	vcmp.f32	s17, #0.0
 810b252:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 810b256:	d10a      	bne.n	810b26e <powf+0x9e>
 810b258:	eeb0 0a49 	vmov.f32	s0, s18
 810b25c:	f000 f80f 	bl	810b27e <finitef>
 810b260:	b128      	cbz	r0, 810b26e <powf+0x9e>
 810b262:	eeb0 0a48 	vmov.f32	s0, s16
 810b266:	f000 f80a 	bl	810b27e <finitef>
 810b26a:	2800      	cmp	r0, #0
 810b26c:	d1d4      	bne.n	810b218 <powf+0x48>
 810b26e:	eeb0 0a68 	vmov.f32	s0, s17
 810b272:	ecbd 8b04 	vpop	{d8-d9}
 810b276:	bd08      	pop	{r3, pc}
 810b278:	eef7 8a00 	vmov.f32	s17, #112	; 0x3f800000  1.0
 810b27c:	e7f7      	b.n	810b26e <powf+0x9e>

0810b27e <finitef>:
 810b27e:	b082      	sub	sp, #8
 810b280:	ed8d 0a01 	vstr	s0, [sp, #4]
 810b284:	9801      	ldr	r0, [sp, #4]
 810b286:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 810b28a:	f1b0 4fff 	cmp.w	r0, #2139095040	; 0x7f800000
 810b28e:	bfac      	ite	ge
 810b290:	2000      	movge	r0, #0
 810b292:	2001      	movlt	r0, #1
 810b294:	b002      	add	sp, #8
 810b296:	4770      	bx	lr

0810b298 <fabsf>:
 810b298:	ee10 3a10 	vmov	r3, s0
 810b29c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 810b2a0:	ee00 3a10 	vmov	s0, r3
 810b2a4:	4770      	bx	lr
	...

0810b2a8 <__ieee754_powf>:
 810b2a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 810b2ac:	ee10 4a90 	vmov	r4, s1
 810b2b0:	f034 4800 	bics.w	r8, r4, #2147483648	; 0x80000000
 810b2b4:	ed2d 8b02 	vpush	{d8}
 810b2b8:	ee10 7a10 	vmov	r7, s0
 810b2bc:	eeb0 8a40 	vmov.f32	s16, s0
 810b2c0:	eef0 8a60 	vmov.f32	s17, s1
 810b2c4:	d10c      	bne.n	810b2e0 <__ieee754_powf+0x38>
 810b2c6:	f487 0780 	eor.w	r7, r7, #4194304	; 0x400000
 810b2ca:	007f      	lsls	r7, r7, #1
 810b2cc:	f517 0f00 	cmn.w	r7, #8388608	; 0x800000
 810b2d0:	f240 8292 	bls.w	810b7f8 <__ieee754_powf+0x550>
 810b2d4:	ee38 0a28 	vadd.f32	s0, s16, s17
 810b2d8:	ecbd 8b02 	vpop	{d8}
 810b2dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 810b2e0:	f027 4500 	bic.w	r5, r7, #2147483648	; 0x80000000
 810b2e4:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 810b2e8:	dcf4      	bgt.n	810b2d4 <__ieee754_powf+0x2c>
 810b2ea:	f1b8 4fff 	cmp.w	r8, #2139095040	; 0x7f800000
 810b2ee:	dd08      	ble.n	810b302 <__ieee754_powf+0x5a>
 810b2f0:	f1b7 5f7e 	cmp.w	r7, #1065353216	; 0x3f800000
 810b2f4:	d1ee      	bne.n	810b2d4 <__ieee754_powf+0x2c>
 810b2f6:	f484 0480 	eor.w	r4, r4, #4194304	; 0x400000
 810b2fa:	0064      	lsls	r4, r4, #1
 810b2fc:	f514 0f00 	cmn.w	r4, #8388608	; 0x800000
 810b300:	e7e6      	b.n	810b2d0 <__ieee754_powf+0x28>
 810b302:	2f00      	cmp	r7, #0
 810b304:	da20      	bge.n	810b348 <__ieee754_powf+0xa0>
 810b306:	f1b8 4f97 	cmp.w	r8, #1266679808	; 0x4b800000
 810b30a:	da2d      	bge.n	810b368 <__ieee754_powf+0xc0>
 810b30c:	f1b8 5f7e 	cmp.w	r8, #1065353216	; 0x3f800000
 810b310:	f2c0 827b 	blt.w	810b80a <__ieee754_powf+0x562>
 810b314:	ea4f 53e8 	mov.w	r3, r8, asr #23
 810b318:	f1c3 0396 	rsb	r3, r3, #150	; 0x96
 810b31c:	fa48 f603 	asr.w	r6, r8, r3
 810b320:	fa06 f303 	lsl.w	r3, r6, r3
 810b324:	4543      	cmp	r3, r8
 810b326:	f040 8270 	bne.w	810b80a <__ieee754_powf+0x562>
 810b32a:	f006 0601 	and.w	r6, r6, #1
 810b32e:	f1c6 0602 	rsb	r6, r6, #2
 810b332:	f1b8 5f7e 	cmp.w	r8, #1065353216	; 0x3f800000
 810b336:	d11f      	bne.n	810b378 <__ieee754_powf+0xd0>
 810b338:	2c00      	cmp	r4, #0
 810b33a:	f280 8263 	bge.w	810b804 <__ieee754_powf+0x55c>
 810b33e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 810b342:	ee87 0a88 	vdiv.f32	s0, s15, s16
 810b346:	e7c7      	b.n	810b2d8 <__ieee754_powf+0x30>
 810b348:	2600      	movs	r6, #0
 810b34a:	f1b8 4fff 	cmp.w	r8, #2139095040	; 0x7f800000
 810b34e:	d1f0      	bne.n	810b332 <__ieee754_powf+0x8a>
 810b350:	f1b5 5f7e 	cmp.w	r5, #1065353216	; 0x3f800000
 810b354:	f000 8250 	beq.w	810b7f8 <__ieee754_powf+0x550>
 810b358:	dd08      	ble.n	810b36c <__ieee754_powf+0xc4>
 810b35a:	ed9f 0ac1 	vldr	s0, [pc, #772]	; 810b660 <__ieee754_powf+0x3b8>
 810b35e:	2c00      	cmp	r4, #0
 810b360:	bfa8      	it	ge
 810b362:	eeb0 0a68 	vmovge.f32	s0, s17
 810b366:	e7b7      	b.n	810b2d8 <__ieee754_powf+0x30>
 810b368:	2602      	movs	r6, #2
 810b36a:	e7ee      	b.n	810b34a <__ieee754_powf+0xa2>
 810b36c:	2c00      	cmp	r4, #0
 810b36e:	f280 8246 	bge.w	810b7fe <__ieee754_powf+0x556>
 810b372:	eeb1 0a68 	vneg.f32	s0, s17
 810b376:	e7af      	b.n	810b2d8 <__ieee754_powf+0x30>
 810b378:	f1b4 4f80 	cmp.w	r4, #1073741824	; 0x40000000
 810b37c:	d102      	bne.n	810b384 <__ieee754_powf+0xdc>
 810b37e:	ee28 0a08 	vmul.f32	s0, s16, s16
 810b382:	e7a9      	b.n	810b2d8 <__ieee754_powf+0x30>
 810b384:	f1b4 5f7c 	cmp.w	r4, #1056964608	; 0x3f000000
 810b388:	eeb0 0a48 	vmov.f32	s0, s16
 810b38c:	d107      	bne.n	810b39e <__ieee754_powf+0xf6>
 810b38e:	2f00      	cmp	r7, #0
 810b390:	db05      	blt.n	810b39e <__ieee754_powf+0xf6>
 810b392:	ecbd 8b02 	vpop	{d8}
 810b396:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 810b39a:	f000 bad7 	b.w	810b94c <__ieee754_sqrtf>
 810b39e:	f7ff ff7b 	bl	810b298 <fabsf>
 810b3a2:	b125      	cbz	r5, 810b3ae <__ieee754_powf+0x106>
 810b3a4:	f027 4340 	bic.w	r3, r7, #3221225472	; 0xc0000000
 810b3a8:	f1b3 5f7e 	cmp.w	r3, #1065353216	; 0x3f800000
 810b3ac:	d115      	bne.n	810b3da <__ieee754_powf+0x132>
 810b3ae:	2c00      	cmp	r4, #0
 810b3b0:	bfbc      	itt	lt
 810b3b2:	eef7 7a00 	vmovlt.f32	s15, #112	; 0x3f800000  1.0
 810b3b6:	ee87 0a80 	vdivlt.f32	s0, s15, s0
 810b3ba:	2f00      	cmp	r7, #0
 810b3bc:	da8c      	bge.n	810b2d8 <__ieee754_powf+0x30>
 810b3be:	f1a5 557e 	sub.w	r5, r5, #1065353216	; 0x3f800000
 810b3c2:	4335      	orrs	r5, r6
 810b3c4:	d104      	bne.n	810b3d0 <__ieee754_powf+0x128>
 810b3c6:	ee70 7a40 	vsub.f32	s15, s0, s0
 810b3ca:	ee87 0aa7 	vdiv.f32	s0, s15, s15
 810b3ce:	e783      	b.n	810b2d8 <__ieee754_powf+0x30>
 810b3d0:	2e01      	cmp	r6, #1
 810b3d2:	d181      	bne.n	810b2d8 <__ieee754_powf+0x30>
 810b3d4:	eeb1 0a40 	vneg.f32	s0, s0
 810b3d8:	e77e      	b.n	810b2d8 <__ieee754_powf+0x30>
 810b3da:	0ff8      	lsrs	r0, r7, #31
 810b3dc:	3801      	subs	r0, #1
 810b3de:	ea56 0300 	orrs.w	r3, r6, r0
 810b3e2:	d104      	bne.n	810b3ee <__ieee754_powf+0x146>
 810b3e4:	ee38 8a48 	vsub.f32	s16, s16, s16
 810b3e8:	ee88 0a08 	vdiv.f32	s0, s16, s16
 810b3ec:	e774      	b.n	810b2d8 <__ieee754_powf+0x30>
 810b3ee:	f1b8 4f9a 	cmp.w	r8, #1291845632	; 0x4d000000
 810b3f2:	dd73      	ble.n	810b4dc <__ieee754_powf+0x234>
 810b3f4:	4b9b      	ldr	r3, [pc, #620]	; (810b664 <__ieee754_powf+0x3bc>)
 810b3f6:	429d      	cmp	r5, r3
 810b3f8:	dc08      	bgt.n	810b40c <__ieee754_powf+0x164>
 810b3fa:	2c00      	cmp	r4, #0
 810b3fc:	da0b      	bge.n	810b416 <__ieee754_powf+0x16e>
 810b3fe:	2000      	movs	r0, #0
 810b400:	ecbd 8b02 	vpop	{d8}
 810b404:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 810b408:	f000 ba34 	b.w	810b874 <__math_oflowf>
 810b40c:	4b96      	ldr	r3, [pc, #600]	; (810b668 <__ieee754_powf+0x3c0>)
 810b40e:	429d      	cmp	r5, r3
 810b410:	dd08      	ble.n	810b424 <__ieee754_powf+0x17c>
 810b412:	2c00      	cmp	r4, #0
 810b414:	dcf3      	bgt.n	810b3fe <__ieee754_powf+0x156>
 810b416:	2000      	movs	r0, #0
 810b418:	ecbd 8b02 	vpop	{d8}
 810b41c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 810b420:	f000 ba22 	b.w	810b868 <__math_uflowf>
 810b424:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 810b428:	ee30 0a67 	vsub.f32	s0, s0, s15
 810b42c:	eddf 6a8f 	vldr	s13, [pc, #572]	; 810b66c <__ieee754_powf+0x3c4>
 810b430:	eef5 7a00 	vmov.f32	s15, #80	; 0x3e800000  0.250
 810b434:	eee0 6a67 	vfms.f32	s13, s0, s15
 810b438:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 810b43c:	eee6 7ac0 	vfms.f32	s15, s13, s0
 810b440:	ee20 7a00 	vmul.f32	s14, s0, s0
 810b444:	ee27 7a27 	vmul.f32	s14, s14, s15
 810b448:	eddf 7a89 	vldr	s15, [pc, #548]	; 810b670 <__ieee754_powf+0x3c8>
 810b44c:	ee67 7ac7 	vnmul.f32	s15, s15, s14
 810b450:	ed9f 7a88 	vldr	s14, [pc, #544]	; 810b674 <__ieee754_powf+0x3cc>
 810b454:	eee0 7a07 	vfma.f32	s15, s0, s14
 810b458:	ed9f 7a87 	vldr	s14, [pc, #540]	; 810b678 <__ieee754_powf+0x3d0>
 810b45c:	eef0 6a67 	vmov.f32	s13, s15
 810b460:	eee0 6a07 	vfma.f32	s13, s0, s14
 810b464:	ee16 3a90 	vmov	r3, s13
 810b468:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 810b46c:	f023 030f 	bic.w	r3, r3, #15
 810b470:	ee06 3a90 	vmov	s13, r3
 810b474:	eee0 6a47 	vfms.f32	s13, s0, s14
 810b478:	ee77 7ae6 	vsub.f32	s15, s15, s13
 810b47c:	3e01      	subs	r6, #1
 810b47e:	f424 647f 	bic.w	r4, r4, #4080	; 0xff0
 810b482:	4306      	orrs	r6, r0
 810b484:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 810b488:	f024 040f 	bic.w	r4, r4, #15
 810b48c:	eeb7 8a00 	vmov.f32	s16, #112	; 0x3f800000  1.0
 810b490:	bf08      	it	eq
 810b492:	eeb0 8a47 	vmoveq.f32	s16, s14
 810b496:	ee07 4a10 	vmov	s14, r4
 810b49a:	ee67 0aa8 	vmul.f32	s1, s15, s17
 810b49e:	ee38 7ac7 	vsub.f32	s14, s17, s14
 810b4a2:	ee07 3a90 	vmov	s15, r3
 810b4a6:	eee7 0a27 	vfma.f32	s1, s14, s15
 810b4aa:	ee07 4a10 	vmov	s14, r4
 810b4ae:	ee67 7a87 	vmul.f32	s15, s15, s14
 810b4b2:	ee30 7aa7 	vadd.f32	s14, s1, s15
 810b4b6:	ee17 1a10 	vmov	r1, s14
 810b4ba:	2900      	cmp	r1, #0
 810b4bc:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 810b4c0:	f340 817c 	ble.w	810b7bc <__ieee754_powf+0x514>
 810b4c4:	f1b3 4f86 	cmp.w	r3, #1124073472	; 0x43000000
 810b4c8:	f340 80f8 	ble.w	810b6bc <__ieee754_powf+0x414>
 810b4cc:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 810b4d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 810b4d4:	bf4c      	ite	mi
 810b4d6:	2001      	movmi	r0, #1
 810b4d8:	2000      	movpl	r0, #0
 810b4da:	e791      	b.n	810b400 <__ieee754_powf+0x158>
 810b4dc:	f017 4fff 	tst.w	r7, #2139095040	; 0x7f800000
 810b4e0:	bf01      	itttt	eq
 810b4e2:	eddf 7a66 	vldreq	s15, [pc, #408]	; 810b67c <__ieee754_powf+0x3d4>
 810b4e6:	ee60 7a27 	vmuleq.f32	s15, s0, s15
 810b4ea:	f06f 0317 	mvneq.w	r3, #23
 810b4ee:	ee17 5a90 	vmoveq	r5, s15
 810b4f2:	ea4f 52e5 	mov.w	r2, r5, asr #23
 810b4f6:	bf18      	it	ne
 810b4f8:	2300      	movne	r3, #0
 810b4fa:	3a7f      	subs	r2, #127	; 0x7f
 810b4fc:	441a      	add	r2, r3
 810b4fe:	4b60      	ldr	r3, [pc, #384]	; (810b680 <__ieee754_powf+0x3d8>)
 810b500:	f3c5 0516 	ubfx	r5, r5, #0, #23
 810b504:	429d      	cmp	r5, r3
 810b506:	f045 517e 	orr.w	r1, r5, #1065353216	; 0x3f800000
 810b50a:	dd06      	ble.n	810b51a <__ieee754_powf+0x272>
 810b50c:	4b5d      	ldr	r3, [pc, #372]	; (810b684 <__ieee754_powf+0x3dc>)
 810b50e:	429d      	cmp	r5, r3
 810b510:	f340 80a4 	ble.w	810b65c <__ieee754_powf+0x3b4>
 810b514:	3201      	adds	r2, #1
 810b516:	f5a1 0100 	sub.w	r1, r1, #8388608	; 0x800000
 810b51a:	2500      	movs	r5, #0
 810b51c:	4b5a      	ldr	r3, [pc, #360]	; (810b688 <__ieee754_powf+0x3e0>)
 810b51e:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 810b522:	ee07 1a10 	vmov	s14, r1
 810b526:	edd3 5a00 	vldr	s11, [r3]
 810b52a:	4b58      	ldr	r3, [pc, #352]	; (810b68c <__ieee754_powf+0x3e4>)
 810b52c:	ee75 7a87 	vadd.f32	s15, s11, s14
 810b530:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 810b534:	eec6 4aa7 	vdiv.f32	s9, s13, s15
 810b538:	1049      	asrs	r1, r1, #1
 810b53a:	f041 5100 	orr.w	r1, r1, #536870912	; 0x20000000
 810b53e:	f501 2180 	add.w	r1, r1, #262144	; 0x40000
 810b542:	eb01 5145 	add.w	r1, r1, r5, lsl #21
 810b546:	ee37 6a65 	vsub.f32	s12, s14, s11
 810b54a:	ee07 1a90 	vmov	s15, r1
 810b54e:	ee26 5a24 	vmul.f32	s10, s12, s9
 810b552:	ee77 5ae5 	vsub.f32	s11, s15, s11
 810b556:	ee15 7a10 	vmov	r7, s10
 810b55a:	401f      	ands	r7, r3
 810b55c:	ee06 7a90 	vmov	s13, r7
 810b560:	eea6 6ae7 	vfms.f32	s12, s13, s15
 810b564:	ee37 7a65 	vsub.f32	s14, s14, s11
 810b568:	ee65 7a05 	vmul.f32	s15, s10, s10
 810b56c:	eea6 6ac7 	vfms.f32	s12, s13, s14
 810b570:	eddf 5a47 	vldr	s11, [pc, #284]	; 810b690 <__ieee754_powf+0x3e8>
 810b574:	ed9f 7a47 	vldr	s14, [pc, #284]	; 810b694 <__ieee754_powf+0x3ec>
 810b578:	eee7 5a87 	vfma.f32	s11, s15, s14
 810b57c:	ed9f 7a46 	vldr	s14, [pc, #280]	; 810b698 <__ieee754_powf+0x3f0>
 810b580:	eea5 7aa7 	vfma.f32	s14, s11, s15
 810b584:	eddf 5a39 	vldr	s11, [pc, #228]	; 810b66c <__ieee754_powf+0x3c4>
 810b588:	eee7 5a27 	vfma.f32	s11, s14, s15
 810b58c:	ed9f 7a43 	vldr	s14, [pc, #268]	; 810b69c <__ieee754_powf+0x3f4>
 810b590:	eea5 7aa7 	vfma.f32	s14, s11, s15
 810b594:	eddf 5a42 	vldr	s11, [pc, #264]	; 810b6a0 <__ieee754_powf+0x3f8>
 810b598:	ee26 6a24 	vmul.f32	s12, s12, s9
 810b59c:	eee7 5a27 	vfma.f32	s11, s14, s15
 810b5a0:	ee35 7a26 	vadd.f32	s14, s10, s13
 810b5a4:	ee67 4aa7 	vmul.f32	s9, s15, s15
 810b5a8:	ee27 7a06 	vmul.f32	s14, s14, s12
 810b5ac:	eef0 7a08 	vmov.f32	s15, #8	; 0x40400000  3.0
 810b5b0:	eea4 7aa5 	vfma.f32	s14, s9, s11
 810b5b4:	eef0 5a67 	vmov.f32	s11, s15
 810b5b8:	eee6 5aa6 	vfma.f32	s11, s13, s13
 810b5bc:	ee75 5a87 	vadd.f32	s11, s11, s14
 810b5c0:	ee15 1a90 	vmov	r1, s11
 810b5c4:	4019      	ands	r1, r3
 810b5c6:	ee05 1a90 	vmov	s11, r1
 810b5ca:	ee75 7ae7 	vsub.f32	s15, s11, s15
 810b5ce:	eee6 7ae6 	vfms.f32	s15, s13, s13
 810b5d2:	ee77 7a67 	vsub.f32	s15, s14, s15
 810b5d6:	ee67 7a85 	vmul.f32	s15, s15, s10
 810b5da:	eee6 7a25 	vfma.f32	s15, s12, s11
 810b5de:	eeb0 6a67 	vmov.f32	s12, s15
 810b5e2:	eea6 6aa5 	vfma.f32	s12, s13, s11
 810b5e6:	ee16 1a10 	vmov	r1, s12
 810b5ea:	4019      	ands	r1, r3
 810b5ec:	ee07 1a10 	vmov	s14, r1
 810b5f0:	eea6 7ae5 	vfms.f32	s14, s13, s11
 810b5f4:	ee06 1a10 	vmov	s12, r1
 810b5f8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 810b5fc:	ed9f 7a29 	vldr	s14, [pc, #164]	; 810b6a4 <__ieee754_powf+0x3fc>
 810b600:	4929      	ldr	r1, [pc, #164]	; (810b6a8 <__ieee754_powf+0x400>)
 810b602:	eddf 5a2a 	vldr	s11, [pc, #168]	; 810b6ac <__ieee754_powf+0x404>
 810b606:	ee67 7a87 	vmul.f32	s15, s15, s14
 810b60a:	ed9f 7a29 	vldr	s14, [pc, #164]	; 810b6b0 <__ieee754_powf+0x408>
 810b60e:	eee6 7a07 	vfma.f32	s15, s12, s14
 810b612:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 810b616:	ed91 7a00 	vldr	s14, [r1]
 810b61a:	ee77 7a87 	vadd.f32	s15, s15, s14
 810b61e:	ee07 2a10 	vmov	s14, r2
 810b622:	eef0 6a67 	vmov.f32	s13, s15
 810b626:	4a23      	ldr	r2, [pc, #140]	; (810b6b4 <__ieee754_powf+0x40c>)
 810b628:	eee6 6a25 	vfma.f32	s13, s12, s11
 810b62c:	eb02 0285 	add.w	r2, r2, r5, lsl #2
 810b630:	ed92 5a00 	vldr	s10, [r2]
 810b634:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 810b638:	ee76 6a85 	vadd.f32	s13, s13, s10
 810b63c:	ee76 6a87 	vadd.f32	s13, s13, s14
 810b640:	ee16 2a90 	vmov	r2, s13
 810b644:	4013      	ands	r3, r2
 810b646:	ee06 3a90 	vmov	s13, r3
 810b64a:	ee36 7ac7 	vsub.f32	s14, s13, s14
 810b64e:	ee37 7a45 	vsub.f32	s14, s14, s10
 810b652:	eea6 7a65 	vfms.f32	s14, s12, s11
 810b656:	ee77 7ac7 	vsub.f32	s15, s15, s14
 810b65a:	e70f      	b.n	810b47c <__ieee754_powf+0x1d4>
 810b65c:	2501      	movs	r5, #1
 810b65e:	e75d      	b.n	810b51c <__ieee754_powf+0x274>
 810b660:	00000000 	.word	0x00000000
 810b664:	3f7ffff3 	.word	0x3f7ffff3
 810b668:	3f800007 	.word	0x3f800007
 810b66c:	3eaaaaab 	.word	0x3eaaaaab
 810b670:	3fb8aa3b 	.word	0x3fb8aa3b
 810b674:	36eca570 	.word	0x36eca570
 810b678:	3fb8aa00 	.word	0x3fb8aa00
 810b67c:	4b800000 	.word	0x4b800000
 810b680:	001cc471 	.word	0x001cc471
 810b684:	005db3d6 	.word	0x005db3d6
 810b688:	08179b60 	.word	0x08179b60
 810b68c:	fffff000 	.word	0xfffff000
 810b690:	3e6c3255 	.word	0x3e6c3255
 810b694:	3e53f142 	.word	0x3e53f142
 810b698:	3e8ba305 	.word	0x3e8ba305
 810b69c:	3edb6db7 	.word	0x3edb6db7
 810b6a0:	3f19999a 	.word	0x3f19999a
 810b6a4:	3f76384f 	.word	0x3f76384f
 810b6a8:	08179b70 	.word	0x08179b70
 810b6ac:	3f763800 	.word	0x3f763800
 810b6b0:	369dc3a0 	.word	0x369dc3a0
 810b6b4:	08179b68 	.word	0x08179b68
 810b6b8:	3338aa3c 	.word	0x3338aa3c
 810b6bc:	f040 8093 	bne.w	810b7e6 <__ieee754_powf+0x53e>
 810b6c0:	ed5f 6a03 	vldr	s13, [pc, #-12]	; 810b6b8 <__ieee754_powf+0x410>
 810b6c4:	ee37 7a67 	vsub.f32	s14, s14, s15
 810b6c8:	ee70 6aa6 	vadd.f32	s13, s1, s13
 810b6cc:	eef4 6ac7 	vcmpe.f32	s13, s14
 810b6d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 810b6d4:	f73f aefa 	bgt.w	810b4cc <__ieee754_powf+0x224>
 810b6d8:	15db      	asrs	r3, r3, #23
 810b6da:	3b7e      	subs	r3, #126	; 0x7e
 810b6dc:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 810b6e0:	4118      	asrs	r0, r3
 810b6e2:	4408      	add	r0, r1
 810b6e4:	f3c0 53c7 	ubfx	r3, r0, #23, #8
 810b6e8:	4a49      	ldr	r2, [pc, #292]	; (810b810 <__ieee754_powf+0x568>)
 810b6ea:	3b7f      	subs	r3, #127	; 0x7f
 810b6ec:	411a      	asrs	r2, r3
 810b6ee:	4002      	ands	r2, r0
 810b6f0:	ee07 2a10 	vmov	s14, r2
 810b6f4:	f3c0 0016 	ubfx	r0, r0, #0, #23
 810b6f8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 810b6fc:	f1c3 0317 	rsb	r3, r3, #23
 810b700:	4118      	asrs	r0, r3
 810b702:	2900      	cmp	r1, #0
 810b704:	ee77 7ac7 	vsub.f32	s15, s15, s14
 810b708:	bfb8      	it	lt
 810b70a:	4240      	neglt	r0, r0
 810b70c:	ee37 7aa0 	vadd.f32	s14, s15, s1
 810b710:	eddf 6a40 	vldr	s13, [pc, #256]	; 810b814 <__ieee754_powf+0x56c>
 810b714:	ed9f 6a40 	vldr	s12, [pc, #256]	; 810b818 <__ieee754_powf+0x570>
 810b718:	ee17 3a10 	vmov	r3, s14
 810b71c:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 810b720:	f023 030f 	bic.w	r3, r3, #15
 810b724:	ee07 3a10 	vmov	s14, r3
 810b728:	ee77 7a67 	vsub.f32	s15, s14, s15
 810b72c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 810b730:	ee70 0ae7 	vsub.f32	s1, s1, s15
 810b734:	eddf 7a39 	vldr	s15, [pc, #228]	; 810b81c <__ieee754_powf+0x574>
 810b738:	ee67 7a27 	vmul.f32	s15, s14, s15
 810b73c:	eee0 7aa6 	vfma.f32	s15, s1, s13
 810b740:	eef0 6a67 	vmov.f32	s13, s15
 810b744:	eee7 6a06 	vfma.f32	s13, s14, s12
 810b748:	eef0 5a66 	vmov.f32	s11, s13
 810b74c:	eee7 5a46 	vfms.f32	s11, s14, s12
 810b750:	ee26 7aa6 	vmul.f32	s14, s13, s13
 810b754:	ee77 7ae5 	vsub.f32	s15, s15, s11
 810b758:	ed9f 6a31 	vldr	s12, [pc, #196]	; 810b820 <__ieee754_powf+0x578>
 810b75c:	eddf 5a31 	vldr	s11, [pc, #196]	; 810b824 <__ieee754_powf+0x57c>
 810b760:	eea7 6a25 	vfma.f32	s12, s14, s11
 810b764:	eddf 5a30 	vldr	s11, [pc, #192]	; 810b828 <__ieee754_powf+0x580>
 810b768:	eee6 5a07 	vfma.f32	s11, s12, s14
 810b76c:	ed9f 6a2f 	vldr	s12, [pc, #188]	; 810b82c <__ieee754_powf+0x584>
 810b770:	eea5 6a87 	vfma.f32	s12, s11, s14
 810b774:	eddf 5a2e 	vldr	s11, [pc, #184]	; 810b830 <__ieee754_powf+0x588>
 810b778:	eee6 5a07 	vfma.f32	s11, s12, s14
 810b77c:	eeb0 6a66 	vmov.f32	s12, s13
 810b780:	eea5 6ac7 	vfms.f32	s12, s11, s14
 810b784:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
 810b788:	ee66 5a86 	vmul.f32	s11, s13, s12
 810b78c:	ee36 6a47 	vsub.f32	s12, s12, s14
 810b790:	eee6 7aa7 	vfma.f32	s15, s13, s15
 810b794:	ee85 7a86 	vdiv.f32	s14, s11, s12
 810b798:	ee77 7a67 	vsub.f32	s15, s14, s15
 810b79c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 810b7a0:	ee30 0a67 	vsub.f32	s0, s0, s15
 810b7a4:	ee10 3a10 	vmov	r3, s0
 810b7a8:	eb03 53c0 	add.w	r3, r3, r0, lsl #23
 810b7ac:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 810b7b0:	da1f      	bge.n	810b7f2 <__ieee754_powf+0x54a>
 810b7b2:	f000 f865 	bl	810b880 <scalbnf>
 810b7b6:	ee20 0a08 	vmul.f32	s0, s0, s16
 810b7ba:	e58d      	b.n	810b2d8 <__ieee754_powf+0x30>
 810b7bc:	4a1d      	ldr	r2, [pc, #116]	; (810b834 <__ieee754_powf+0x58c>)
 810b7be:	4293      	cmp	r3, r2
 810b7c0:	dd07      	ble.n	810b7d2 <__ieee754_powf+0x52a>
 810b7c2:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 810b7c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 810b7ca:	bf4c      	ite	mi
 810b7cc:	2001      	movmi	r0, #1
 810b7ce:	2000      	movpl	r0, #0
 810b7d0:	e622      	b.n	810b418 <__ieee754_powf+0x170>
 810b7d2:	d108      	bne.n	810b7e6 <__ieee754_powf+0x53e>
 810b7d4:	ee37 7a67 	vsub.f32	s14, s14, s15
 810b7d8:	eeb4 7ae0 	vcmpe.f32	s14, s1
 810b7dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 810b7e0:	f6ff af7a 	blt.w	810b6d8 <__ieee754_powf+0x430>
 810b7e4:	e7ed      	b.n	810b7c2 <__ieee754_powf+0x51a>
 810b7e6:	f1b3 5f7c 	cmp.w	r3, #1056964608	; 0x3f000000
 810b7ea:	f73f af75 	bgt.w	810b6d8 <__ieee754_powf+0x430>
 810b7ee:	2000      	movs	r0, #0
 810b7f0:	e78c      	b.n	810b70c <__ieee754_powf+0x464>
 810b7f2:	ee00 3a10 	vmov	s0, r3
 810b7f6:	e7de      	b.n	810b7b6 <__ieee754_powf+0x50e>
 810b7f8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 810b7fc:	e56c      	b.n	810b2d8 <__ieee754_powf+0x30>
 810b7fe:	ed9f 0a0e 	vldr	s0, [pc, #56]	; 810b838 <__ieee754_powf+0x590>
 810b802:	e569      	b.n	810b2d8 <__ieee754_powf+0x30>
 810b804:	eeb0 0a48 	vmov.f32	s0, s16
 810b808:	e566      	b.n	810b2d8 <__ieee754_powf+0x30>
 810b80a:	2600      	movs	r6, #0
 810b80c:	e591      	b.n	810b332 <__ieee754_powf+0x8a>
 810b80e:	bf00      	nop
 810b810:	ff800000 	.word	0xff800000
 810b814:	3f317218 	.word	0x3f317218
 810b818:	3f317200 	.word	0x3f317200
 810b81c:	35bfbe8c 	.word	0x35bfbe8c
 810b820:	b5ddea0e 	.word	0xb5ddea0e
 810b824:	3331bb4c 	.word	0x3331bb4c
 810b828:	388ab355 	.word	0x388ab355
 810b82c:	bb360b61 	.word	0xbb360b61
 810b830:	3e2aaaab 	.word	0x3e2aaaab
 810b834:	43160000 	.word	0x43160000
 810b838:	00000000 	.word	0x00000000

0810b83c <with_errnof>:
 810b83c:	b513      	push	{r0, r1, r4, lr}
 810b83e:	4604      	mov	r4, r0
 810b840:	ed8d 0a01 	vstr	s0, [sp, #4]
 810b844:	f000 f88e 	bl	810b964 <__errno>
 810b848:	ed9d 0a01 	vldr	s0, [sp, #4]
 810b84c:	6004      	str	r4, [r0, #0]
 810b84e:	b002      	add	sp, #8
 810b850:	bd10      	pop	{r4, pc}

0810b852 <xflowf>:
 810b852:	b130      	cbz	r0, 810b862 <xflowf+0x10>
 810b854:	eef1 7a40 	vneg.f32	s15, s0
 810b858:	ee27 0a80 	vmul.f32	s0, s15, s0
 810b85c:	2022      	movs	r0, #34	; 0x22
 810b85e:	f7ff bfed 	b.w	810b83c <with_errnof>
 810b862:	eef0 7a40 	vmov.f32	s15, s0
 810b866:	e7f7      	b.n	810b858 <xflowf+0x6>

0810b868 <__math_uflowf>:
 810b868:	ed9f 0a01 	vldr	s0, [pc, #4]	; 810b870 <__math_uflowf+0x8>
 810b86c:	f7ff bff1 	b.w	810b852 <xflowf>
 810b870:	10000000 	.word	0x10000000

0810b874 <__math_oflowf>:
 810b874:	ed9f 0a01 	vldr	s0, [pc, #4]	; 810b87c <__math_oflowf+0x8>
 810b878:	f7ff bfeb 	b.w	810b852 <xflowf>
 810b87c:	70000000 	.word	0x70000000

0810b880 <scalbnf>:
 810b880:	ee10 3a10 	vmov	r3, s0
 810b884:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 810b888:	d02b      	beq.n	810b8e2 <scalbnf+0x62>
 810b88a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 810b88e:	d302      	bcc.n	810b896 <scalbnf+0x16>
 810b890:	ee30 0a00 	vadd.f32	s0, s0, s0
 810b894:	4770      	bx	lr
 810b896:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 810b89a:	d123      	bne.n	810b8e4 <scalbnf+0x64>
 810b89c:	4b24      	ldr	r3, [pc, #144]	; (810b930 <scalbnf+0xb0>)
 810b89e:	eddf 7a25 	vldr	s15, [pc, #148]	; 810b934 <scalbnf+0xb4>
 810b8a2:	4298      	cmp	r0, r3
 810b8a4:	ee20 0a27 	vmul.f32	s0, s0, s15
 810b8a8:	db17      	blt.n	810b8da <scalbnf+0x5a>
 810b8aa:	ee10 3a10 	vmov	r3, s0
 810b8ae:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 810b8b2:	3a19      	subs	r2, #25
 810b8b4:	f24c 3150 	movw	r1, #50000	; 0xc350
 810b8b8:	4288      	cmp	r0, r1
 810b8ba:	dd15      	ble.n	810b8e8 <scalbnf+0x68>
 810b8bc:	eddf 7a1e 	vldr	s15, [pc, #120]	; 810b938 <scalbnf+0xb8>
 810b8c0:	eddf 6a1e 	vldr	s13, [pc, #120]	; 810b93c <scalbnf+0xbc>
 810b8c4:	ee10 3a10 	vmov	r3, s0
 810b8c8:	eeb0 7a67 	vmov.f32	s14, s15
 810b8cc:	2b00      	cmp	r3, #0
 810b8ce:	bfb8      	it	lt
 810b8d0:	eef0 7a66 	vmovlt.f32	s15, s13
 810b8d4:	ee27 0a87 	vmul.f32	s0, s15, s14
 810b8d8:	4770      	bx	lr
 810b8da:	eddf 7a19 	vldr	s15, [pc, #100]	; 810b940 <scalbnf+0xc0>
 810b8de:	ee27 0a80 	vmul.f32	s0, s15, s0
 810b8e2:	4770      	bx	lr
 810b8e4:	0dd2      	lsrs	r2, r2, #23
 810b8e6:	e7e5      	b.n	810b8b4 <scalbnf+0x34>
 810b8e8:	4410      	add	r0, r2
 810b8ea:	28fe      	cmp	r0, #254	; 0xfe
 810b8ec:	dce6      	bgt.n	810b8bc <scalbnf+0x3c>
 810b8ee:	2800      	cmp	r0, #0
 810b8f0:	dd06      	ble.n	810b900 <scalbnf+0x80>
 810b8f2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 810b8f6:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 810b8fa:	ee00 3a10 	vmov	s0, r3
 810b8fe:	4770      	bx	lr
 810b900:	f110 0f16 	cmn.w	r0, #22
 810b904:	da09      	bge.n	810b91a <scalbnf+0x9a>
 810b906:	eddf 7a0e 	vldr	s15, [pc, #56]	; 810b940 <scalbnf+0xc0>
 810b90a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 810b944 <scalbnf+0xc4>
 810b90e:	ee10 3a10 	vmov	r3, s0
 810b912:	eeb0 7a67 	vmov.f32	s14, s15
 810b916:	2b00      	cmp	r3, #0
 810b918:	e7d9      	b.n	810b8ce <scalbnf+0x4e>
 810b91a:	3019      	adds	r0, #25
 810b91c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 810b920:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 810b924:	ed9f 0a08 	vldr	s0, [pc, #32]	; 810b948 <scalbnf+0xc8>
 810b928:	ee07 3a90 	vmov	s15, r3
 810b92c:	e7d7      	b.n	810b8de <scalbnf+0x5e>
 810b92e:	bf00      	nop
 810b930:	ffff3cb0 	.word	0xffff3cb0
 810b934:	4c000000 	.word	0x4c000000
 810b938:	7149f2ca 	.word	0x7149f2ca
 810b93c:	f149f2ca 	.word	0xf149f2ca
 810b940:	0da24260 	.word	0x0da24260
 810b944:	8da24260 	.word	0x8da24260
 810b948:	33000000 	.word	0x33000000

0810b94c <__ieee754_sqrtf>:
 810b94c:	eeb1 0ac0 	vsqrt.f32	s0, s0
 810b950:	4770      	bx	lr

0810b952 <memset>:
 810b952:	4402      	add	r2, r0
 810b954:	4603      	mov	r3, r0
 810b956:	4293      	cmp	r3, r2
 810b958:	d100      	bne.n	810b95c <memset+0xa>
 810b95a:	4770      	bx	lr
 810b95c:	f803 1b01 	strb.w	r1, [r3], #1
 810b960:	e7f9      	b.n	810b956 <memset+0x4>
	...

0810b964 <__errno>:
 810b964:	4b01      	ldr	r3, [pc, #4]	; (810b96c <__errno+0x8>)
 810b966:	6818      	ldr	r0, [r3, #0]
 810b968:	4770      	bx	lr
 810b96a:	bf00      	nop
 810b96c:	100073cc 	.word	0x100073cc

0810b970 <__libc_init_array>:
 810b970:	b570      	push	{r4, r5, r6, lr}
 810b972:	4d0d      	ldr	r5, [pc, #52]	; (810b9a8 <__libc_init_array+0x38>)
 810b974:	4c0d      	ldr	r4, [pc, #52]	; (810b9ac <__libc_init_array+0x3c>)
 810b976:	1b64      	subs	r4, r4, r5
 810b978:	10a4      	asrs	r4, r4, #2
 810b97a:	2600      	movs	r6, #0
 810b97c:	42a6      	cmp	r6, r4
 810b97e:	d109      	bne.n	810b994 <__libc_init_array+0x24>
 810b980:	4d0b      	ldr	r5, [pc, #44]	; (810b9b0 <__libc_init_array+0x40>)
 810b982:	4c0c      	ldr	r4, [pc, #48]	; (810b9b4 <__libc_init_array+0x44>)
 810b984:	f000 f818 	bl	810b9b8 <_init>
 810b988:	1b64      	subs	r4, r4, r5
 810b98a:	10a4      	asrs	r4, r4, #2
 810b98c:	2600      	movs	r6, #0
 810b98e:	42a6      	cmp	r6, r4
 810b990:	d105      	bne.n	810b99e <__libc_init_array+0x2e>
 810b992:	bd70      	pop	{r4, r5, r6, pc}
 810b994:	f855 3b04 	ldr.w	r3, [r5], #4
 810b998:	4798      	blx	r3
 810b99a:	3601      	adds	r6, #1
 810b99c:	e7ee      	b.n	810b97c <__libc_init_array+0xc>
 810b99e:	f855 3b04 	ldr.w	r3, [r5], #4
 810b9a2:	4798      	blx	r3
 810b9a4:	3601      	adds	r6, #1
 810b9a6:	e7f2      	b.n	810b98e <__libc_init_array+0x1e>
 810b9a8:	08179b78 	.word	0x08179b78
 810b9ac:	08179b78 	.word	0x08179b78
 810b9b0:	08179b78 	.word	0x08179b78
 810b9b4:	08179b7c 	.word	0x08179b7c

0810b9b8 <_init>:
 810b9b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 810b9ba:	bf00      	nop
 810b9bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 810b9be:	bc08      	pop	{r3}
 810b9c0:	469e      	mov	lr, r3
 810b9c2:	4770      	bx	lr

0810b9c4 <_fini>:
 810b9c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 810b9c6:	bf00      	nop
 810b9c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 810b9ca:	bc08      	pop	{r3}
 810b9cc:	469e      	mov	lr, r3
 810b9ce:	4770      	bx	lr
